openapi: 3.0.1
x-speakeasy-test: true
info:
    title: FireHydrant API
    version: 0.0.1
servers:
    - url: https://api.firehydrant.io/
security:
    - api_key: []
tags:
    - name: Incidents
      description: Operations related to Incidents
    - name: Account Settings
      description: Operations related to Account Settings
    - name: Incident Settings
      description: Operations related to Incident Settings
    - name: Alerts
      description: Operations related to Alerts
    - name: Services
      description: Operations related to Services
    - name: Environments
      description: Operations related to Environments
    - name: Functionalities
      description: Operations related to Functionalities
    - name: Teams
      description: Operations related to Teams
    - name: Users
      description: Operations related to Users
    - name: Changes
      description: Operations related to Changes
    - name: Runbooks
      description: Operations related to Runbooks
    - name: Tasks
      description: Operations related to Tasks
    - name: Status Pages
      description: Operations related to Status Pages
    - name: Communication
      description: Operations related to Communication
    - name: Metrics/Reporting
      description: Operations related to Metrics/Reporting
    - name: Integrations
      description: Operations related to Integrations
    - name: Webhooks
      description: Operations related to Webhooks
    - name: Conversations
      description: Operations related to Conversations
    - name: Retrospectives
      description: Operations related to Retrospectives
    - name: Signals
      description: Operations related to Signals
    - name: SCIM
      description: Operations related to SCIM
paths:
    "/v1/ai/preferences":
        get:
            tags:
                - Account Settings
            summary: Get AI preferences
            description: Retrieves the current AI preferences
            operationId: getAiPreferences
            responses:
                '200':
                    description: Retrieves the current AI preferences
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/AI_Entities_PreferencesEntity"
        patch:
            tags:
                - Account Settings
            summary: Update AI preferences
            description: Updates the AI preferences
            operationId: updateAiPreferences
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                ai:
                                    type: boolean
                                    description: Whether to enable AI features
                                summaries:
                                    type: boolean
                                    description: Whether to enable incident summaries
                                description:
                                    type: boolean
                                    description: Whether to enable incident descriptions
                                impact:
                                    type: boolean
                                    description: Whether to enable incident impact
                                updates:
                                    type: boolean
                                    description: Whether to enable incident updates
                                retros:
                                    type: boolean
                                    description: Whether to enable incident retrospectives
                                followups:
                                    type: boolean
                                    description: Whether to enable incident followups
                                similar_incidents:
                                    type: boolean
                                    description: Whether to enable similar incidents
            responses:
                '200':
                    description: Updates the AI preferences
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/AI_Entities_PreferencesEntity"
    "/v1/ai/summarize_incident/{incident_id}/{generated_summary_id}/vote":
        put:
            tags:
                - Account Settings
            operationId: voteOnIncidentSummary
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: generated_summary_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - direction
                            type: object
                            properties:
                                direction:
                                    type: string
                                    enum:
                                        - up
                                        - down
                required: true
            responses:
                '200':
                    description: updated Vote
                    content: {}
            summary: Vote on an AI-generated incident summary
    "/v1/ai/summarize_incident/{incident_id}/{generated_summary_id}/voted":
        get:
            tags:
                - Incidents
            operationId: getIncidentAiSummaryVoteStatus
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: generated_summary_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get Voted(s)
                    content: {}
            summary: Get the vote status for an AI-generated incident summary
    "/v1/alerts":
        get:
            tags:
                - Alerts
            summary: List alerts
            description: Retrieve all alerts from third parties
            operationId: listAlerts
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: A text query for alerts
                  schema:
                    type: string
                - name: users
                  in: query
                  description: A comma separated list of user IDs. This currently only works for Signals alerts.
                  schema:
                    type: string
                - name: teams
                  in: query
                  description: A comma separated list of team IDs. This currently only works for Signals alerts.
                  schema:
                    type: string
                - name: signal_rules
                  in: query
                  description: A comma separated list of signals rule IDs. This currently only works for Signals alerts.
                  schema:
                    type: string
                - name: environments
                  in: query
                  description: A comma separated list of environment IDs. This currently only works for Signals alerts.
                  schema:
                    type: string
                - name: functionalities
                  in: query
                  description: A comma separated list of functionality IDs. This currently only works for Signals alerts.
                  schema:
                    type: string
                - name: services
                  in: query
                  description: A comma separated list of service IDs. This currently only works for Signals alerts.
                  schema:
                    type: string
                - name: tags
                  in: query
                  description: A comma separated list of tags. This currently only works for Signals alerts.
                  schema:
                    type: string
                - name: tag_match_strategy
                  in: query
                  description: The strategy to match tags. `any` will return alerts that have at least one of the supplied tags, `match_all` will return only alerts that have all of the supplied tags, and `exclude` will only return alerts that have none of the supplied tags. This currently only works for Signals alerts.
                  schema:
                    type: string
                    enum:
                        - any
                        - match_all
                        - exclude
                - name: statuses
                  in: query
                  description: 'A comma separated list of statuses to filter by. Valid statuses are: opened, acknowledged, resolved, ignored, or expired'
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve all alerts from third parties
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Alerts_AlertEntityPaginated"
    "/v1/alerts/{alert_id}":
        get:
            tags:
                - Alerts
            summary: Get an alert
            description: Retrieve a single alert
            operationId: getAlert
            parameters:
                - name: alert_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single alert
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Alerts_AlertEntity"
    "/v1/bootstrap":
        get:
            tags:
                - Account Settings
            operationId: getBootstrap
            responses:
                '200':
                    description: get Bootstrap(s)
                    content: {}
            summary: Get initial application configuration and settings
    "/v1/catalogs/{catalog_id}/ingest":
        post:
            tags:
                - Services
            summary: Ingest service catalog data
            description: Accepts catalog data in the configured format and asyncronously processes the data to incorporate changes into service catalog.
            operationId: ingestCatalogData
            parameters:
                - name: catalog_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1CatalogsCatalogIdIngest"
                required: true
            responses:
                '201':
                    description: Accepts catalog data in the configured format and asyncronously processes the data to incorporate changes into service catalog.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Imports_ImportEntity"
            x-codegen-request-body-name: postV1CatalogsCatalogIdIngest
    "/v1/catalogs/{catalog_id}/refresh":
        get:
            tags:
                - Services
            summary: Refresh a service catalog
            description: Schedules an async task to re-import catalog info and update catalog data accordingly.
            operationId: refreshCatalog
            parameters:
                - name: catalog_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Schedules an async task to re-import catalog info and update catalog data accordingly.
                    content: {}
    "/v1/change_types":
        get:
            tags:
                - Changes
            description: Lists all change types
            operationId: listChangeTypes
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists all change types
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChangeTypeEntityPaginated"
            summary: List change types
    "/v1/changes":
        get:
            tags:
                - Changes
            description: Lists all changes
            operationId: listChanges
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: Filter changes by summary
                  schema:
                    type: string
            responses:
                '200':
                    description: Lists all changes
                    content: {}
            summary: List changes
        post:
            tags:
                - Changes
            description: Create a new change entry
            operationId: createChange
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1Changes"
                required: true
            responses:
                '201':
                    description: Create a new change entry
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChangeEntity"
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
            x-codegen-request-body-name: postV1Changes
            summary: Create a change
    "/v1/changes/events":
        get:
            tags:
                - Changes
            summary: List change events
            description: 'List change events for the organization. Note: Not all information is included on a change event like attachments and related changes. You must fetch a change event separately to retrieve all of the information about it'
            operationId: listChangeEvents
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: saved_search_id
                  in: query
                  description: The id of a previously saved search.
                  schema:
                    type: string
                - name: query
                  in: query
                  description: A text query for change events
                  schema:
                    type: string
                - name: labels
                  in: query
                  description: A comma separated list of label key / values in the format of "key=value,key2=value2". To filter change events that have a key (with no specific value), omit the value
                  schema:
                    type: string
                - name: environments
                  in: query
                  description: A comma separated list of environment IDs
                  schema:
                    type: string
                - name: services
                  in: query
                  description: A comma separated list of service IDs
                  schema:
                    type: string
                - name: starts_at
                  in: query
                  description: The start time to start returning change events from
                  schema:
                    type: string
                - name: ends_at
                  in: query
                  description: The end time to return change events up to
                  schema:
                    type: string
                    format: date-time
            responses:
                '200':
                    description: 'List change events for the organization. Note: Not all information is included on a change event like attachments and related changes. You must fetch a change event separately to retrieve all of the information about it'
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChangeEventSlimEntityPaginated"
        post:
            tags:
                - Changes
            summary: Create a change event
            description: Create a change event
            operationId: createChangeEvent
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/ChangesEvents"
                required: true
            responses:
                '201':
                    description: Create a change event
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChangeEventEntity"
            x-codegen-request-body-name: postV1ChangesEvents
    "/v1/changes/events/{change_event_id}":
        get:
            tags:
                - Changes
            summary: Get a change event
            description: Retrieve a change event
            operationId: getChangeEvent
            parameters:
                - name: change_event_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a change event
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChangeEventEntity"
        delete:
            tags:
                - Changes
            summary: Delete a change event
            description: Delete a change event
            operationId: deleteChangeEvent
            parameters:
                - name: change_event_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a change event
                    content: {}
        patch:
            tags:
                - Changes
            summary: Update a change event
            description: Update a change event
            operationId: updateChangeEvent
            parameters:
                - name: change_event_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1ChangesEventsChangeEventId"
                required: true
            responses:
                '200':
                    description: Update a change event
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChangeEventEntity"
            x-codegen-request-body-name: patchV1ChangesEventsChangeEventId
    "/v1/changes/{change_id}":
        delete:
            tags:
                - Changes
            description: Archive a change entry
            operationId: deleteChange
            parameters:
                - name: change_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Archive a change entry
                    content: {}
            summary: Archive a change
        patch:
            tags:
                - Changes
            description: Update a change entry
            operationId: updateChange
            parameters:
                - name: change_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1ChangesChangeId"
                required: true
            responses:
                '200':
                    description: Update a change entry
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChangeEntity"
            x-codegen-request-body-name: patchV1ChangesChangeId
            summary: Update a change
    "/v1/changes/{change_id}/identities":
        get:
            tags:
                - Changes
            description: Retrieve all identities for the change
            operationId: listChangeIdentities
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: change_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve all identities for the change
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChangeIdentityEntityPaginated"
            summary: List identities for a change
        post:
            tags:
                - Changes
            description: Create an identity for this change
            operationId: createChangeIdentity
            parameters:
                - name: change_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1ChangesChangeIdIdentities"
                required: true
            responses:
                '201':
                    description: Create an identity for this change
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChangeIdentityEntity"
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
            x-codegen-request-body-name: postV1ChangesChangeIdIdentities
            summary: Create an identity for a change
    "/v1/changes/{change_id}/identities/{identity_id}":
        delete:
            tags:
                - Changes
            description: Delete an identity
            operationId: deleteChangeIdentity
            parameters:
                - name: identity_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: change_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete an identity
                    content: {}
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
            summary: Delete an identity from a change
        patch:
            tags:
                - Changes
            description: Update an identity
            operationId: updateChangeIdentity
            parameters:
                - name: identity_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: change_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1ChangesChangeIdIdentitiesIdentityId"
                required: true
            responses:
                '200':
                    description: Update an identity
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChangeIdentityEntity"
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
            x-codegen-request-body-name: patchV1ChangesChangeIdIdentitiesIdentityId
            summary: Update an identity for a change
    "/v1/checklist_templates":
        get:
            tags:
                - Tasks
            summary: List checklist templates
            description: List all of the checklist templates that have been added to the organization
            operationId: listChecklistTemplates
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: A query to search checklist templates by their name
                  schema:
                    type: string
            responses:
                '200':
                    description: List all of the checklist templates that have been added to the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChecklistTemplateEntityPaginated"
        post:
            tags:
                - Tasks
            summary: Create a checklist template
            description: Creates a checklist template for the organization
            operationId: createChecklistTemplate
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1ChecklistTemplates"
                required: true
            responses:
                '201':
                    description: Creates a checklist template for the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChecklistTemplateEntity"
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
            x-codegen-request-body-name: postV1ChecklistTemplates
    "/v1/checklist_templates/{id}":
        get:
            tags:
                - Tasks
            summary: Get a checklist template
            description: Retrieves a single checklist template by ID
            operationId: getChecklistTemplate
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves a single checklist template by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChecklistTemplateEntity"
        delete:
            tags:
                - Tasks
            summary: Archive a checklist template
            description: Archive a checklist template
            operationId: deleteChecklistTemplate
            parameters:
                - name: id
                  in: path
                  description: Checklist Template UUID
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Archive a checklist template
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChecklistTemplateEntity"
        patch:
            tags:
                - Tasks
            summary: Update a checklist template
            description: Update a checklist templates attributes
            operationId: updateChecklistTemplate
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1ChecklistTemplatesId"
                required: true
            responses:
                '200':
                    description: Update a checklist templates attributes
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ChecklistTemplateEntity"
            x-codegen-request-body-name: patchV1ChecklistTemplatesId
    "/v1/conversations/{conversation_id}/comments":
        get:
            tags:
                - Conversations
            summary: List comments for a conversation
            description: ALPHA - List all of the comments that have been added to the organization
            operationId: listConversationComments
            parameters:
                - name: before
                  in: query
                  description: An ISO8601 timestamp that allows filtering for comments posted before the provided time.
                  schema:
                    type: string
                    format: date-time
                - name: after
                  in: query
                  description: An ISO8601 timestamp that allows filtering for comments posted after the provided time.
                  schema:
                    type: string
                    format: date-time
                - name: sort
                  in: query
                  description: Allows sorting comments by the time they were posted, ascending or descending.
                  schema:
                    type: string
                    default: asc
                    enum:
                        - asc
                        - desc
                - name: conversation_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: ALPHA - List all of the comments that have been added to the organization
                    content: {}
        post:
            tags:
                - Conversations
            summary: Create a comment for a conversation
            description: ALPHA - Creates a comment for a project
            operationId: createConversationComment
            parameters:
                - name: conversation_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1ConversationsConversationIdComments"
                required: true
            responses:
                '201':
                    description: ALPHA - Creates a comment for a project
                    content: {}
            x-codegen-request-body-name: postV1ConversationsConversationIdComments
    "/v1/conversations/{conversation_id}/comments/{comment_id}":
        get:
            tags:
                - Conversations
            summary: Get a conversation comment
            description: ALPHA - Retrieves a single comment by ID
            operationId: getConversationComment
            parameters:
                - name: comment_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: conversation_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: ALPHA - Retrieves a single comment by ID
                    content: {}
        delete:
            tags:
                - Conversations
            summary: Delete a conversation comment
            description: ALPHA - Archive a comment
            operationId: deleteConversationComment
            parameters:
                - name: comment_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: conversation_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: ALPHA - Archive a comment
                    content: {}
        patch:
            tags:
                - Conversations
            summary: Update a conversation comment
            description: ALPHA - Update a comment's attributes
            operationId: updateConversationComment
            parameters:
                - name: comment_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: conversation_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1ConversationsConversationIdCommentsCommentId"
                required: true
            responses:
                '200':
                    description: ALPHA - Update a comment's attributes
                    content: {}
            x-codegen-request-body-name: patchV1ConversationsConversationIdCommentsCommentId
    "/v1/conversations/{conversation_id}/comments/{comment_id}/reactions":
        get:
            tags:
                - Conversations
            summary: List reactions for a conversation comment
            description: ALPHA - List all of the reactions that have been added to a comment
            operationId: listConversationCommentReactions
            parameters:
                - name: conversation_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: comment_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: ALPHA - List all of the reactions that have been added to a comment
                    content: {}
        post:
            tags:
                - Conversations
            summary: Create a reaction for a conversation comment
            description: ALPHA - Create a reaction on a comment
            operationId: createConversationCommentReaction
            parameters:
                - name: conversation_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: comment_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1ConversationsConversationIdCommentsCommentIdReactions"
                required: true
            responses:
                '201':
                    description: ALPHA - Create a reaction on a comment
                    content: {}
            x-codegen-request-body-name: postV1ConversationsConversationIdCommentsCommentIdReactions
    "/v1/conversations/{conversation_id}/comments/{comment_id}/reactions/{reaction_id}":
        delete:
            tags:
                - Conversations
            summary: Delete a reaction from a conversation comment
            description: ALPHA - Archive a reaction
            operationId: deleteConversationCommentReaction
            parameters:
                - name: reaction_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: conversation_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: comment_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: ALPHA - Archive a reaction
                    content: {}
    "/v1/current_user":
        get:
            tags:
                - Users
            description: Retrieve the current user
            operationId: getCurrentUser
            responses:
                '200':
                    description: Retrieve the current user
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/CurrentUserEntity"
            summary: Get the currently authenticated user
    "/v1/custom_fields/definitions":
        get:
            tags:
                - Incident Settings
            summary: List custom field definitions
            description: List all custom field definitions
            operationId: listCustomFieldDefinitions
            responses:
                '200':
                    description: List all custom field definitions
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Organizations_CustomFieldDefinitionEntity"
        post:
            tags:
                - Incident Settings
            summary: Create a custom field definition
            description: Create a new custom field definition
            operationId: createCustomFieldDefinition
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1CustomFieldsDefinitions"
                required: true
            responses:
                '201':
                    description: Create a new custom field definition
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Organizations_CustomFieldDefinitionEntity"
            x-codegen-request-body-name: postV1CustomFieldsDefinitions
    "/v1/custom_fields/definitions/{field_id}":
        delete:
            tags:
                - Incident Settings
            summary: Delete a custom field definition
            description: Delete a custom field definition
            operationId: deleteCustomFieldDefinition
            parameters:
                - name: field_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a custom field definition
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Organizations_CustomFieldDefinitionEntity"
        patch:
            tags:
                - Incident Settings
            summary: Update a custom field definition
            description: Update a single custom field definition
            operationId: updateCustomFieldDefinition
            parameters:
                - name: field_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1CustomFieldsDefinitionsFieldId"
                required: true
            responses:
                '200':
                    description: Update a single custom field definition
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Organizations_CustomFieldDefinitionEntity"
            x-codegen-request-body-name: patchV1CustomFieldsDefinitionsFieldId
    "/v1/custom_fields/definitions/{field_id}/select_options":
        get:
            tags:
                - Incident Settings
            summary: List select options for a custom field
            description: Get the permissible values for the a currently active custom select or multi-select field.
            operationId: getCustomFieldSelectOptions
            parameters:
                - name: field_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: query
                  in: query
                  description: Text string of a query for filtering values.
                  schema:
                    type: string
                - name: all_versions
                  in: query
                  description: If true, return all versions of the custom field definition.
                  schema:
                    type: boolean
            responses:
                '200':
                    description: Get the permissible values for the a currently active custom select or multi-select field.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Organizations_CustomFieldDefinitionEntity"
    "/v1/entitlements":
        get:
            tags:
                - Account Settings
            description: Retrieve all entitlements
            operationId: listEntitlements
            parameters:
                - name: name
                  in: query
                  description: Name of Entitlement
                  schema:
                    type: string
                - name: type
                  in: query
                  description: Type of Entitlement
                  schema:
                    type: string
                    enum:
                        - quota
                        - access
            responses:
                '200':
                    description: Retrieve all entitlements
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/EntitlementEntityPaginated"
            summary: List entitlements
    "/v1/environments":
        get:
            tags:
                - Environments
            summary: List environments
            description: List all of the environments that have been added to the organiation
            operationId: listEnvironments
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: A query to search environments by their name or description
                  schema:
                    type: string
                - name: name
                  in: query
                  description: A query to search environments by their name
                  schema:
                    type: string
            responses:
                '200':
                    description: List all of the environments that have been added to the organiation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/EnvironmentEntryEntityPaginated"
        post:
            tags:
                - Environments
            summary: Create an environment
            description: Creates an environment for the organization
            operationId: createEnvironment
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1Environments"
                required: true
            responses:
                '201':
                    description: Creates an environment for the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/EnvironmentEntryEntity"
            x-codegen-request-body-name: postV1Environments
    "/v1/environments/{environment_id}":
        get:
            tags:
                - Environments
            summary: Get an environment
            description: Retrieves a single environment by ID
            operationId: getEnvironment
            parameters:
                - name: environment_id
                  in: path
                  description: Environment UUID
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves a single environment by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/EnvironmentEntryEntity"
        delete:
            tags:
                - Environments
            summary: Archive an environment
            description: Archive an environment
            operationId: deleteEnvironment
            parameters:
                - name: environment_id
                  in: path
                  description: Environment UUID
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Archive an environment
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/EnvironmentEntryEntity"
        patch:
            tags:
                - Environments
            summary: Update an environment
            description: Update a environments attributes
            operationId: updateEnvironment
            parameters:
                - name: environment_id
                  in: path
                  description: Environment UUID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1EnvironmentsEnvironmentId"
                required: true
            responses:
                '200':
                    description: Update a environments attributes
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/EnvironmentEntryEntity"
            x-codegen-request-body-name: patchV1EnvironmentsEnvironmentId
    "/v1/form_configurations/{slug}":
        get:
            tags:
                - Incident Settings
            operationId: getFormConfiguration
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get FormConfiguration(s)
                    content: {}
            summary: Get a form configuration
    "/v1/functionalities":
        get:
            tags:
                - Functionalities
            summary: List functionalities
            description: List all of the functionalities that have been added to the organiation
            operationId: listFunctionalities
            parameters:
                - name: query
                  in: query
                  description: A query to search functionalities by their name or description
                  schema:
                    type: string
                - name: name
                  in: query
                  description: A query to search functionalities by their name
                  schema:
                    type: string
                - name: impacted
                  in: query
                  description: A query to search services by if they are impacted with active incidents
                  schema:
                    type: string
                - name: labels
                  in: query
                  description: A comma separated list of label key / values in the format of 'key=value,key2=value2'. To filter change events that have a key (with no specific value), omit the value
                  schema:
                    type: string
                - name: owner
                  in: query
                  description: A query to search functionalities by their owning team ID
                  schema:
                    type: string
                - name: lite
                  in: query
                  description: Boolean to determine whether to return a slimified version of the functionalities object
                  schema:
                    type: boolean
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all of the functionalities that have been added to the organiation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/FunctionalityEntityPaginated"
        post:
            tags:
                - Functionalities
            summary: Create a functionality
            description: Creates a functionality for the organization
            operationId: createFunctionality
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1Functionalities"
                required: true
            responses:
                '201':
                    description: Creates a functionality for the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/FunctionalityEntity"
            x-codegen-request-body-name: postV1Functionalities
    "/v1/functionalities/{functionality_id}":
        get:
            tags:
                - Functionalities
            summary: Get a functionality
            description: Retrieves a single functionality by ID
            operationId: getFunctionality
            parameters:
                - name: functionality_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves a single functionality by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/FunctionalityEntity"
        delete:
            tags:
                - Functionalities
            summary: Archive a functionality
            description: Archive a functionality
            operationId: deleteFunctionality
            parameters:
                - name: functionality_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Archive a functionality
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/FunctionalityEntity"
        patch:
            tags:
                - Functionalities
            summary: Update a functionality
            description: Update a functionalities attributes
            operationId: updateFunctionality
            parameters:
                - name: functionality_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1FunctionalitiesFunctionalityId"
                required: true
            responses:
                '200':
                    description: Update a functionalities attributes
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/FunctionalityEntity"
            x-codegen-request-body-name: patchV1FunctionalitiesFunctionalityId
    "/v1/functionalities/{functionality_id}/services":
        get:
            tags:
                - Functionalities
            operationId: getFunctionalityServices
            parameters:
                - name: functionality_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get Service(s)
                    content: {}
            summary: List services for a functionality
    "/v1/incident_roles":
        get:
            tags:
                - Incident Settings
            summary: List incident roles
            description: List all of the incident roles in the organization
            operationId: listIncidentRoles
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all of the incident roles in the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentRoleEntityPaginated"
        post:
            tags:
                - Incident Settings
            summary: Create an incident role
            description: Create a new incident role
            operationId: createIncidentRole
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentRoles"
                required: true
            responses:
                '201':
                    description: Create a new incident role
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentRoleEntity"
            x-codegen-request-body-name: postV1IncidentRoles
    "/v1/incident_roles/{incident_role_id}":
        get:
            tags:
                - Incident Settings
            summary: Get an incident role
            description: Retrieve a single incident role from its ID
            operationId: getIncidentRole
            parameters:
                - name: incident_role_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single incident role from its ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentRoleEntity"
        delete:
            tags:
                - Incident Settings
            summary: Archive an incident role
            description: Archives an incident role which will hide it from lists and metrics
            operationId: deleteIncidentRole
            parameters:
                - name: incident_role_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Archives an incident role which will hide it from lists and metrics
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentRoleEntity"
        patch:
            tags:
                - Incident Settings
            summary: Update an incident role
            description: Update a single incident role from its ID
            operationId: updateIncidentRole
            parameters:
                - name: incident_role_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IncidentRolesIncidentRoleId"
                required: true
            responses:
                '200':
                    description: Update a single incident role from its ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentRoleEntity"
            x-codegen-request-body-name: patchV1IncidentRolesIncidentRoleId
    "/v1/incident_tags":
        get:
            tags:
                - Incident Settings
            summary: List incident tags
            description: List all of the incident tags in the organization
            operationId: listIncidentTags
            parameters:
                - name: prefix
                  in: query
                  schema:
                    type: string
            responses:
                '200':
                    description: List all of the incident tags in the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TagEntityPaginated"
    "/v1/incident_tags/validate":
        post:
            tags:
                - Incident Settings
            summary: Validate incident tags
            description: Validate the format of a list of tags
            operationId: validateIncidentTags
            requestBody:
                description: A list of tags to validate
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                required: true
            responses:
                '201':
                    description: Validate the format of a list of tags
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TagEntity"
            x-codegen-request-body-name: tags
    "/v1/incident_types":
        get:
            tags:
                - Incident Settings
            summary: List incident types
            description: List all of the incident types in the organization
            operationId: listIncidentTypes
            parameters:
                - name: query
                  in: query
                  description: A query to search incident types by their name
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all of the incident types in the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentTypeEntityPaginated"
        post:
            tags:
                - Incident Settings
            summary: Create an incident type
            description: Create a new incident type
            operationId: createIncidentType
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentTypes"
                required: true
            responses:
                '201':
                    description: Create a new incident type
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentTypeEntity"
            x-codegen-request-body-name: postV1IncidentTypes
    "/v1/incident_types/{id}":
        get:
            tags:
                - Incident Settings
            summary: Get an incident type
            description: Retrieve a single incident type from its ID
            operationId: getIncidentType
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single incident type from its ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentTypeEntity"
        delete:
            tags:
                - Incident Settings
            summary: Archive an incident type
            description: Archives an incident type which will hide it from lists and metrics
            operationId: archiveIncidentType
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Archives an incident type which will hide it from lists and metrics
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentTypeEntity"
        patch:
            tags:
                - Incident Settings
            summary: Update an incident type
            description: Update a single incident type from its ID
            operationId: updateIncidentType
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IncidentTypesId"
                required: true
            responses:
                '200':
                    description: Update a single incident type from its ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentTypeEntity"
            x-codegen-request-body-name: patchV1IncidentTypesId
    "/v1/incidents":
        get:
            tags:
                - Incidents
            summary: List incidents
            description: List all of the incidents in the organization
            operationId: listIncidents
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: conditions
                  in: query
                  description: A JSON string that defines 'logic' and 'user_data'
                  schema:
                    type: string
                - name: environments
                  in: query
                  description: A comma separated list of environment IDs or 'is_empty' to filter for incidents with no impacted environments
                  schema:
                    type: string
                - name: services
                  in: query
                  description: A comma separated list of service IDs or 'is_empty' to filter for incidents with no impacted services
                  schema:
                    type: string
                - name: functionalities
                  in: query
                  description: A comma separated list of functionality IDs or 'is_empty' to filter for incidents with no impacted functionalities
                  schema:
                    type: string
                - name: excluded_infrastructure_ids
                  in: query
                  description: A comma separated list of infrastructure IDs. Returns incidents that do not have the following infrastructure ids associated with them.
                  schema:
                    type: string
                - name: teams
                  in: query
                  description: A comma separated list of team IDs
                  schema:
                    type: string
                - name: assigned_teams
                  in: query
                  description: A comma separated list of IDs for assigned teams or 'is_empty' to filter for incidents with no active team assignments
                  schema:
                    type: string
                - name: status
                  in: query
                  description: Incident status
                  schema:
                    type: string
                - name: start_date
                  in: query
                  description: Filters for incidents that started on or after this date
                  schema:
                    type: string
                    format: date
                - name: end_date
                  in: query
                  description: Filters for incidents that started on or before this date
                  schema:
                    type: string
                    format: date
                - name: resolved_at_or_after
                  in: query
                  description: Filters for incidents that were resolved at or after this time. Combine this with the `current_milestones` parameter if you wish to omit incidents that were re-opened and are still active.
                  schema:
                    type: string
                    format: date-time
                - name: resolved_at_or_before
                  in: query
                  description: Filters for incidents that were resolved at or before this time. Combine this with the `current_milestones` parameter if you wish to omit incidents that were re-opened and are still active.
                  schema:
                    type: string
                    format: date-time
                - name: created_at_or_after
                  in: query
                  description: Filters for incidents that were created at or after this time
                  schema:
                    type: string
                    format: date-time
                - name: created_at_or_before
                  in: query
                  description: Filters for incidents that were created at or before this time
                  schema:
                    type: string
                    format: date-time
                - name: query
                  in: query
                  description: A text query for an incident that searches on name, summary, and desciption
                  schema:
                    type: string
                - name: name
                  in: query
                  description: A query to search incidents by their name
                  schema:
                    type: string
                - name: saved_search_id
                  in: query
                  description: The id of a previously saved search.
                  schema:
                    type: string
                - name: priorities
                  in: query
                  description: A text value of priority
                  schema:
                    type: string
                - name: priority_not_set
                  in: query
                  description: Flag for including incidents where priority has not been set
                  schema:
                    type: boolean
                - name: severities
                  in: query
                  description: A text value of severity
                  schema:
                    type: string
                - name: severity_not_set
                  in: query
                  description: Flag for including incidents where severity has not been set
                  schema:
                    type: boolean
                - name: current_milestones
                  in: query
                  description: A comma separated list of current milestones
                  schema:
                    type: string
                - name: tags
                  in: query
                  description: A comma separated list of tags
                  schema:
                    type: string
                - name: tag_match_strategy
                  in: query
                  description: A matching strategy for the tags provided
                  schema:
                    type: string
                    enum:
                        - any
                        - match_all
                        - exclude
                - name: archived
                  in: query
                  description: Return archived incidents
                  schema:
                    type: boolean
                - name: updated_after
                  in: query
                  description: Filters for incidents that were updated after this date
                  schema:
                    type: string
                    format: date-time
                - name: updated_before
                  in: query
                  description: Filters for incidents that were updated before this date
                  schema:
                    type: string
                    format: date-time
                - name: incident_type_id
                  in: query
                  description: A comma separated list of incident type IDs
                  schema:
                    type: string
            responses:
                '200':
                    description: List all of the incidents in the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEntityPaginated"
        post:
            tags:
                - Incidents
            summary: Create an incident
            description: Create a new incident
            operationId: createIncident
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1Incidents"
                required: true
            responses:
                '201':
                    description: Create a new incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEntity"
            x-codegen-request-body-name: postV1Incidents
    "/v1/incidents/{incident_id}":
        get:
            tags:
                - Incidents
            summary: Get an incident
            description: Retrieve a single incident from its ID
            operationId: getIncident
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single incident from its ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEntity"
        delete:
            tags:
                - Incidents
            summary: Archive an incident
            description: Archives an incident which will hide it from lists and metrics
            operationId: archiveIncident
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Archives an incident which will hide it from lists and metrics
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEntity"
        patch:
            tags:
                - Incidents
            summary: Update an incident
            description: Updates an incident with provided parameters
            operationId: updateIncident
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IncidentsIncidentId"
                required: true
            responses:
                '200':
                    description: Updates an incident with provided parameters
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEntity"
            x-codegen-request-body-name: patchV1IncidentsIncidentId
    "/v1/incidents/{incident_id}/alerts":
        get:
            tags:
                - Alerts
            summary: List alerts for an incident
            description: List alerts that have been attached to an incident
            operationId: listIncidentAlerts
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: List alerts that have been attached to an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_AlertEntityPaginated"
        post:
            tags:
                - Alerts
            summary: Attach alerts to an incident
            description: Add an alert to an incident. FireHydrant needs to have ingested the alert from a third party system in order to attach it to the incident.
            operationId: createIncidentAlerts
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                description: Array of alert IDs to be assigned to the incident
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                required: true
            responses:
                '204':
                    description: Add an alert to an incident. FireHydrant needs to have ingested the alert from a third party system in order to attach it to the incident.
                    content: {}
            x-codegen-request-body-name: alert_ids
    "/v1/incidents/{incident_id}/alerts/{incident_alert_id}":
        delete:
            tags:
                - Incidents
            summary: Delete an alert from an incident
            description: Remove an alert from an incident
            operationId: deleteIncidentAlert
            parameters:
                - name: incident_alert_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Remove an alert from an incident
                    content: {}
    "/v1/incidents/{incident_id}/alerts/{incident_alert_id}/primary":
        patch:
            tags:
                - Incidents
            summary: Set an alert as primary for an incident
            description: Setting an alert as primary will overwrite milestone times in the FireHydrant incident with times included in the primary alert. Services attached to the primary alert will also be automatically added to the incident.
            operationId: setIncidentAlertAsPrimary
            parameters:
                - name: incident_alert_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IncidentsIncidentIdAlertsIncidentAlertIdPrimary"
                required: true
            responses:
                '200':
                    description: Setting an alert as primary will overwrite milestone times in the FireHydrant incident with times included in the primary alert. Services attached to the primary alert will also be automatically added to the incident.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_AlertEntity"
            x-codegen-request-body-name: patchV1IncidentsIncidentIdAlertsIncidentAlertIdPrimary
    "/v1/incidents/{incident_id}/attachments":
        get:
            tags:
                - Incidents
            operationId: listIncidentAttachments
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: attachable_type
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: get Attachment(s)
                    content: {}
            summary: List attachments for an incident
        post:
            tags:
                - Incidents
            summary: Create an attachment for an incident
            description: Allows adding image attachments to an incident
            operationId: createIncidentAttachment
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            required:
                                - file
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                description:
                                    type: string
                                occurred_at:
                                    type: string
                                    format: date-time
                                vote_direction:
                                    type: string
                                    enum:
                                        - up
                                        - down
                required: true
            responses:
                '201':
                    description: Allows adding image attachments to an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentAttachmentEntity"
    "/v1/incidents/{incident_id}/channel":
        get:
            tags:
                - Incidents
            summary: Get chat channel information for an incident
            description: Gives chat channel information for the specified incident
            operationId: getIncidentChannel
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Gives chat channel information for the specified incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_ChannelEntity"
    "/v1/incidents/{incident_id}/close":
        put:
            tags:
                - Incidents
            summary: Close an incident
            description: Closes an incident and optionally close all children
            operationId: closeIncident
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Closes an incident and optionally close all children
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEntity"
    "/v1/incidents/{incident_id}/events":
        get:
            tags:
                - Incidents
            summary: List events for an incident
            description: List all events for an incident. An event is a timeline entry. This can be filtered with params to retrieve events of a certain type.
            operationId: listIncidentEvents
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: types
                  in: query
                  description: A comma separated list of types of events to filter by
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all events for an incident. An event is a timeline entry. This can be filtered with params to retrieve events of a certain type.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEventEntityPaginated"
    "/v1/incidents/{incident_id}/events/{event_id}":
        get:
            tags:
                - Incidents
            summary: Get an incident event
            description: Retrieve a single event for an incident
            operationId: getIncidentEvent
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: event_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single event for an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEventEntity"
        delete:
            tags:
                - Incidents
            summary: Delete an incident event
            description: Delete a single event for an incident
            operationId: deleteIncidentEvent
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: event_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a single event for an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEventEntity"
        patch:
            tags:
                - Incidents
            summary: Update an incident event
            description: Update a single event for an incident
            operationId: updateIncidentEvent
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: event_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Update a single event for an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEventEntity"
    "/v1/incidents/{incident_id}/events/{event_id}/votes":
        patch:
            tags:
                - Incidents
            summary: Update votes for an incident event
            description: Allows for upvoting or downvoting an event
            operationId: updateIncidentEventVotes
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: event_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IncidentsIncidentIdEventsEventIdVotes"
                required: true
            responses:
                '200':
                    description: Allows for upvoting or downvoting an event
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/VotesEntity"
            x-codegen-request-body-name: patchV1IncidentsIncidentIdEventsEventIdVotes
    "/v1/incidents/{incident_id}/events/{event_id}/votes/status":
        get:
            tags:
                - Incidents
            summary: Get vote counts for an incident event
            description: Returns the current vote counts for an object
            operationId: getIncidentEventVoteStatus
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: event_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Returns the current vote counts for an object
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/VotesEntity"
    "/v1/incidents/{incident_id}/generic_chat_messages":
        post:
            tags:
                - Incidents
            summary: Create a chat message for an incident
            description: Create a new generic chat message on an incident timeline. These are independent of any specific chat provider.
            operationId: createIncidentGenericChatMessage
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentsIncidentIdGenericChatMessages"
                required: true
            responses:
                '201':
                    description: Create a new generic chat message on an incident timeline. These are independent of any specific chat provider.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Event_GenericChatMessageEntity"
            x-codegen-request-body-name: postV1IncidentsIncidentIdGenericChatMessages
    "/v1/incidents/{incident_id}/generic_chat_messages/{message_id}":
        delete:
            tags:
                - Incidents
            summary: Delete a chat message from an incident
            description: Delete an existing generic chat message on an incident.
            operationId: deleteIncidentChatMessage
            parameters:
                - name: message_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete an existing generic chat message on an incident.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Event_GenericChatMessageEntity"
        patch:
            tags:
                - Incidents
            summary: Update a chat message in an incident
            description: Update an existing generic chat message on an incident.
            operationId: updateIncidentChatMessage
            parameters:
                - name: message_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IncidentsIncidentIdGenericChatMessagesMessageId"
                required: true
            responses:
                '200':
                    description: Update an existing generic chat message on an incident.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Event_GenericChatMessageEntity"
            x-codegen-request-body-name: patchV1IncidentsIncidentIdGenericChatMessagesMessageId
    "/v1/incidents/{incident_id}/impact":
        put:
            tags:
                - Incidents
            summary: Replace all impacts for an incident
            description: |
                Allows updating an incident's impacted infrastructure, with the option to
                move the incident into a different milestone and provide a note to update
                the incident timeline and any attached status pages. If this method is
                requested with the PUT verb, impacts will be completely replaced with the
                information in the request body, even if not provided (effectively clearing
                all impacts). If this method is requested with the PATCH verb, the provided
                impacts will be added or updated, but no impacts will be removed.
            operationId: updateIncidentImpacts
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/putV1IncidentsIncidentIdImpact"
                required: true
            responses:
                '200':
                    description: |
                        Allows updating an incident's impacted infrastructure, with the option to
                        move the incident into a different milestone and provide a note to update
                        the incident timeline and any attached status pages. If this method is
                        requested with the PUT verb, impacts will be completely replaced with the
                        information in the request body, even if not provided (effectively clearing
                        all impacts). If this method is requested with the PATCH verb, the provided
                        impacts will be added or updated, but no impacts will be removed.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEntity"
            x-codegen-request-body-name: putV1IncidentsIncidentIdImpact
        patch:
            tags:
                - Incidents
            summary: Update impacts for an incident
            description: |
                Allows updating an incident's impacted infrastructure, with the option to
                move the incident into a different milestone and provide a note to update
                the incident timeline and any attached status pages. If this method is
                requested with the PUT verb, impacts will be completely replaced with the
                information in the request body, even if not provided (effectively clearing
                all impacts). If this method is requested with the PATCH verb, the provided
                impacts will be added or updated, but no impacts will be removed.
            operationId: partialUpdateIncidentImpacts
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IncidentsIncidentIdImpact"
                required: true
            responses:
                '200':
                    description: |
                        Allows updating an incident's impacted infrastructure, with the option to
                        move the incident into a different milestone and provide a note to update
                        the incident timeline and any attached status pages. If this method is
                        requested with the PUT verb, impacts will be completely replaced with the
                        information in the request body, even if not provided (effectively clearing
                        all impacts). If this method is requested with the PATCH verb, the provided
                        impacts will be added or updated, but no impacts will be removed.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEntity"
            x-codegen-request-body-name: patchV1IncidentsIncidentIdImpact
    "/v1/incidents/{incident_id}/impact/{type}":
        get:
            tags:
                - Incidents
            summary: List impacted infrastructure for an incident
            description: List impacted infrastructure on an incident by specifying type
            operationId: listIncidentImpact
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: type
                  in: path
                  required: true
                  schema:
                    type: string
                    enum:
                        - environments
                        - functionalities
                        - services
                        - customers
            responses:
                '200':
                    description: List impacted infrastructure on an incident by specifying type
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentImpactEntityPaginated"
        post:
            tags:
                - Incidents
            summary: Add impacted infrastructure to an incident
            description: Add impacted infrastructure to an incident
            operationId: createIncidentImpact
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: type
                  in: path
                  required: true
                  schema:
                    type: string
                    enum:
                        - environments
                        - functionalities
                        - services
                        - customers
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentsIncidentIdImpactType"
                required: true
            responses:
                '201':
                    description: Add impacted infrastructure to an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentImpactEntity"
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
            x-codegen-request-body-name: postV1IncidentsIncidentIdImpactType
    "/v1/incidents/{incident_id}/impact/{type}/{id}":
        delete:
            tags:
                - Incidents
            summary: Remove impacted infrastructure from an incident
            description: Remove impacted infrastructure on an incident
            operationId: deleteIncidentImpact
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: type
                  in: path
                  required: true
                  schema:
                    type: string
                    enum:
                        - environments
                        - functionalities
                        - services
                        - customers
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Remove impacted infrastructure on an incident
                    content: {}
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
    "/v1/incidents/{incident_id}/links":
        get:
            tags:
                - Incidents
            summary: List links for an incident
            description: List all the editable, external incident links attached to an incident
            operationId: listIncidentLinks
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: List all the editable, external incident links attached to an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Attachments_LinkEntityPaginated"
        post:
            tags:
                - Incidents
            summary: Create a link for an incident
            description: Allows adding adhoc links to an incident as an attachment
            operationId: createIncidentLink
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentsIncidentIdLinks"
                required: true
            responses:
                '201':
                    description: Allows adding adhoc links to an incident as an attachment
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Attachments_LinkEntity"
            x-codegen-request-body-name: postV1IncidentsIncidentIdLinks
    "/v1/incidents/{incident_id}/links/{link_id}":
        put:
            tags:
                - Incidents
            summary: Update an external link for an incident
            description: Updates the external incident link attributes
            operationId: updateIncidentLink
            parameters:
                - name: link_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/putV1IncidentsIncidentIdLinksLinkId"
                required: true
            responses:
                '200':
                    description: Updates the external incident link attributes
                    content: {}
            x-codegen-request-body-name: putV1IncidentsIncidentIdLinksLinkId
        delete:
            tags:
                - Incidents
            summary: Delete an external link from an incident
            description: Deletes the external incident link
            operationId: deleteIncidentLink
            parameters:
                - name: link_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Deletes the external incident link
                    content: {}
    "/v1/incidents/{incident_id}/milestones":
        get:
            tags:
                - Incidents
            summary: List milestones for an incident
            description: List times and durations for each milestone on an incident
            operationId: listIncidentMilestones
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: List times and durations for each milestone on an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_MilestoneEntityPaginated"
    "/v1/incidents/{incident_id}/milestones/bulk_update":
        put:
            tags:
                - Incidents
            summary: Bulk update milestone timestamps for an incident
            description: |
                Update milestone times in bulk for a given incident. All milestone
                times for an incident must occur in chronological order
                corresponding to the configured order of milestones. If the result
                of this request would cause any milestone(s) to appear out of place,
                a 422 response will instead be returned. This includes milestones
                not explicitly submitted or updated in this request.
            operationId: updateIncidentMilestonesBulk
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/putV1IncidentsIncidentIdMilestonesBulkUpdate"
                required: true
            responses:
                '200':
                    description: |
                        Update milestone times in bulk for a given incident. All milestone
                        times for an incident must occur in chronological order
                        corresponding to the configured order of milestones. If the result
                        of this request would cause any milestone(s) to appear out of place,
                        a 422 response will instead be returned. This includes milestones
                        not explicitly submitted or updated in this request.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_MilestoneEntityPaginated"
            x-codegen-request-body-name: putV1IncidentsIncidentIdMilestonesBulkUpdate
    "/v1/incidents/{incident_id}/notes":
        post:
            tags:
                - Incidents
            summary: Create a note for an incident
            description: Create a new note on for an incident. The visibility field on a note determines where it gets posted.
            operationId: createIncidentNote
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentsIncidentIdNotes"
                required: true
            responses:
                '201':
                    description: Create a new note on for an incident. The visibility field on a note determines where it gets posted.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Event_NoteEntity"
            x-codegen-request-body-name: postV1IncidentsIncidentIdNotes
    "/v1/incidents/{incident_id}/notes/{note_id}":
        patch:
            tags:
                - Incidents
            summary: Update a note for an incident
            description: Updates the body of a note
            operationId: updateIncidentNote
            parameters:
                - name: note_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IncidentsIncidentIdNotesNoteId"
                required: true
            responses:
                '200':
                    description: Updates the body of a note
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Event_NoteEntity"
            x-codegen-request-body-name: patchV1IncidentsIncidentIdNotesNoteId
    "/v1/incidents/{incident_id}/related_change_events":
        get:
            tags:
                - Incidents
            summary: List related changes for an incident
            description: List related changes that have been attached to an incident
            operationId: listIncidentRelatedChanges
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: type
                  in: query
                  description: The type of the relation to the incident
                  schema:
                    type: string
                    enum:
                        - caused
                        - fixed
                        - suspect
                        - dismissed
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: List related changes that have been attached to an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_RelatedChangeEventEntityPaginated"
        post:
            tags:
                - Incidents
            summary: Add a related change to an incident
            description: Add a related change to an incident. Changes added to an incident can be causes, fixes, or suspects. To remove a change from an incident, the type field should be set to dismissed.
            operationId: createIncidentRelatedChange
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentsIncidentIdRelatedChangeEvents"
                required: true
            responses:
                '201':
                    description: Add a related change to an incident. Changes added to an incident can be causes, fixes, or suspects. To remove a change from an incident, the type field should be set to dismissed.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_RelatedChangeEventEntity"
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
                '409':
                    description: Already Added
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
            x-codegen-request-body-name: postV1IncidentsIncidentIdRelatedChangeEvents
    "/v1/incidents/{incident_id}/related_change_events/{related_change_event_id}":
        patch:
            tags:
                - Incidents
            summary: Update a related change event for an incident
            description: Update a change attached to an incident
            operationId: updateIncidentRelatedChangeEvent
            parameters:
                - name: related_change_event_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId"
                required: true
            responses:
                '200':
                    description: Update a change attached to an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_RelatedChangeEventEntity"
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
                '409':
                    description: Already Added
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
            x-codegen-request-body-name: patchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId
    "/v1/incidents/{incident_id}/relationships":
        get:
            tags:
                - Incidents
            summary: List incident relationships
            description: List any parent/child relationships for an incident
            operationId: getIncidentRelationships
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: List any parent/child relationships for an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_RelationshipsEntity"
    "/v1/incidents/{incident_id}/resolve":
        put:
            tags:
                - Incidents
            summary: Resolve an incident
            description: Resolves a currently active incident
            operationId: resolveIncident
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                milestone:
                                    type: string
                                    description: The slug of any milestone in the post-incident or closed phase to set on the incident (and its children, if `resolve_children` os set). Must be one of the configured milestones available on this incident.
            responses:
                '200':
                    description: Resolves a currently active incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEntity"
    "/v1/incidents/{incident_id}/role_assignments":
        get:
            tags:
                - Incidents
            summary: List role assignments for an incident
            description: Retrieve a list of all of the current role assignments for the incident
            operationId: listIncidentRoleAssignments
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: status
                  in: query
                  description: Filter on status of the role assignment
                  schema:
                    type: string
                    enum:
                        - active
                        - inactive
            responses:
                '200':
                    description: Retrieve a list of all of the current role assignments for the incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_RoleAssignmentEntityPaginated"
        post:
            tags:
                - Incidents
            summary: Create a role assignment for an incident
            description: Assign a role to a user for this incident
            operationId: createIncidentRoleAssignment
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentsIncidentIdRoleAssignments"
                required: true
            responses:
                '201':
                    description: Assign a role to a user for this incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_RoleAssignmentEntity"
            x-codegen-request-body-name: postV1IncidentsIncidentIdRoleAssignments
    "/v1/incidents/{incident_id}/role_assignments/{role_assignment_id}":
        delete:
            tags:
                - Incidents
            summary: Delete a role assignment from an incident
            description: Unassign a role from a user
            operationId: deleteIncidentRoleAssignment
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: role_assignment_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Unassign a role from a user
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_RoleAssignmentEntity"
    "/v1/incidents/{incident_id}/similar":
        get:
            tags:
                - Incidents
            operationId: getSimilarIncidents
            parameters:
                - name: threshold
                  in: query
                  schema:
                    type: number
                    format: float
                    default: 0.2
                - name: limit
                  in: query
                  schema:
                    type: integer
                    format: int32
                    default: 5
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get Similar(s)
                    content: {}
            summary: List similar incidents
    "/v1/incidents/{incident_id}/status_pages":
        get:
            tags:
                - Incidents
            summary: List status pages for an incident
            description: List status pages that are attached to an incident
            operationId: listIncidentStatusPages
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: List status pages that are attached to an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_StatusPageEntityPaginated"
        post:
            tags:
                - Incidents
            summary: Add a status page to an incident
            description: Add a status page to an incident.
            operationId: createIncidentStatusPage
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentsIncidentIdStatusPages"
                required: true
            responses:
                '201':
                    description: Add a status page to an incident.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_StatusPageEntity"
            x-codegen-request-body-name: postV1IncidentsIncidentIdStatusPages
    "/v1/incidents/{incident_id}/status_pages/{status_page_id}":
        delete:
            tags:
                - Status Pages
            summary: Remove a status page from an incident
            description: Remove a status page incident attached to an incident
            operationId: deleteIncidentStatusPage
            parameters:
                - name: status_page_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Remove a status page incident attached to an incident
                    content: {}
    "/v1/incidents/{incident_id}/task_lists":
        post:
            tags:
                - Incidents
            summary: Add tasks from a task list to an incident
            description: Add all tasks from list to incident
            operationId: createIncidentTaskList
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentsIncidentIdTaskLists"
                required: true
            responses:
                '201':
                    description: Add all tasks from list to incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TaskEntity"
            x-codegen-request-body-name: postV1IncidentsIncidentIdTaskLists
    "/v1/incidents/{incident_id}/tasks":
        get:
            tags:
                - Tasks
            summary: List tasks for an incident
            description: Retrieve a list of all tasks for a specific incident
            operationId: listIncidentTasks
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a list of all tasks for a specific incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TaskEntityPaginated"
        post:
            tags:
                - Tasks
            summary: Create a task for an incident
            description: Create a task
            operationId: createIncidentTask
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentsIncidentIdTasks"
                required: true
            responses:
                '201':
                    description: Create a task
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TaskEntity"
            x-codegen-request-body-name: postV1IncidentsIncidentIdTasks
    "/v1/incidents/{incident_id}/tasks/{task_id}":
        get:
            tags:
                - Tasks
            summary: Get a task for an incident
            description: Retrieve a single task for an incident
            operationId: getIncidentTask
            parameters:
                - name: task_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single task for an incident
                    content: {}
        delete:
            tags:
                - Tasks
            summary: Delete a task from an incident
            description: Delete a task
            operationId: deleteIncidentTask
            parameters:
                - name: task_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a task
                    content: {}
        patch:
            tags:
                - Tasks
            summary: Update a task for an incident
            description: Update a task's attributes
            operationId: updateIncidentTask
            parameters:
                - name: task_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IncidentsIncidentIdTasksTaskId"
                required: true
            responses:
                '200':
                    description: Update a task's attributes
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TaskEntity"
            x-codegen-request-body-name: patchV1IncidentsIncidentIdTasksTaskId
    "/v1/incidents/{incident_id}/tasks/{task_id}/convert":
        post:
            tags:
                - Tasks
            summary: Convert a task to a follow-up
            description: Convert a task to a follow-up
            operationId: convertIncidentTaskToFollowup
            parameters:
                - name: task_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentsIncidentIdTasksTaskIdConvert"
                required: true
            responses:
                '201':
                    description: Convert a task to a follow-up
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TaskEntityPaginated"
            x-codegen-request-body-name: postV1IncidentsIncidentIdTasksTaskIdConvert
    "/v1/incidents/{incident_id}/team_assignments":
        post:
            tags:
                - Incidents
            summary: Assign a team to an incident
            description: Assign a team for this incident
            operationId: createIncidentTeamAssignment
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1IncidentsIncidentIdTeamAssignments"
                required: true
            responses:
                '201':
                    description: Assign a team for this incident
                    content: {}
            x-codegen-request-body-name: postV1IncidentsIncidentIdTeamAssignments
    "/v1/incidents/{incident_id}/team_assignments/{team_assignment_id}":
        delete:
            tags:
                - Incidents
            summary: Remove a team assignment from an incident
            description: Unassign a team from an incident
            operationId: deleteIncidentTeamAssignment
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: team_assignment_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                role_assignment_ids:
                                    type: array
                                    description: Team role assignments to unassign from the incident
                                    items:
                                        type: string
            responses:
                '204':
                    description: Unassign a team from an incident
                    content: {}
    "/v1/incidents/{incident_id}/transcript":
        get:
            tags:
                - Incidents
            summary: List transcript messages for an incident
            description: Retrieve the transcript for a specific incident
            operationId: getIncidentTranscript
            parameters:
                - name: after
                  in: query
                  description: The ID of the transcript entry to start after.
                  schema:
                    type: string
                - name: before
                  in: query
                  description: The ID of the transcript entry to start before.
                  schema:
                    type: string
                - name: sort
                  in: query
                  description: The order to sort the transcript entries.
                  schema:
                    type: string
                    default: asc
                    enum:
                        - asc
                        - desc
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve the transcript for a specific incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PublicAPI_V1_Incidents_TranscriptEntity"
    "/v1/incidents/{incident_id}/transcript/{transcript_id}":
        delete:
            tags:
                - Incidents
            operationId: deleteIncidentTranscript
            parameters:
                - name: transcript_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: deleted Transcript
                    content: {}
            summary: Delete a transcript from an incident
    "/v1/incidents/{incident_id}/unarchive":
        post:
            tags:
                - Incidents
            summary: Unarchive an incident
            description: Unarchives an incident
            operationId: unarchiveIncident
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '201':
                    description: Unarchives an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/IncidentEntity"
    "/v1/incidents/{incident_id}/users/{user_id}":
        get:
            tags:
                - Incidents
            summary: Get a user's role in an incident
            description: Retrieve a user with current roles for an incident
            operationId: getIncidentUserRole
            parameters:
                - name: incident_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: user_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a user with current roles for an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Incidents_RoleAssignmentEntity"
    "/v1/infrastructures":
        get:
            tags:
                - Services
            summary: List catalog entries
            description: Lists functionality, service and environment objects
            operationId: listInfrastructures
            parameters:
                - name: query
                  in: query
                  description: A query to search infrastructures by their name
                  schema:
                    type: string
                - name: omit_for
                  in: query
                  description: Omit for any infrastructure that is added to an incident using the format "incident/{incident_id}"
                  schema:
                    type: string
                - name: type
                  in: query
                  description: Restrict infrastructure search to given type.
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists functionality, service and environment objects
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/InfrastructureSearchEntity"
    "/v1/integrations":
        get:
            tags:
                - Integrations
            operationId: listIntegrations
            responses:
                '200':
                    description: get Integration(s)
                    content: {}
            summary: List all available integrations
    "/v1/integrations/aws/cloudtrail_batches":
        get:
            tags:
                - Integrations
            summary: List AWS CloudTrail batches
            description: Lists CloudTrail batches for the authenticated organization.
            operationId: listAwsCloudtrailBatches
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: connection_id
                  in: query
                  description: AWS connection ID
                  schema:
                    type: string
            responses:
                '200':
                    description: Lists CloudTrail batches for the authenticated organization.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_Aws_CloudtrailBatchEntityPaginated"
    "/v1/integrations/aws/cloudtrail_batches/{id}":
        get:
            tags:
                - Integrations
            summary: Get an AWS CloudTrail batch
            description: Retrieve a single CloudTrail batch.
            operationId: getAwsCloudTrailBatch
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single CloudTrail batch.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_Aws_CloudtrailBatchEntity"
        patch:
            tags:
                - Integrations
            summary: Update an AWS CloudTrail batch
            description: Update a CloudTrail batch with new information.
            operationId: updateAwsCloudTrailBatch
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IntegrationsAwsCloudtrailBatchesId"
                required: true
            responses:
                '200':
                    description: Update a CloudTrail batch with new information.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_Aws_CloudtrailBatchEntity"
            x-codegen-request-body-name: patchV1IntegrationsAwsCloudtrailBatchesId
    "/v1/integrations/aws/cloudtrail_batches/{id}/events":
        get:
            tags:
                - Integrations
            operationId: getAwsCloudtrailBatchEvents
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get Event(s)
                    content: {}
            summary: List events for an AWS CloudTrail batch
    "/v1/integrations/aws/connections":
        get:
            tags:
                - Integrations
            summary: List AWS integration connections
            description: Lists the available and configured AWS integration connections for the authenticated organization.
            operationId: listAwsConnections
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: aws_account_id
                  in: query
                  description: AWS account ID containing the role to be assumed
                  schema:
                    type: string
                - name: target_arn
                  in: query
                  description: ARN of the role to be assumed
                  schema:
                    type: string
                - name: external_id
                  in: query
                  description: The external ID supplied when assuming the role
                  schema:
                    type: string
            responses:
                '200':
                    description: Lists the available and configured AWS integration connections for the authenticated organization.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_Aws_ConnectionEntityPaginated"
    "/v1/integrations/aws/connections/{id}":
        get:
            tags:
                - Integrations
            summary: Get an AWS connection
            description: Retrieves the information about the AWS connection.
            operationId: getAwsConnection
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves the information about the AWS connection.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_Aws_ConnectionEntity"
        patch:
            tags:
                - Integrations
            summary: Update an AWS connection
            description: Update the AWS connection with the provided data.
            operationId: updateAwsConnection
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IntegrationsAwsConnectionsId"
                required: true
            responses:
                '200':
                    description: Update the AWS connection with the provided data.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_Aws_ConnectionEntity"
            x-codegen-request-body-name: patchV1IntegrationsAwsConnectionsId
    "/v1/integrations/confluence_cloud/connections/{id}/space/search":
        get:
            tags:
                - Integrations
            summary: List Confluence spaces
            description: Lists available space keys for the Confluence integration connection.
            operationId: listConfluenceSpaces
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: keyword
                  in: query
                  description: Space Key
                  schema:
                    type: string
            responses:
                '200':
                    description: Lists available space keys for the Confluence integration connection.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_ConfluenceCloud_SpaceKeyEntity"
    "/v1/integrations/connections":
        get:
            tags:
                - Integrations
            operationId: listIntegrationConnections
            parameters:
                - name: integration_slug
                  in: query
                  description: Only return installed integrations with the supplied slugs (types).
                  schema:
                    type: string
            responses:
                '200':
                    description: get Connection(s)
                    content: {}
            summary: List integration connections
    "/v1/integrations/connections/{slug}":
        post:
            tags:
                - Integrations
            operationId: createIntegrationConnection
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '201':
                    description: created Connection
                    content: {}
            summary: Create a new integration connection
    "/v1/integrations/connections/{slug}/{connection_id}":
        patch:
            tags:
                - Integrations
            operationId: updateIntegrationConnection
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: patched Connection
                    content: {}
            summary: Update an integration connection
    "/v1/integrations/connections/{slug}/{connection_id}/refresh":
        patch:
            tags:
                - Integrations
            operationId: refreshIntegrationConnection
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: patched Refresh
                    content: {}
            summary: Refresh an integration connection
    "/v1/integrations/field_maps/{field_map_id}":
        patch:
            tags:
                - Integrations
            summary: Update a field mapping configuration
            description: Update field map
            operationId: updateIntegrationFieldMap
            parameters:
                - name: field_map_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Update field map
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/FieldMapping_FieldMapEntity"
    "/v1/integrations/field_maps/{field_map_id}/available_fields":
        get:
            tags:
                - Integrations
            summary: List available fields for field mapping
            description: Get a description of the fields to which data can be mapped
            operationId: getIntegrationFieldMapAvailableFields
            parameters:
                - name: field_map_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Get a description of the fields to which data can be mapped
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/FieldMapping_MappableFieldEntity"
    "/v1/integrations/slack/connections/{connection_id}/emoji_actions":
        get:
            tags:
                - Integrations
            summary: List Slack emoji actions
            description: Lists all slack emoji actions
            operationId: listSlackEmojiActions
            parameters:
                - name: connection_id
                  in: path
                  description: Slack Connection UUID
                  required: true
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists all slack emoji actions
                    content: {}
        post:
            tags:
                - Integrations
            summary: Create a Slack emoji action
            description: Creates a new slack emoji action
            operationId: createSlackEmojiAction
            parameters:
                - name: connection_id
                  in: path
                  description: Slack Connection UUID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - emoji_name
                            type: object
                            properties:
                                emoji_name:
                                    type: string
                                    description: The name of the emoji to associate with this action
                                incident_type_id:
                                    type: string
                                    description: The ID of the incident type to associate with this emoji action
                required: true
            responses:
                '201':
                    description: Creates a new slack emoji action
                    content: {}
    "/v1/integrations/slack/connections/{connection_id}/emoji_actions/{emoji_action_id}":
        get:
            tags:
                - Integrations
            summary: Get a Slack emoji action
            description: Retrieves a slack emoji action
            operationId: getSlackEmojiAction
            parameters:
                - name: connection_id
                  in: path
                  description: Slack Connection UUID
                  required: true
                  schema:
                    type: string
                - name: emoji_action_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves a slack emoji action
                    content: {}
        delete:
            tags:
                - Integrations
            summary: Delete a Slack emoji action
            description: Deletes a slack emoji action
            operationId: deleteSlackEmojiAction
            parameters:
                - name: connection_id
                  in: path
                  description: Slack Connection UUID
                  required: true
                  schema:
                    type: string
                - name: emoji_action_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Deletes a slack emoji action
                    content: {}
        patch:
            tags:
                - Integrations
            summary: Update a Slack emoji action
            description: Updates a slack emoji action
            operationId: updateSlackEmojiAction
            parameters:
                - name: connection_id
                  in: path
                  description: Slack Connection UUID
                  required: true
                  schema:
                    type: string
                - name: emoji_action_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                emoji_name:
                                    type: string
                                    description: The name of the emoji to associate with this action
                                incident_type_id:
                                    type: string
                                    description: The ID of the incident type to associate with this emoji action
            responses:
                '200':
                    description: Updates a slack emoji action
                    content: {}
    "/v1/integrations/slack/connections/{connection_id}/workspaces":
        get:
            tags:
                - Integrations
            operationId: getSlackWorkspaces
            parameters:
                - name: connection_id
                  in: path
                  description: Connection UUID
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get Workspace(s)
                    content: {}
            summary: List Slack workspaces for a connection
    "/v1/integrations/slack/usergroups":
        get:
            tags:
                - Integrations
            operationId: listSlackUsergroups
            responses:
                '200':
                    description: get Usergroup(s)
                    content: {}
            summary: List Slack usergroups
    "/v1/integrations/statuses/{slug}":
        get:
            tags:
                - Integrations
            operationId: getIntegrationStatus
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get Status(s)
                    content: {}
            summary: Get an integration status
    "/v1/integrations/statuspage/connections":
        get:
            tags:
                - Integrations
            summary: List Statuspage connections
            description: Lists the available and configured Statuspage integrations connections for the authenticated organization.
            operationId: listStatuspageConnections
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists the available and configured Statuspage integrations connections for the authenticated organization.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_Statuspage_ConnectionEntityPaginated"
    "/v1/integrations/statuspage/connections/{connection_id}":
        get:
            tags:
                - Integrations
            summary: Get a Statuspage connection
            description: Retrieve the information about the Statuspage connection.
            operationId: getStatuspageConnection
            parameters:
                - name: connection_id
                  in: path
                  description: Connection UUID
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve the information about the Statuspage connection.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_Statuspage_ConnectionEntity"
        delete:
            tags:
                - Integrations
            summary: Delete a Statuspage connection
            description: Deletes the given Statuspage integration connection.
            operationId: deleteStatuspageConnection
            parameters:
                - name: connection_id
                  in: path
                  description: Connection UUID
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Deletes the given Statuspage integration connection.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_Statuspage_ConnectionEntity"
        patch:
            x-speakeasy-test: false
            tags:
                - Integrations
            summary: Update a Statuspage connection
            description: Update the given Statuspage integration connection.
            operationId: updateStatuspageConnection
            parameters:
                - name: connection_id
                  in: path
                  description: Connection UUID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1IntegrationsStatuspageConnectionsConnectionId"
                required: true
            responses:
                '200':
                    description: Update the given Statuspage integration connection.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_Statuspage_ConnectionEntity"
            x-codegen-request-body-name: patchV1IntegrationsStatuspageConnectionsConnectionId
    "/v1/integrations/statuspage/connections/{connection_id}/pages":
        get:
            tags:
                - Integrations
            operationId: listStatuspagePages
            parameters:
                - name: connection_id
                  in: path
                  description: Connection UUID
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get Page(s)
                    content: {}
            summary: List StatusPage pages for a connection
    "/v1/integrations/zendesk/search":
        get:
            tags:
                - Integrations
            operationId: searchZendeskTickets
            parameters:
                - name: ticket_id
                  in: query
                  description: Zendesk ticket ID
                  required: true
                  schema:
                    type: string
                - name: include
                  in: query
                  description: Use to include attached_incidents
                  schema:
                    type: string
            responses:
                '200':
                    description: get Search(s)
                    content: {}
            summary: Search for Zendesk tickets
    "/v1/integrations/{integration_id}":
        get:
            tags:
                - Integrations
            description: Retrieve a single integration
            operationId: getIntegration
            parameters:
                - name: integration_id
                  in: path
                  description: Integration UUID
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single integration
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Integrations_IntegrationEntity"
            summary: Get an integration
    "/v1/lifecycles/measurement_definitions":
        get:
            tags:
                - Metrics/Reporting
            summary: List measurement definitions
            description: List all of the measurement definitions in the organization
            operationId: listMeasurementDefinitions
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all of the measurement definitions in the organization
                    content: {}
        post:
            tags:
                - Metrics/Reporting
            summary: Create a measurement definition
            description: Create a new measurement definition
            operationId: createMeasurementDefinition
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - ends_at_milestone_id
                                - name
                                - starts_at_milestone_id
                            type: object
                            properties:
                                name:
                                    type: string
                                slug:
                                    type: string
                                description:
                                    type: string
                                starts_at_milestone_id:
                                    type: string
                                ends_at_milestone_id:
                                    type: string
                required: true
            responses:
                '201':
                    description: Create a new measurement definition
                    content: {}
    "/v1/lifecycles/measurement_definitions/{measurement_definition_id}":
        get:
            tags:
                - Metrics/Reporting
            summary: Get a measurement definition
            description: Retrieve a single measurement definition from its ID
            operationId: getMeasurementDefinition
            parameters:
                - name: measurement_definition_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single measurement definition from its ID
                    content: {}
        delete:
            tags:
                - Metrics/Reporting
            summary: Archive a measurement definition
            description: Archives a measurement definition which will hide it from lists and metrics
            operationId: deleteMeasurementDefinition
            parameters:
                - name: measurement_definition_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Archives a measurement definition which will hide it from lists and metrics
                    content: {}
        patch:
            tags:
                - Metrics/Reporting
            summary: Update a measurement definition
            description: Update a single measurement definition from its ID
            operationId: updateMeasurementDefinition
            parameters:
                - name: measurement_definition_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                slug:
                                    type: string
                                description:
                                    type: string
                                starts_at_milestone_id:
                                    type: string
                                ends_at_milestone_id:
                                    type: string
            responses:
                '200':
                    description: Update a single measurement definition from its ID
                    content: {}
    "/v1/lifecycles/milestones":
        post:
            tags:
                - Incident Settings
            summary: Create a milestone for an incident lifecycle
            description: Create a new milestone
            operationId: createLifecycleMilestone
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - description
                                - name
                                - phase_id
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: The name of the milestone
                                description:
                                    type: string
                                    description: A long-form description of the milestone's purpose
                                slug:
                                    type: string
                                    description: A unique identifier for the milestone. If not provided, one will be generated from the name.
                                phase_id:
                                    type: string
                                    description: The ID of the phase to which the milestone should belong
                                position:
                                    type: integer
                                    description: The position of the milestone within the phase. If not provided, the milestone will be added as the last milestone in the phase.
                                    format: int32
                                required_at_milestone_id:
                                    type: string
                                    description: The ID of a later milestone that cannot be started until this milestone has a timestamp populated
                required: true
            responses:
                '201':
                    description: Create a new milestone
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Lifecycles_PhaseEntityList"
    "/v1/lifecycles/milestones/{milestone_id}":
        delete:
            tags:
                - Incident Settings
            summary: Delete a lifecycle milestone
            description: Delete a milestone
            operationId: deleteLifecycleMilestone
            parameters:
                - name: milestone_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a milestone
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Lifecycles_PhaseEntity"
        patch:
            tags:
                - Incident Settings
            summary: Update a lifecycle milestone
            description: Update a milestone
            operationId: updateLifecycleMilestone
            parameters:
                - name: milestone_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: The name of the milestone
                                description:
                                    type: string
                                    description: A long-form description of the milestone's purpose
                                slug:
                                    type: string
                                    description: A unique identifier for the milestone. If not provided, one will be generated from the name.
                                position:
                                    type: integer
                                    description: The position of the milestone within the phase. If not provided, the milestone will be added as the last milestone in the phase.
                                    format: int32
                                required_at_milestone_id:
                                    type: string
                                    description: The ID of a later milestone that cannot be started until this milestone has a timestamp populated
            responses:
                '200':
                    description: Update a milestone
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Lifecycles_PhaseEntity"
    "/v1/lifecycles/phases":
        get:
            tags:
                - Incident Settings
            summary: List lifecycle phases and milestones
            description: List all of the lifecycle phases and milestones in the organization
            operationId: listLifecyclePhases
            responses:
                '200':
                    description: List all of the lifecycle phases and milestones in the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Lifecycles_PhaseEntityList"
    "/v1/metrics/incidents":
        get:
            tags:
                - Metrics/Reporting
            summary: List incident metrics and analytics
            description: Returns a report with time bucketed analytics data
            operationId: listIncidentMetrics
            parameters:
                - name: start_date
                  in: query
                  description: The start date to return metrics from
                  schema:
                    type: string
                    format: date
                - name: end_date
                  in: query
                  description: The end date to return metrics from
                  schema:
                    type: string
                    format: date
                - name: bucket_size
                  in: query
                  schema:
                    type: string
                    enum:
                        - week
                        - day
                        - month
                        - all_time
                - name: by
                  in: query
                  schema:
                    type: string
                    enum:
                        - total
                        - severity
                        - priority
                        - functionality
                        - service
                        - environment
                        - user
                        - user_involvement
                - name: sort_field
                  in: query
                  schema:
                    type: string
                    enum:
                        - mttd
                        - mtta
                        - mttm
                        - mttr
                        - count
                        - total_time
                - name: sort_direction
                  in: query
                  schema:
                    type: string
                    enum:
                        - asc
                        - desc
                - name: sort_limit
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: conditions
                  in: query
                  schema:
                    type: string
            responses:
                '200':
                    description: Returns a report with time bucketed analytics data
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Metrics_MetricsEntity"
    "/v1/metrics/milestone_funnel":
        get:
            tags:
                - Metrics/Reporting
            summary: List milestone funnel metrics
            description: Returns a report with time bucketed milestone data
            operationId: getMilestoneFunnelMetrics
            parameters:
                - name: conditions
                  in: query
                  description: A JSON string that defines 'logic' and 'user_data'
                  schema:
                    type: string
                - name: environments
                  in: query
                  description: A comma separated list of environment IDs or 'is_empty' to filter for incidents with no impacted environments
                  schema:
                    type: string
                - name: services
                  in: query
                  description: A comma separated list of service IDs or 'is_empty' to filter for incidents with no impacted services
                  schema:
                    type: string
                - name: functionalities
                  in: query
                  description: A comma separated list of functionality IDs or 'is_empty' to filter for incidents with no impacted functionalities
                  schema:
                    type: string
                - name: excluded_infrastructure_ids
                  in: query
                  description: A comma separated list of infrastructure IDs. Returns incidents that do not have the following infrastructure ids associated with them.
                  schema:
                    type: string
                - name: teams
                  in: query
                  description: A comma separated list of team IDs
                  schema:
                    type: string
                - name: assigned_teams
                  in: query
                  description: A comma separated list of IDs for assigned teams or 'is_empty' to filter for incidents with no active team assignments
                  schema:
                    type: string
                - name: status
                  in: query
                  description: Incident status
                  schema:
                    type: string
                - name: start_date
                  in: query
                  description: Filters for incidents that started on or after this date
                  schema:
                    type: string
                    format: date
                - name: end_date
                  in: query
                  description: Filters for incidents that started on or before this date
                  schema:
                    type: string
                    format: date
                - name: resolved_at_or_after
                  in: query
                  description: Filters for incidents that were resolved at or after this time. Combine this with the `current_milestones` parameter if you wish to omit incidents that were re-opened and are still active.
                  schema:
                    type: string
                    format: date-time
                - name: resolved_at_or_before
                  in: query
                  description: Filters for incidents that were resolved at or before this time. Combine this with the `current_milestones` parameter if you wish to omit incidents that were re-opened and are still active.
                  schema:
                    type: string
                    format: date-time
                - name: created_at_or_after
                  in: query
                  description: Filters for incidents that were created at or after this time
                  schema:
                    type: string
                    format: date-time
                - name: created_at_or_before
                  in: query
                  description: Filters for incidents that were created at or before this time
                  schema:
                    type: string
                    format: date-time
                - name: query
                  in: query
                  description: A text query for an incident that searches on name, summary, and desciption
                  schema:
                    type: string
                - name: name
                  in: query
                  description: A query to search incidents by their name
                  schema:
                    type: string
                - name: saved_search_id
                  in: query
                  description: The id of a previously saved search.
                  schema:
                    type: string
                - name: priorities
                  in: query
                  description: A text value of priority
                  schema:
                    type: string
                - name: priority_not_set
                  in: query
                  description: Flag for including incidents where priority has not been set
                  schema:
                    type: boolean
                - name: severities
                  in: query
                  description: A text value of severity
                  schema:
                    type: string
                - name: severity_not_set
                  in: query
                  description: Flag for including incidents where severity has not been set
                  schema:
                    type: boolean
                - name: current_milestones
                  in: query
                  description: A comma separated list of current milestones
                  schema:
                    type: string
                - name: tags
                  in: query
                  description: A comma separated list of tags
                  schema:
                    type: string
                - name: tag_match_strategy
                  in: query
                  description: A matching strategy for the tags provided
                  schema:
                    type: string
                    enum:
                        - any
                        - match_all
                        - exclude
                - name: archived
                  in: query
                  description: Return archived incidents
                  schema:
                    type: boolean
                - name: updated_after
                  in: query
                  description: Filters for incidents that were updated after this date
                  schema:
                    type: string
                    format: date-time
                - name: updated_before
                  in: query
                  description: Filters for incidents that were updated before this date
                  schema:
                    type: string
                    format: date-time
                - name: incident_type_id
                  in: query
                  description: A comma separated list of incident type IDs
                  schema:
                    type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                group_by:
                                    type: array
                                    items:
                                        type: string
                                        enum:
                                            - started_day
                                            - started_week
                                            - started_month
                                            - all_time
            responses:
                '200':
                    description: Returns a report with time bucketed milestone data
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Metrics_MilestonesFunnelEntity"
    "/v1/metrics/mttx":
        get:
            tags:
                - metrics
            description: Fetch infrastructure metrics based on custom query
            operationId: getV1MetricsMttx
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: conditions
                  in: query
                  description: A JSON string that defines 'logic' and 'user_data'
                  schema:
                    type: string
                - name: environments
                  in: query
                  description: A comma separated list of environment IDs or 'is_empty' to filter for incidents with no impacted environments
                  schema:
                    type: string
                - name: services
                  in: query
                  description: A comma separated list of service IDs or 'is_empty' to filter for incidents with no impacted services
                  schema:
                    type: string
                - name: functionalities
                  in: query
                  description: A comma separated list of functionality IDs or 'is_empty' to filter for incidents with no impacted functionalities
                  schema:
                    type: string
                - name: excluded_infrastructure_ids
                  in: query
                  description: A comma separated list of infrastructure IDs. Returns incidents that do not have the following infrastructure ids associated with them.
                  schema:
                    type: string
                - name: teams
                  in: query
                  description: A comma separated list of team IDs
                  schema:
                    type: string
                - name: assigned_teams
                  in: query
                  description: A comma separated list of IDs for assigned teams or 'is_empty' to filter for incidents with no active team assignments
                  schema:
                    type: string
                - name: status
                  in: query
                  description: Incident status
                  schema:
                    type: string
                - name: start_date
                  in: query
                  description: Filters for incidents that started on or after this date
                  required: true
                  schema:
                    type: string
                    format: date
                - name: end_date
                  in: query
                  description: Filters for incidents that started on or before this date
                  required: true
                  schema:
                    type: string
                    format: date
                - name: resolved_at_or_after
                  in: query
                  description: Filters for incidents that were resolved at or after this time. Combine this with the `current_milestones` parameter if you wish to omit incidents that were re-opened and are still active.
                  schema:
                    type: string
                    format: date-time
                - name: resolved_at_or_before
                  in: query
                  description: Filters for incidents that were resolved at or before this time. Combine this with the `current_milestones` parameter if you wish to omit incidents that were re-opened and are still active.
                  schema:
                    type: string
                    format: date-time
                - name: created_at_or_after
                  in: query
                  description: Filters for incidents that were created at or after this time
                  schema:
                    type: string
                    format: date-time
                - name: created_at_or_before
                  in: query
                  description: Filters for incidents that were created at or before this time
                  schema:
                    type: string
                    format: date-time
                - name: query
                  in: query
                  description: A text query for an incident that searches on name, summary, and desciption
                  schema:
                    type: string
                - name: name
                  in: query
                  description: A query to search incidents by their name
                  schema:
                    type: string
                - name: saved_search_id
                  in: query
                  description: The id of a previously saved search.
                  schema:
                    type: string
                - name: priorities
                  in: query
                  description: A text value of priority
                  schema:
                    type: string
                - name: priority_not_set
                  in: query
                  description: Flag for including incidents where priority has not been set
                  schema:
                    type: boolean
                - name: severities
                  in: query
                  description: A text value of severity
                  schema:
                    type: string
                - name: severity_not_set
                  in: query
                  description: Flag for including incidents where severity has not been set
                  schema:
                    type: boolean
                - name: current_milestones
                  in: query
                  description: A comma separated list of current milestones
                  schema:
                    type: string
                - name: tags
                  in: query
                  description: A comma separated list of tags
                  schema:
                    type: string
                - name: tag_match_strategy
                  in: query
                  description: A matching strategy for the tags provided
                  schema:
                    type: string
                    enum:
                        - any
                        - match_all
                        - exclude
                - name: archived
                  in: query
                  description: Return archived incidents
                  schema:
                    type: boolean
                - name: updated_after
                  in: query
                  description: Filters for incidents that were updated after this date
                  schema:
                    type: string
                    format: date-time
                - name: updated_before
                  in: query
                  description: Filters for incidents that were updated before this date
                  schema:
                    type: string
                    format: date-time
                - name: incident_type_id
                  in: query
                  description: A comma separated list of incident type IDs
                  schema:
                    type: string
                - name: custom_field_id
                  in: query
                  schema:
                    type: string
                - name: sort_by
                  in: query
                  schema:
                    type: string
                    enum:
                        - count_asc
                        - mttr_asc
                        - mtta_asc
                        - mttd_asc
                        - mttm_asc
                        - healthiness_asc
                        - count_desc
                        - mttr_desc
                        - mtta_desc
                        - mttd_desc
                        - mttm_desc
                        - healthiness_desc
                - name: measurements
                  in: query
                  description: Comma-separated list of measurements to include in the response
                  schema:
                    type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                group_by:
                                    type: array
                                    items:
                                        type: string
                                        enum:
                                            - services
                                            - environments
                                            - functionalities
                                            - teams
                                            - severities
                                            - users
                                            - started_day
                                            - started_week
                                            - started_month
                                            - custom_fields
            responses:
                '200':
                    description: Fetch infrastructure metrics based on custom query
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Metrics_MttxDataEntity"
    "/v1/metrics/retrospectives":
        get:
            tags:
                - Metrics/Reporting
            summary: List retrospective metrics for a date range
            description: Returns a report with retrospective analytics data
            operationId: listRetrospectiveMetrics
            parameters:
                - name: start_date
                  in: query
                  description: The start date to return metrics from
                  schema:
                    type: string
                    format: date
                - name: end_date
                  in: query
                  description: The end date to return metrics from
                  schema:
                    type: string
                    format: date
            responses:
                '200':
                    description: Returns a report with retrospective analytics data
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Metrics_RetrospectiveEntity"
    "/v1/metrics/ticket_funnel":
        get:
            tags:
                - Metrics/Reporting
            summary: List ticket funnel metrics
            description: Returns a report with task and follow up creation and completion data
            operationId: getTicketFunnelMetrics
            parameters:
                - name: conditions
                  in: query
                  description: A JSON string that defines 'logic' and 'user_data'
                  schema:
                    type: string
                - name: environments
                  in: query
                  description: A comma separated list of environment IDs or 'is_empty' to filter for incidents with no impacted environments
                  schema:
                    type: string
                - name: services
                  in: query
                  description: A comma separated list of service IDs or 'is_empty' to filter for incidents with no impacted services
                  schema:
                    type: string
                - name: functionalities
                  in: query
                  description: A comma separated list of functionality IDs or 'is_empty' to filter for incidents with no impacted functionalities
                  schema:
                    type: string
                - name: excluded_infrastructure_ids
                  in: query
                  description: A comma separated list of infrastructure IDs. Returns incidents that do not have the following infrastructure ids associated with them.
                  schema:
                    type: string
                - name: teams
                  in: query
                  description: A comma separated list of team IDs
                  schema:
                    type: string
                - name: assigned_teams
                  in: query
                  description: A comma separated list of IDs for assigned teams or 'is_empty' to filter for incidents with no active team assignments
                  schema:
                    type: string
                - name: status
                  in: query
                  description: Incident status
                  schema:
                    type: string
                - name: start_date
                  in: query
                  description: Filters for incidents that started on or after this date
                  schema:
                    type: string
                    format: date
                - name: end_date
                  in: query
                  description: Filters for incidents that started on or before this date
                  schema:
                    type: string
                    format: date
                - name: resolved_at_or_after
                  in: query
                  description: Filters for incidents that were resolved at or after this time. Combine this with the `current_milestones` parameter if you wish to omit incidents that were re-opened and are still active.
                  schema:
                    type: string
                    format: date-time
                - name: resolved_at_or_before
                  in: query
                  description: Filters for incidents that were resolved at or before this time. Combine this with the `current_milestones` parameter if you wish to omit incidents that were re-opened and are still active.
                  schema:
                    type: string
                    format: date-time
                - name: created_at_or_after
                  in: query
                  description: Filters for incidents that were created at or after this time
                  schema:
                    type: string
                    format: date-time
                - name: created_at_or_before
                  in: query
                  description: Filters for incidents that were created at or before this time
                  schema:
                    type: string
                    format: date-time
                - name: query
                  in: query
                  description: A text query for an incident that searches on name, summary, and desciption
                  schema:
                    type: string
                - name: name
                  in: query
                  description: A query to search incidents by their name
                  schema:
                    type: string
                - name: saved_search_id
                  in: query
                  description: The id of a previously saved search.
                  schema:
                    type: string
                - name: priorities
                  in: query
                  description: A text value of priority
                  schema:
                    type: string
                - name: priority_not_set
                  in: query
                  description: Flag for including incidents where priority has not been set
                  schema:
                    type: boolean
                - name: severities
                  in: query
                  description: A text value of severity
                  schema:
                    type: string
                - name: severity_not_set
                  in: query
                  description: Flag for including incidents where severity has not been set
                  schema:
                    type: boolean
                - name: current_milestones
                  in: query
                  description: A comma separated list of current milestones
                  schema:
                    type: string
                - name: tags
                  in: query
                  description: A comma separated list of tags
                  schema:
                    type: string
                - name: tag_match_strategy
                  in: query
                  description: A matching strategy for the tags provided
                  schema:
                    type: string
                    enum:
                        - any
                        - match_all
                        - exclude
                - name: archived
                  in: query
                  description: Return archived incidents
                  schema:
                    type: boolean
                - name: updated_after
                  in: query
                  description: Filters for incidents that were updated after this date
                  schema:
                    type: string
                    format: date-time
                - name: updated_before
                  in: query
                  description: Filters for incidents that were updated before this date
                  schema:
                    type: string
                    format: date-time
                - name: incident_type_id
                  in: query
                  description: A comma separated list of incident type IDs
                  schema:
                    type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                group_by:
                                    type: array
                                    items:
                                        type: string
                                        enum:
                                            - started_day
                                            - started_week
                                            - started_month
                                            - all_time
            responses:
                '200':
                    description: Returns a report with task and follow up creation and completion data
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Metrics_TicketFunnelMetricsEntity"
    "/v1/metrics/user_involvements":
        get:
            tags:
                - Metrics/Reporting
            summary: List user involvement metrics
            description: Returns a report with time bucketed analytics data
            operationId: listUserInvolvementMetrics
            parameters:
                - name: start_date
                  in: query
                  description: The start date to return metrics from
                  schema:
                    type: string
                    format: date
                - name: end_date
                  in: query
                  description: The end date to return metrics from
                  schema:
                    type: string
                    format: date
                - name: bucket_size
                  in: query
                  schema:
                    type: string
                - name: by
                  in: query
                  schema:
                    type: string
                - name: sort_field
                  in: query
                  schema:
                    type: string
                    enum:
                        - user_count
                        - incident_count
                        - time_spent
                - name: sort_direction
                  in: query
                  schema:
                    type: string
                    enum:
                        - asc
                        - desc
                - name: sort_limit
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Returns a report with time bucketed analytics data
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Metrics_MetricsEntity"
    "/v1/metrics/{infra_type}":
        get:
            tags:
                - Metrics/Reporting
            summary: List metrics for all services, environments, functionalities, or customers
            description: Returns metrics for all components of a given type
            operationId: listInfrastructureMetrics
            parameters:
                - name: infra_type
                  in: path
                  required: true
                  schema:
                    type: string
                    enum:
                        - environments
                        - functionalities
                        - services
                        - customers
                - name: start_date
                  in: query
                  description: The start date to return metrics from; defaults to 30 days ago
                  schema:
                    type: string
                    format: date
                - name: end_date
                  in: query
                  description: The end date to return metrics from, defaults to today
                  schema:
                    type: string
                    format: date
            responses:
                '200':
                    description: Returns metrics for all components of a given type
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Metrics_InfrastructureListEntity"
    "/v1/metrics/{infra_type}/{infra_id}":
        get:
            tags:
                - Metrics/Reporting
            summary: Get metrics for a specific catalog entry
            description: Return metrics for a specific component
            operationId: getInfrastructureMetrics
            parameters:
                - name: infra_type
                  in: path
                  required: true
                  schema:
                    type: string
                    enum:
                        - environments
                        - functionalities
                        - services
                        - customers
                - name: infra_id
                  in: path
                  description: Component UUID
                  required: true
                  schema:
                    type: string
                - name: start_date
                  in: query
                  description: The start date to return metrics from; defaults to 30 days ago
                  schema:
                    type: string
                    format: date
                - name: end_date
                  in: query
                  description: The end date to return metrics from, defaults to today
                  schema:
                    type: string
                    format: date
            responses:
                '200':
                    description: Return metrics for a specific component
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Metrics_InfrastructureMetricsEntity"
    "/v1/noauth/ping":
        get:
            tags:
                - Account Settings
            summary: Check API connectivity
            description: Simple endpoint to verify your API connection is working
            operationId: apiPingNoAuth
            responses:
                '200':
                    description: Simple endpoint to verify your API connection is working
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PongEntity"
    "/v1/nunc/subscriptions":
        post:
            tags:
                - Status Pages
            summary: Create a status page subscription
            description: Subscribe to status page updates
            operationId: createStatusPageSubscription
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1NuncSubscriptions"
                required: true
            responses:
                '201':
                    description: Subscribe to status page updates
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Nunc_NuncSubscription"
            x-codegen-request-body-name: postV1NuncSubscriptions
    "/v1/nunc/subscriptions/{unsubscribe_token}":
        delete:
            tags:
                - Status Pages
            summary: Unsubscribe from status page notifications
            description: Unsubscribe from status page updates
            operationId: deleteNuncSubscription
            parameters:
                - name: unsubscribe_token
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Unsubscribe from status page updates
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Nunc_NuncSubscription"
    "/v1/nunc_connections":
        get:
            tags:
                - Status Pages
            summary: List status pages
            description: Lists the information displayed as part of your FireHydrant hosted status pages.
            operationId: listStatusPages
            responses:
                '200':
                    description: Lists the information displayed as part of your FireHydrant hosted status pages.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncConnectionEntityPaginated"
        post:
            tags:
                - Status Pages
            summary: Create a status page
            description: Create a new FireHydrant hosted status page for customer facing statuses.
            operationId: createStatusPage
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - components[infrastructure_id]
                                - components[infrastructure_type]
                                - conditions[condition_id]
                                - conditions[nunc_condition]
                                - domain
                            type: object
                            properties:
                                domain:
                                    type: string
                                company_name:
                                    type: string
                                company_website:
                                    type: string
                                company_tos_url:
                                    type: string
                                greeting_title:
                                    type: string
                                greeting_body:
                                    type: string
                                operational_message:
                                    type: string
                                title:
                                    type: string
                                conditions[nunc_condition]:
                                    type: array
                                    description: Status page condition to map your severity matrix condition to
                                    items:
                                        type: string
                                conditions[condition_id]:
                                    type: array
                                    description: Severity matrix condition id
                                    items:
                                        type: string
                                components[infrastructure_type]:
                                    type: array
                                    items:
                                        type: string
                                components[infrastructure_id]:
                                    type: array
                                    items:
                                        type: string
                                primary_color:
                                    type: string
                                secondary_color:
                                    type: string
                                exposed_fields:
                                    type: array
                                    items:
                                        type: string
                                enable_histogram:
                                    type: boolean
                                ui_version:
                                    type: integer
                                    format: int32
                required: true
            responses:
                '201':
                    description: Create a new FireHydrant hosted status page for customer facing statuses.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncConnectionEntity"
    "/v1/nunc_connections/{nunc_connection_id}":
        get:
            tags:
                - Status Pages
            summary: Get a status page
            description: Retrieve the information displayed as part of your FireHydrant hosted status page.
            operationId: getStatusPage
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve the information displayed as part of your FireHydrant hosted status page.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncConnectionEntity"
        put:
            x-speakeasy-test: false
            tags:
                - Status Pages
            summary: Update a status page
            description: Update your company's information and other components in the specified FireHydrant hosted status page.
            operationId: updateStatusPage
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - components[infrastructure_id]
                                - components[infrastructure_type]
                                - conditions[condition_id]
                                - conditions[nunc_condition]
                            type: object
                            properties:
                                company_name:
                                    type: string
                                company_website:
                                    type: string
                                company_tos_url:
                                    type: string
                                greeting_title:
                                    type: string
                                greeting_body:
                                    type: string
                                operational_message:
                                    type: string
                                title:
                                    type: string
                                conditions[nunc_condition]:
                                    type: array
                                    description: Status page condition to map your severity matrix condition to
                                    items:
                                        type: string
                                conditions[condition_id]:
                                    type: array
                                    description: Severity matrix condition id
                                    items:
                                        type: string
                                components[infrastructure_type]:
                                    type: array
                                    items:
                                        type: string
                                components[infrastructure_id]:
                                    type: array
                                    items:
                                        type: string
                                primary_color:
                                    type: string
                                secondary_color:
                                    type: string
                                exposed_fields:
                                    type: array
                                    items:
                                        type: string
                                enable_histogram:
                                    type: boolean
                                ui_version:
                                    type: integer
                                    format: int32
                required: true
            responses:
                '200':
                    description: Update your company's information and other components in the specified FireHydrant hosted status page.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncConnectionEntity"
        delete:
            tags:
                - Status Pages
            summary: Delete a status page
            description: Delete a FireHydrant hosted status page, stopping updates of your incidents to it.
            operationId: deleteStatusPage
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a FireHydrant hosted status page, stopping updates of your incidents to it.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncConnectionEntity"
    "/v1/nunc_connections/{nunc_connection_id}/component_groups":
        post:
            tags:
                - Status Pages
            summary: Create a component group for a status page
            description: Add a component group to be displayed on a FireHydrant status page
            operationId: createStatusPageComponentGroup
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - name
                            type: object
                            properties:
                                name:
                                    type: string
                                component_group_id:
                                    type: string
                                position:
                                    type: integer
                                    format: int32
                required: true
            responses:
                '201':
                    description: Add a component group to be displayed on a FireHydrant status page
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncConnectionEntity"
    "/v1/nunc_connections/{nunc_connection_id}/component_groups/{group_id}":
        delete:
            tags:
                - Status Pages
            summary: Delete a status page component group
            description: Delete a component group displayed on a FireHydrant status page
            operationId: deleteStatusPageComponentGroup
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: group_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a component group displayed on a FireHydrant status page
                    content: {}
        patch:
            x-speakeasy-test: false
            tags:
                - Status Pages
            summary: Update a status page component group
            description: Update a component group to be displayed on a FireHydrant status page
            operationId: updateStatusPageComponentGroup
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: group_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                component_group_id:
                                    type: string
                                position:
                                    type: integer
                                    format: int32
            responses:
                '200':
                    description: Update a component group to be displayed on a FireHydrant status page
                    content: {}
    "/v1/nunc_connections/{nunc_connection_id}/images/{type}":
        x-speakeasy-test: false
        put:
            tags:
                - Status Pages
            summary: Upload an image for a status page
            description: Add or replace an image attached to a FireHydrant status page
            operationId: updateStatusPageImage
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: type
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
            responses:
                '200':
                    description: Add or replace an image attached to a FireHydrant status page
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncConnectionEntity"
        delete:
            tags:
                - Status Pages
            summary: Delete an image from a status page
            description: Delete an image attached to a FireHydrant status page
            operationId: deleteStatusPageImage
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: type
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete an image attached to a FireHydrant status page
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncConnectionEntity"
    "/v1/nunc_connections/{nunc_connection_id}/links":
        post:
            tags:
                - Status Pages
            summary: Create a link for a status page
            description: Add a link to be displayed on a FireHydrant status page
            operationId: createStatusPageLink
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '201':
                    description: Add a link to be displayed on a FireHydrant status page
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncConnectionEntity"
    "/v1/nunc_connections/{nunc_connection_id}/links/{link_id}":
        delete:
            tags:
                - Status Pages
            summary: Delete a status page link
            description: Delete a link displayed on a FireHydrant status page
            operationId: deleteStatusPageLink
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: link_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a link displayed on a FireHydrant status page
                    content: {}
        patch:
            x-speakeasy-test: false
            tags:
                - Status Pages
            summary: Update a status page link
            description: Update a link to be displayed on a FireHydrant status page
            operationId: updateStatusPageLink
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: link_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1NuncConnectionsNuncConnectionIdLinksLinkId"
                required: true
            responses:
                '200':
                    description: Update a link to be displayed on a FireHydrant status page
                    content: {}
            x-codegen-request-body-name: patchV1NuncConnectionsNuncConnectionIdLinksLinkId
    "/v1/nunc_connections/{nunc_connection_id}/subscribers":
        get:
            tags:
                - Status Pages
            summary: List status page subscribers
            description: Retrieves the list of subscribers for a status page.
            operationId: listStatusPageSubscribers
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves the list of subscribers for a status page.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncEmailSubscribersEntity"
        post:
            tags:
                - Status Pages
            summary: Add subscribers to a status page
            description: Subscribes a comma-separated string of emails to status page updates
            operationId: createStatusPageSubscribers
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - emails
                            type: object
                            properties:
                                emails:
                                    type: string
                                    description: A comma-separated list of emails to subscribe.
                required: true
            responses:
                '201':
                    description: Subscribes a comma-separated string of emails to status page updates
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncEmailSubscribersEntity"
        delete:
            tags:
                - Status Pages
            summary: Remove subscribers from a status page
            description: Unsubscribes one or more status page subscribers.
            operationId: deleteStatusPageSubscribers
            parameters:
                - name: nunc_connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: subscriber_ids
                  in: query
                  description: A list of subscriber IDs to unsubscribe.
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Unsubscribes one or more status page subscribers.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/NuncEmailSubscribersEntity"
    "/v1/ping":
        get:
            tags:
                - Account Settings
            summary: Check API connectivity
            description: Simple endpoint to verify your API connection is working
            operationId: apiPing
            responses:
                '200':
                    description: Simple endpoint to verify your API connection is working
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PongEntity"
    "/v1/post_mortems/questions":
        get:
            tags:
                - Retrospectives
            summary: List retrospective questions
            description: List the questions configured to be provided and filled out on each retrospective report.
            operationId: listRetrospectiveQuestions
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List the questions configured to be provided and filled out on each retrospective report.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_QuestionTypeEntityPaginated"
        put:
            tags:
                - Retrospectives
            summary: Update retrospective questions
            description: Update the questions configured to be provided and filled out on future retrospective reports.
            operationId: updateRetrospectiveQuestions
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/putV1PostMortemsQuestions"
                required: true
            responses:
                '200':
                    description: Update the questions configured to be provided and filled out on future retrospective reports.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_QuestionTypeEntity"
            x-codegen-request-body-name: putV1PostMortemsQuestions
    "/v1/post_mortems/questions/{question_id}":
        get:
            tags:
                - Retrospectives
            summary: Get a retrospective question
            description: Get an incident retrospective question
            operationId: getRetrospectiveQuestion
            parameters:
                - name: question_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Get an incident retrospective question
                    content: {}
    "/v1/post_mortems/reports":
        get:
            tags:
                - Retrospectives
            summary: List retrospective reports
            description: List all reports
            operationId: listRetrospectiveReports
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: incident_id
                  in: query
                  description: Filter the reports by an incident ID
                  schema:
                    type: string
                - name: updated_since
                  in: query
                  description: Filter for reports updated after the given ISO8601 timestamp
                  schema:
                    type: string
                    format: date-time
            responses:
                '200':
                    description: List all reports
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_PostMortemReportEntityPaginated"
        post:
            tags:
                - Retrospectives
            summary: Create a retrospective report
            description: Create a report
            operationId: createRetrospectiveReport
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1PostMortemsReports"
                required: true
            responses:
                '201':
                    description: Create a report
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_PostMortemReportEntity"
            x-codegen-request-body-name: postV1PostMortemsReports
    "/v1/post_mortems/reports/{report_id}":
        get:
            tags:
                - Retrospectives
            summary: Get a retrospective report
            description: Get a report
            operationId: getPostMortemReport
            parameters:
                - name: report_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Get a report
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_PostMortemReportEntity"
        patch:
            tags:
                - Retrospectives
            summary: Update a retrospective report
            description: Update a report
            operationId: updatePostMortemReport
            parameters:
                - name: report_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1PostMortemsReportsReportId"
                required: true
            responses:
                '200':
                    description: Update a report
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_PostMortemReportEntity"
            x-codegen-request-body-name: patchV1PostMortemsReportsReportId
    "/v1/post_mortems/reports/{report_id}/fields/{field_id}":
        patch:
            tags:
                - Retrospectives
            summary: Update a retrospective field
            description: Update a field value on a post mortem report
            operationId: updateRetrospectiveField
            parameters:
                - name: field_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: report_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1PostMortemsReportsReportIdFieldsFieldId"
                required: true
            responses:
                '200':
                    description: Update a field value on a post mortem report
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_SectionFieldEntity"
            x-codegen-request-body-name: patchV1PostMortemsReportsReportIdFieldsFieldId
    "/v1/post_mortems/reports/{report_id}/publish":
        post:
            tags:
                - Retrospectives
            summary: Publish a retrospective report
            description: Marks an incident retrospective as published and emails all of the participants in the report the summary
            operationId: publishRetrospectiveReport
            parameters:
                - name: report_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1PostMortemsReportsReportIdPublish"
                required: true
            responses:
                '201':
                    description: Marks an incident retrospective as published and emails all of the participants in the report the summary
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_PostMortemReportEntity"
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
            x-codegen-request-body-name: postV1PostMortemsReportsReportIdPublish
    "/v1/post_mortems/reports/{report_id}/reasons":
        get:
            tags:
                - Retrospectives
            summary: List contributing factors for a retrospective report
            description: List all contributing factors to an incident
            operationId: listRetrospectiveReportReasons
            parameters:
                - name: report_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all contributing factors to an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_ReasonEntityPaginated"
        post:
            tags:
                - Retrospectives
            summary: Create a contributing factor for a retrospective report
            description: Add a new contributing factor to an incident
            operationId: createRetrospectiveReportReason
            parameters:
                - name: report_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1PostMortemsReportsReportIdReasons"
                required: true
            responses:
                '201':
                    description: Add a new contributing factor to an incident
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_ReasonEntity"
            x-codegen-request-body-name: postV1PostMortemsReportsReportIdReasons
    "/v1/post_mortems/reports/{report_id}/reasons/order":
        put:
            tags:
                - Retrospectives
            summary: Update the order of contributing factors in a retrospective report
            description: Reorder a contributing factor
            operationId: updateRetrospectiveReportReasonOrder
            parameters:
                - name: report_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/putV1PostMortemsReportsReportIdReasonsOrder"
                required: true
            responses:
                '200':
                    description: Reorder a contributing factor
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_ReasonEntity"
            x-codegen-request-body-name: putV1PostMortemsReportsReportIdReasonsOrder
    "/v1/post_mortems/reports/{report_id}/reasons/{reason_id}":
        delete:
            tags:
                - Retrospectives
            summary: Delete a contributing factor from a retrospective report
            description: Delete a contributing factor
            operationId: deleteRetrospectiveReason
            parameters:
                - name: report_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: reason_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a contributing factor
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_ReasonEntity"
        patch:
            tags:
                - Retrospectives
            summary: Update a contributing factor in a retrospective report
            description: Update a contributing factor
            operationId: updateRetrospectiveReason
            parameters:
                - name: report_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: reason_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1PostMortemsReportsReportIdReasonsReasonId"
                required: true
            responses:
                '200':
                    description: Update a contributing factor
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PostMortems_ReasonEntity"
            x-codegen-request-body-name: patchV1PostMortemsReportsReportIdReasonsReasonId
    "/v1/priorities":
        get:
            tags:
                - Incident Settings
            summary: List priorities
            description: Lists priorities
            operationId: listPriorities
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists priorities
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PriorityEntity"
        post:
            tags:
                - Incident Settings
            summary: Create a priority
            description: Create a new priority
            operationId: createPriority
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1Priorities"
                required: true
            responses:
                '201':
                    description: Create a new priority
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PriorityEntity"
            x-codegen-request-body-name: postV1Priorities
    "/v1/priorities/{priority_slug}":
        get:
            tags:
                - Incident Settings
            summary: Get a priority
            description: Retrieve a specific priority
            operationId: getPriority
            parameters:
                - name: priority_slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a specific priority
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PriorityEntity"
        delete:
            tags:
                - Incident Settings
            summary: Delete a priority
            description: Delete a specific priority
            operationId: deletePriority
            parameters:
                - name: priority_slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a specific priority
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PriorityEntity"
        patch:
            tags:
                - Incident Settings
            summary: Update a priority
            description: Update a specific priority
            operationId: updatePriority
            parameters:
                - name: priority_slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1PrioritiesPrioritySlug"
                required: true
            responses:
                '200':
                    description: Update a specific priority
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/PriorityEntity"
            x-codegen-request-body-name: patchV1PrioritiesPrioritySlug
    "/v1/processing_log_entries":
        get:
            tags:
                - Alerts
            summary: List alert processing log entries
            description: Processing Log Entries for a specific alert
            operationId: listAlertProcessingLogs
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: integration_slug
                  in: query
                  description: Scopes returned log entries to a specific integration ID
                  schema:
                    type: string
                - name: connection_id
                  in: query
                  description: Scopes returned log entries to a specific connection ID
                  schema:
                    type: string
                - name: of_level
                  in: query
                  description: Returns logs of all levels equal to or above the provided level
                  schema:
                    type: string
                    enum:
                        - unknown
                        - debug
                        - info
                        - warn
                        - error
                        - fatal
                - name: exact_level
                  in: query
                  description: Returns log entries of all levels equal to the provided level
                  schema:
                    type: string
                    enum:
                        - unknown
                        - debug
                        - info
                        - warn
                        - error
                        - fatal
            responses:
                '200':
                    description: Processing Log Entries for a specific alert
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Alerts_ProcessingLogEntryEntityPaginated"
    "/v1/reports/mean_time":
        get:
            tags:
                - Metrics/Reporting
            summary: Get mean time metrics for incidents
            description: Returns a report with time bucketed analytics data
            operationId: getMeanTimeReport
            parameters:
                - name: environments
                  in: query
                  description: A comma separated list of environment IDs
                  schema:
                    type: string
                - name: teams
                  in: query
                  description: A comma separated list of team IDs
                  schema:
                    type: string
                - name: services
                  in: query
                  description: A comma separated list of service IDs
                  schema:
                    type: string
                - name: status
                  in: query
                  description: Incident status
                  schema:
                    type: string
                - name: start_date
                  in: query
                  description: The start date to return incidents from
                  schema:
                    type: string
                    format: date
                - name: end_date
                  in: query
                  description: The end date to return incidents from
                  schema:
                    type: string
                    format: date
                - name: query
                  in: query
                  description: A text query for an incident that searches on name, summary, and desciption
                  schema:
                    type: string
                - name: saved_search_id
                  in: query
                  description: The id of a previously saved search.
                  schema:
                    type: string
                - name: priorities
                  in: query
                  description: A comma separated list of priorities
                  schema:
                    type: string
                - name: priority_not_set
                  in: query
                  description: Flag for including incidents where priority has not been set
                  schema:
                    type: boolean
                - name: severities
                  in: query
                  description: A comma separated list of severities
                  schema:
                    type: string
                - name: severity_not_set
                  in: query
                  description: Flag for including incidents where severity has not been set
                  schema:
                    type: boolean
                - name: current_milestones
                  in: query
                  description: A comma separated list of current milestones
                  schema:
                    type: string
            responses:
                '200':
                    description: Returns a report with time bucketed analytics data
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ReportEntity"
    "/v1/runbook_audits":
        get:
            tags:
                - Runbooks
            summary: List runbook audits
            description: Please contact support to enable audit logging for your account.
            operationId: listRunbookAudits
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: auditable_type
                  in: query
                  description: A query to filter audits by type
                  schema:
                    type: string
                    default: Runbooks::Step
                    enum:
                        - Runbooks::Step
                        - Runbooks::Runbook
                - name: sort
                  in: query
                  description: A query to sort audits by their created_at timestamp. Options are 'asc' or 'desc'
                  schema:
                    type: string
            responses:
                '200':
                    description: List runbook audits
                    content: {}
    "/v1/runbooks":
        get:
            tags:
                - Runbooks
            summary: List runbooks
            description: Lists all available runbooks.
            operationId: listRunbooks
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: name
                  in: query
                  description: A query to search runbooks by their name
                  schema:
                    type: string
                - name: owners
                  in: query
                  description: A query to search runbooks by their owners
                  schema:
                    type: string
                - name: sort
                  in: query
                  description: Sort runbooks by their updated date. Accepts 'asc', 'desc'
                  schema:
                    type: string
                    enum:
                        - asc
                        - desc
            responses:
                '200':
                    description: Lists all available runbooks.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/RunbookEntity"
        post:
            tags:
                - Runbooks
            summary: Create a runbook
            description: Create a new runbook for use with incidents.
            operationId: createRunbook
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1Runbooks"
                required: true
            responses:
                '201':
                    description: Create a new runbook for use with incidents.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/RunbookEntity"
            x-codegen-request-body-name: postV1Runbooks
    "/v1/runbooks/actions":
        get:
            tags:
                - Runbooks
            summary: List runbook actions
            description: List all Runbook actions available through your connected integrations
            operationId: listRunbookActions
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: type
                  in: query
                  description: List actions supporting this specific Runbook type
                  schema:
                    type: string
                - name: lite
                  in: query
                  description: Boolean to determine whether to return a slimified version of the action object's integration
                  schema:
                    type: boolean
            responses:
                '200':
                    description: List all Runbook actions available through your connected integrations
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Runbooks_ActionsEntityPaginated"
    "/v1/runbooks/executions":
        get:
            tags:
                - Runbooks
            summary: List runbook executions
            description: List all Runbook executions across all Runbooks
            operationId: listRunbookExecutions
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all Runbook executions across all Runbooks
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Runbooks_ExecutionEntityPaginated"
        post:
            tags:
                - Runbooks
            summary: Create a runbook execution
            description: Attaches a runbook to an incident and executes it
            operationId: createRunbookExecution
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1RunbooksExecutions"
                required: true
            responses:
                '201':
                    description: Attaches a runbook to an incident and executes it
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Runbooks_ExecutionEntity"
            x-codegen-request-body-name: postV1RunbooksExecutions
    "/v1/runbooks/executions/{execution_id}":
        get:
            tags:
                - Runbooks
            summary: Get a runbook execution
            description: Retrieve a runbook execution by ID
            operationId: getRunbookExecution
            parameters:
                - name: execution_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a runbook execution by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Runbooks_ExecutionEntity"
        delete:
            tags:
                - Runbooks
            summary: Terminate a runbook execution
            description: Terminates a runbook execution, preventing any further steps from being executed
            operationId: deleteRunbookExecution
            parameters:
                - name: execution_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: reason
                  in: query
                  description: The reason for terminating the runbook execution
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Terminates a runbook execution, preventing any further steps from being executed
                    content: {}
    "/v1/runbooks/executions/{execution_id}/steps/{step_id}":
        put:
            tags:
                - Runbooks
            summary: Update a runbook execution step
            description: Updates a runbook step execution, especially for changing the state of a step execution.
            operationId: updateRunbookExecutionStep
            parameters:
                - name: execution_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: step_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/putV1RunbooksExecutionsExecutionIdStepsStepId"
                required: true
            responses:
                '200':
                    description: Updates a runbook step execution, especially for changing the state of a step execution.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Runbooks_ExecutionEntity"
            x-codegen-request-body-name: putV1RunbooksExecutionsExecutionIdStepsStepId
    "/v1/runbooks/executions/{execution_id}/steps/{step_id}/script":
        get:
            tags:
                - Runbooks
            summary: Get a runbook execution step script
            description: Retrieves the bash script from a "script" step.
            operationId: getRunbookExecutionStepScript
            parameters:
                - name: execution_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: step_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves the bash script from a "script" step.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Runbooks_ExecutionEntity"
    "/v1/runbooks/executions/{execution_id}/steps/{step_id}/script/{state}":
        put:
            tags:
                - Runbooks
            summary: Update the script state for a runbook execution step
            description: Updates the execution's step.
            operationId: updateRunbookExecutionStepScriptState
            parameters:
                - name: execution_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: step_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: state
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Updates the execution's step.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Runbooks_ExecutionEntity"
    "/v1/runbooks/executions/{execution_id}/steps/{step_id}/votes":
        patch:
            tags:
                - Runbooks
            summary: Update votes for a runbook execution step
            description: Allows for upvoting or downvoting an event
            operationId: updateRunbookExecutionStepVotes
            parameters:
                - name: execution_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: step_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1RunbooksExecutionsExecutionIdStepsStepIdVotes"
                required: true
            responses:
                '200':
                    description: Allows for upvoting or downvoting an event
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/VotesEntity"
            x-codegen-request-body-name: patchV1RunbooksExecutionsExecutionIdStepsStepIdVotes
    "/v1/runbooks/executions/{execution_id}/steps/{step_id}/votes/status":
        get:
            tags:
                - Runbooks
            summary: Get vote counts for a runbook step
            description: Returns the current vote counts for an object
            operationId: getRunbookStepVoteStatus
            parameters:
                - name: execution_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: step_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Returns the current vote counts for an object
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/VotesEntity"
    "/v1/runbooks/executions/{execution_id}/votes":
        patch:
            tags:
                - Runbooks
            summary: Vote on a runbook execution
            description: Allows for upvoting or downvoting an event
            operationId: updateRunbookExecutionVotes
            parameters:
                - name: execution_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1RunbooksExecutionsExecutionIdVotes"
                required: true
            responses:
                '200':
                    description: Allows for upvoting or downvoting an event
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/VotesEntity"
            x-codegen-request-body-name: patchV1RunbooksExecutionsExecutionIdVotes
    "/v1/runbooks/executions/{execution_id}/votes/status":
        get:
            tags:
                - Runbooks
            summary: Get vote counts for a runbook execution
            description: Returns the current vote counts for an object
            operationId: getRunbookExecutionVoteStatus
            parameters:
                - name: execution_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Returns the current vote counts for an object
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/VotesEntity"
    "/v1/runbooks/select_options/{integration_slug}/{action_slug}/{field}":
        get:
            tags:
                - Runbooks
            operationId: getRunbookSelectOptions
            parameters:
                - name: integration_slug
                  in: path
                  required: true
                  schema:
                    type: string
                - name: action_slug
                  in: path
                  required: true
                  schema:
                    type: string
                - name: field
                  in: path
                  required: true
                  schema:
                    type: string
                - name: query
                  in: query
                  description: Text string of a query for filtering values.
                  schema:
                    type: string
                - name: scope
                  in: query
                  description: Generic params used to add specificity (eg an id of some kind) to the select options request
                  schema:
                    type: string
                - name: per_page
                  in: query
                  description: Maximum number of items to return.
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: get SelectOption(s)
                    content: {}
            summary: List select options for a runbook integration action field
    "/v1/runbooks/{runbook_id}":
        get:
            tags:
                - Runbooks
            summary: Get a runbook
            description: Get a runbook and all its configuration
            operationId: getRunbook
            parameters:
                - name: runbook_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Get a runbook and all its configuration
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/RunbookEntity"
        put:
            tags:
                - Runbooks
            summary: Update a runbook
            description: |
                Update a runbook and any attachment rules associated with it. This endpoint is used to configure nearly everything
                about a runbook, including but not limited to the steps, environments, attachment rules, and severities.
            operationId: updateRunbook
            parameters:
                - name: runbook_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/putV1RunbooksRunbookId"
                required: true
            responses:
                '200':
                    description: |
                        Update a runbook and any attachment rules associated with it. This endpoint is used to configure nearly everything
                        about a runbook, including but not limited to the steps, environments, attachment rules, and severities.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/RunbookEntity"
            x-codegen-request-body-name: putV1RunbooksRunbookId
        delete:
            tags:
                - Runbooks
            summary: Delete a runbook
            description: Delete a runbook and make it unavailable for any future incidents.
            operationId: deleteRunbook
            parameters:
                - name: runbook_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a runbook and make it unavailable for any future incidents.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/RunbookEntity"
    "/v1/saved_searches/{resource_type}":
        get:
            tags:
                - Metrics/Reporting
            summary: List saved searches
            description: Lists save searches
            operationId: listSavedSearches
            parameters:
                - name: resource_type
                  in: path
                  required: true
                  schema:
                    type: string
                    enum:
                        - change_events
                        - incidents
                        - services
                        - scheduled_maintenances
                        - ticket_tasks
                        - ticket_follow_ups
                        - analytics
                        - impact_analytics
                        - alerts
                        - incident_events
                - name: user_id
                  in: query
                  description: The user ID used to filter saved searches.
                  schema:
                    type: string
                - name: query
                  in: query
                  description: Filter saved searches with a query on their name
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists save searches
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SavedSearchEntity"
        post:
            tags:
                - Metrics/Reporting
            summary: Create a saved search
            description: Create a new saved search for a particular resource type
            operationId: createSavedSearch
            parameters:
                - name: resource_type
                  in: path
                  required: true
                  schema:
                    type: string
                    enum:
                        - change_events
                        - incidents
                        - services
                        - scheduled_maintenances
                        - ticket_tasks
                        - ticket_follow_ups
                        - analytics
                        - impact_analytics
                        - alerts
                        - incident_events
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1SavedSearchesResourceType"
                required: true
            responses:
                '201':
                    description: Create a new saved search for a particular resource type
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SavedSearchEntity"
            x-codegen-request-body-name: postV1SavedSearchesResourceType
    "/v1/saved_searches/{resource_type}/{saved_search_id}":
        get:
            tags:
                - Account Settings
            summary: Get a saved search
            description: Retrieve a specific save search
            operationId: getSavedSearch
            parameters:
                - name: resource_type
                  in: path
                  required: true
                  schema:
                    type: string
                    enum:
                        - change_events
                        - incidents
                        - services
                        - scheduled_maintenances
                        - ticket_tasks
                        - ticket_follow_ups
                        - analytics
                        - impact_analytics
                        - alerts
                        - incident_events
                - name: saved_search_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a specific save search
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SavedSearchEntity"
        delete:
            tags:
                - Account Settings
            summary: Delete a saved search
            description: Delete a specific saved search
            operationId: deleteSavedSearch
            parameters:
                - name: resource_type
                  in: path
                  required: true
                  schema:
                    type: string
                    enum:
                        - change_events
                        - incidents
                        - services
                        - scheduled_maintenances
                        - ticket_tasks
                        - ticket_follow_ups
                        - analytics
                        - impact_analytics
                        - alerts
                        - incident_events
                - name: saved_search_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a specific saved search
                    content: {}
        patch:
            tags:
                - Account Settings
            summary: Update a saved search
            description: Update a specific saved search
            operationId: updateSavedSearch
            parameters:
                - name: resource_type
                  in: path
                  required: true
                  schema:
                    type: string
                    enum:
                        - change_events
                        - incidents
                        - services
                        - scheduled_maintenances
                        - ticket_tasks
                        - ticket_follow_ups
                        - analytics
                        - impact_analytics
                        - alerts
                        - incident_events
                - name: saved_search_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1SavedSearchesResourceTypeSavedSearchId"
                required: true
            responses:
                '200':
                    description: Update a specific saved search
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SavedSearchEntity"
            x-codegen-request-body-name: patchV1SavedSearchesResourceTypeSavedSearchId
    "/v1/scheduled_maintenances":
        get:
            tags:
                - Incidents
            summary: List scheduled maintenance events
            description: Lists all scheduled maintenance events
            operationId: listScheduledMaintenances
            parameters:
                - name: query
                  in: query
                  description: Filter scheduled_maintenances with a query on their name
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists all scheduled maintenance events
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ScheduledMaintenanceEntity"
        post:
            tags:
                - Incidents
            summary: Create a scheduled maintenance event
            description: Create a new scheduled maintenance event
            operationId: createScheduledMaintenance
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1ScheduledMaintenances"
                required: true
            responses:
                '201':
                    description: Create a new scheduled maintenance event
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ScheduledMaintenanceEntity"
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
            x-codegen-request-body-name: postV1ScheduledMaintenances
    "/v1/scheduled_maintenances/{scheduled_maintenance_id}":
        get:
            tags:
                - Changes
            summary: Get a scheduled maintenance event
            description: Fetch the details of a scheduled maintenance event.
            operationId: getScheduledMaintenance
            parameters:
                - name: scheduled_maintenance_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Fetch the details of a scheduled maintenance event.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ScheduledMaintenanceEntity"
        delete:
            tags:
                - Changes
            summary: Delete a scheduled maintenance event
            description: Delete a scheduled maintenance event, preventing it from taking place.
            operationId: deleteScheduledMaintenance
            parameters:
                - name: scheduled_maintenance_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a scheduled maintenance event, preventing it from taking place.
                    content: {}
        patch:
            tags:
                - Changes
            summary: Update a scheduled maintenance event
            description: Change the conditions of a scheduled maintenance event, including updating any status page announcements of changes.
            operationId: updateScheduledMaintenance
            parameters:
                - name: scheduled_maintenance_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1ScheduledMaintenancesScheduledMaintenanceId"
                required: true
            responses:
                '200':
                    description: Change the conditions of a scheduled maintenance event, including updating any status page announcements of changes.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ScheduledMaintenanceEntity"
            x-codegen-request-body-name: patchV1ScheduledMaintenancesScheduledMaintenanceId
    "/v1/schedules":
        get:
            tags:
                - Teams
            summary: List schedules
            description: List all known schedules in FireHydrant as pulled from external sources
            operationId: listSchedules
            parameters:
                - name: query
                  in: query
                  description: Filter schedules with a query on their name
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all known schedules in FireHydrant as pulled from external sources
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ScheduleEntityPaginated"
    "/v1/scim/v2/Groups":
        get:
            tags:
                - SCIM
            summary: List teams via SCIM
            description: SCIM endpoint that lists all Teams (Colloquial for Group in the SCIM protocol)
            operationId: getScimGroups
            parameters:
                - name: startIndex
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: count
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: filter
                  in: query
                  description: |-
                    This is a string used to query groups by displayName.
                            Proper example syntax for this would be `?filter=displayName eq "My Team Name"`.
                            Currently we only support the `eq` operator
                  schema:
                    type: string
            responses:
                '200':
                    description: SCIM endpoint that lists all Teams (Colloquial for Group in the SCIM protocol)
                    content: {}
        post:
            tags:
                - SCIM
            summary: Create a team via SCIM
            description: SCIM endpoint to create a new Team (Colloquial for Group in the SCIM protocol). Any members defined in the payload will be assigned to the team with no defined role.
            operationId: createScimGroup
            requestBody:
                content:
                    application/scim+json:
                        schema:
                            "$ref": "#/components/schemas/postV1ScimV2Groups"
                required: true
            responses:
                '201':
                    description: SCIM endpoint to create a new Team (Colloquial for Group in the SCIM protocol). Any members defined in the payload will be assigned to the team with no defined role.
                    content: {}
            x-codegen-request-body-name: postV1ScimV2Groups
    "/v1/scim/v2/Groups/{id}":
        get:
            tags:
                - SCIM
            summary: Get a SCIM group
            description: SCIM endpoint that lists a Team (Colloquial for Group in the SCIM protocol)
            operationId: getScimGroup
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: SCIM endpoint that lists a Team (Colloquial for Group in the SCIM protocol)
                    content: {}
        put:
            tags:
                - SCIM
            summary: Update a SCIM group
            description: SCIM endpoint to update a Team (Colloquial for Group in the SCIM protocol). Any members defined in the payload will be assigned to the team with no defined role, any missing members will be removed from the team.
            operationId: updateScimGroup
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/scim+json:
                        schema:
                            "$ref": "#/components/schemas/putV1ScimV2GroupsId"
                required: true
            responses:
                '200':
                    description: SCIM endpoint to update a Team (Colloquial for Group in the SCIM protocol). Any members defined in the payload will be assigned to the team with no defined role, any missing members will be removed from the team.
                    content: {}
            x-codegen-request-body-name: putV1ScimV2GroupsId
        delete:
            tags:
                - SCIM
            summary: Delete a SCIM group
            description: SCIM endpoint to delete a Team (Colloquial for Group in the SCIM protocol).
            operationId: deleteScimGroup
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: SCIM endpoint to delete a Team (Colloquial for Group in the SCIM protocol).
                    content: {}
    "/v1/scim/v2/Users":
        get:
            tags:
                - SCIM
            summary: List users via SCIM
            description: SCIM endpoint that lists users. This endpoint will display a list of Users currently in the system.
            operationId: getScimUsers
            parameters:
                - name: filter
                  in: query
                  description: |-
                    This is a string used to query users by either userName or email.
                            Proper example syntax for this would be `?filter=userName eq john` or `?filter=userName eq "john@firehydrant.com"`.
                            Currently we only support the `eq` operator
                  schema:
                    type: string
                - name: startIndex
                  in: query
                  description: This is an integer which represents a pagination offset
                  schema:
                    type: integer
                    format: int32
                - name: count
                  in: query
                  description: This is an integer which represents the number of items per page in the response
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: SCIM endpoint that lists users. This endpoint will display a list of Users currently in the system.
                    content: {}
        post:
            tags:
                - SCIM
            summary: Create a user via SCIM
            description: SCIM endpoint to create and provision a new User. This endpoint will provision the User, which allows them to accept their account throught their IDP or via the Forgot Password flow.
            operationId: createScimUser
            requestBody:
                content:
                    application/scim+json:
                        schema:
                            "$ref": "#/components/schemas/postV1ScimV2Users"
                required: true
            responses:
                '201':
                    description: SCIM endpoint to create and provision a new User. This endpoint will provision the User, which allows them to accept their account throught their IDP or via the Forgot Password flow.
                    content: {}
            x-codegen-request-body-name: postV1ScimV2Users
    "/v1/scim/v2/Users/{id}":
        get:
            tags:
                - SCIM
            summary: Get a SCIM user
            description: SCIM endpoint that lists a User
            operationId: getScimUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: SCIM endpoint that lists a User
                    content: {}
        put:
            tags:
                - SCIM
            summary: Replace a SCIM user
            description: PUT SCIM endpoint to update a User. This endpoint is used to replace a resource's attributes.
            operationId: replaceScimUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/scim+json:
                        schema:
                            "$ref": "#/components/schemas/putV1ScimV2UsersId"
                required: true
            responses:
                '200':
                    description: PUT SCIM endpoint to update a User. This endpoint is used to replace a resource's attributes.
                    content: {}
            x-codegen-request-body-name: putV1ScimV2UsersId
        delete:
            tags:
                - SCIM
            summary: Delete a SCIM user
            description: SCIM endpoint to delete a User. This endpoint will deactivate a confirmed User record in our system.
            operationId: deleteScimUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: SCIM endpoint to delete a User. This endpoint will deactivate a confirmed User record in our system.
                    content: {}
        patch:
            tags:
                - SCIM
            summary: Update a SCIM user
            description: PATCH SCIM endpoint to update a User. This endpoint is used to update a resource's attributes.
            operationId: updateScimUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/scim+json:
                        schema:
                            "$ref": "#/components/schemas/patchV1ScimV2UsersId"
                required: true
            responses:
                '200':
                    description: PATCH SCIM endpoint to update a User. This endpoint is used to update a resource's attributes.
                    content: {}
            x-codegen-request-body-name: patchV1ScimV2UsersId
    "/v1/service_dependencies":
        post:
            tags:
                - Services
            summary: Create a dependency relationship between services
            description: Creates a service dependency relationship between two services
            operationId: createServiceDependency
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1ServiceDependencies"
                required: true
            responses:
                '201':
                    description: Creates a service dependency relationship between two services
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceDependencyEntity"
            x-codegen-request-body-name: postV1ServiceDependencies
    "/v1/service_dependencies/{service_dependency_id}":
        get:
            tags:
                - Services
            summary: Get a service dependency
            description: Retrieves a single service dependency by ID
            operationId: getServiceDependency
            parameters:
                - name: service_dependency_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves a single service dependency by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceDependencyEntity"
        delete:
            tags:
                - Services
            summary: Delete a service dependency
            description: Deletes a single service dependency
            operationId: deleteServiceDependency
            parameters:
                - name: service_dependency_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Deletes a single service dependency
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceDependencyEntity"
        patch:
            tags:
                - Services
            summary: Update a service dependency
            description: Update the notes of the service dependency
            operationId: updateServiceDependency
            parameters:
                - name: service_dependency_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1ServiceDependenciesServiceDependencyId"
                required: true
            responses:
                '200':
                    description: Update the notes of the service dependency
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceDependencyEntity"
            x-codegen-request-body-name: patchV1ServiceDependenciesServiceDependencyId
    "/v1/services":
        get:
            tags:
                - Services
            summary: List services
            description: List all of the services that have been added to the organization.
            operationId: listServices
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: labels
                  in: query
                  description: A comma separated list of label key / values in the format of 'key=value,key2=value2'. To filter change events that have a key (with no specific value), omit the value
                  schema:
                    type: string
                - name: query
                  in: query
                  description: A query to search services by their name or description
                  schema:
                    type: string
                - name: name
                  in: query
                  description: A query to search services by their name
                  schema:
                    type: string
                - name: tiers
                  in: query
                  description: A query to search services by their tier
                  schema:
                    type: string
                - name: impacted
                  in: query
                  description: A query to search services by if they are impacted with active incidents
                  schema:
                    type: string
                - name: owner
                  in: query
                  description: A query to search services by their owner
                  schema:
                    type: string
                - name: responding_teams
                  in: query
                  description: A comma separated list of team ids
                  schema:
                    type: string
                - name: functionalities
                  in: query
                  description: A comma separated list of functionality ids
                  schema:
                    type: string
                - name: available_downstream_dependencies_for_id
                  in: query
                  description: A query to find services that are available to be downstream dependencies for the passed service ID
                  schema:
                    type: string
                - name: available_upstream_dependencies_for_id
                  in: query
                  description: A query to find services that are available to be upstream dependencies for the passed service ID
                  schema:
                    type: string
                - name: lite
                  in: query
                  description: Boolean to determine whether to return a slimified version of the services object
                  schema:
                    type: boolean
                - name: include
                  in: query
                  description: Use in conjunction with lite param to specify additional attributes to include
                  style: form
                  explode: false
                  schema:
                    type: array
                    items:
                        type: string
            responses:
                '200':
                    description: List all of the services that have been added to the organization.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceEntityPaginated"
        post:
            tags:
                - Services
            summary: Create a service
            description: Creates a service for the organization, you may also create or attach functionalities to the service on create.
            operationId: createService
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1Services"
                required: true
            responses:
                '201':
                    description: Creates a service for the organization, you may also create or attach functionalities to the service on create.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceEntity"
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ErrorEntity"
            x-codegen-request-body-name: postV1Services
    "/v1/services/service_links":
        post:
            tags:
                - Services
            summary: Create multiple services and link them to external services
            description: Creates a service with the appropriate integration for each external service ID passed
            operationId: createServiceLinks
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1ServicesServiceLinks"
                required: true
            responses:
                '201':
                    description: Creates a service with the appropriate integration for each external service ID passed
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    "$ref": "#/components/schemas/ServiceLinkEntity"
            x-codegen-request-body-name: postV1ServicesServiceLinks
    "/v1/services/{service_id}":
        get:
            tags:
                - Services
            summary: Get a service
            description: Retrieves a single service by ID
            operationId: getService
            parameters:
                - name: service_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves a single service by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceEntity"
        delete:
            tags:
                - Services
            summary: Delete a service
            description: Deletes the service from FireHydrant.
            operationId: deleteService
            parameters:
                - name: service_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Deletes the service from FireHydrant.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceEntity"
        patch:
            tags:
                - Services
            summary: Update a service
            description: |
                Update a services attributes, you may also add or remove functionalities from the service as well.
                Note: You may not remove or add individual label key/value pairs. You must include the entire object to override label values.
            operationId: updateService
            parameters:
                - name: service_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1ServicesServiceId"
                required: true
            responses:
                '200':
                    description: |
                        Update a services attributes, you may also add or remove functionalities from the service as well.
                        Note: You may not remove or add individual label key/value pairs. You must include the entire object to override label values.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceEntity"
            x-codegen-request-body-name: patchV1ServicesServiceId
    "/v1/services/{service_id}/available_downstream_dependencies":
        get:
            tags:
                - Services
            summary: List available downstream service dependencies
            description: Retrieves all services that are available to be downstream dependencies
            operationId: listServiceAvailableDownstreamDependencies
            parameters:
                - name: service_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves all services that are available to be downstream dependencies
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceEntityLite"
    "/v1/services/{service_id}/available_upstream_dependencies":
        get:
            tags:
                - Services
            summary: List available upstream service dependencies
            description: Retrieves all services that are available to be upstream dependencies
            operationId: listServiceAvailableUpstreamDependencies
            parameters:
                - name: service_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves all services that are available to be upstream dependencies
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceEntityLite"
    "/v1/services/{service_id}/checklist_response/{checklist_id}":
        post:
            tags:
                - Services
            summary: Create a checklist response for a service
            description: Creates a response for a checklist item
            operationId: createServiceChecklistResponse
            parameters:
                - name: service_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: checklist_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1ServicesServiceIdChecklistResponseChecklistId"
                required: true
            responses:
                '201':
                    description: Creates a response for a checklist item
                    content: {}
            x-codegen-request-body-name: postV1ServicesServiceIdChecklistResponseChecklistId
    "/v1/services/{service_id}/dependencies":
        get:
            tags:
                - Services
            summary: List dependencies for a service
            description: Retrieves a service's dependencies
            operationId: getServiceDependencies
            parameters:
                - name: service_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: flatten
                  in: query
                  description: If true, returns all dependencies in one array. If false, splits dependencies into different arrays for child and parent dependencies
                  schema:
                    type: boolean
            responses:
                '200':
                    description: Retrieves a service's dependencies
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceWithAllDependenciesEntity"
    "/v1/services/{service_id}/service_links/{remote_id}":
        delete:
            tags:
                - Services
            summary: Delete a service link
            description: Deletes a service link from FireHydrant.
            operationId: deleteServiceLink
            parameters:
                - name: service_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: remote_id
                  in: path
                  description: |
                    The external service ID which can be found in the JSON
                    from GET services/:service_id endpoint under
                    functionalities > external_resources > remote_id
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Deletes a service link from FireHydrant.
                    content: {}
    "/v1/severities":
        get:
            tags:
                - Incident Settings
            summary: List severities
            description: Lists severities
            operationId: listSeverities
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists severities
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityEntityPaginated"
        post:
            tags:
                - Incident Settings
            summary: Create a severity
            description: Create a new severity
            operationId: createSeverity
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1Severities"
                required: true
            responses:
                '201':
                    description: Create a new severity
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityEntity"
            x-codegen-request-body-name: postV1Severities
    "/v1/severities/{severity_slug}":
        get:
            tags:
                - Incident Settings
            summary: Get a severity
            description: Retrieve a specific severity
            operationId: getSeverity
            parameters:
                - name: severity_slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a specific severity
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityEntity"
        delete:
            tags:
                - Incident Settings
            summary: Delete a severity
            description: Delete a specific severity
            operationId: deleteSeverity
            parameters:
                - name: severity_slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a specific severity
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityEntity"
        patch:
            tags:
                - Incident Settings
            summary: Update a severity
            description: Update a specific severity
            operationId: updateSeverity
            parameters:
                - name: severity_slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1SeveritiesSeveritySlug"
                required: true
            responses:
                '200':
                    description: Update a specific severity
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityEntity"
            x-codegen-request-body-name: patchV1SeveritiesSeveritySlug
    "/v1/severity_matrix":
        get:
            tags:
                - Incident Settings
            summary: Get severity matrix
            description: Retrieve the Severity matrix for your organization and its components and configured severities.
            operationId: getSeverityMatrix
            responses:
                '200':
                    description: Retrieve the Severity matrix for your organization and its components and configured severities.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityMatrix_SeverityMatrixEntity"
        patch:
            tags:
                - Incident Settings
            summary: Update severity matrix
            description: Update available severities and impacts in your organization's severity matrix.
            operationId: updateSeverityMatrix
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1SeverityMatrix"
                required: true
            responses:
                '200':
                    description: Update available severities and impacts in your organization's severity matrix.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityMatrix_SeverityMatrixEntity"
            x-codegen-request-body-name: patchV1SeverityMatrix
    "/v1/severity_matrix/conditions":
        get:
            tags:
                - Incident Settings
            summary: List severity matrix conditions
            description: Lists conditions
            operationId: listSeverityMatrixConditions
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists conditions
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityMatrix_ConditionEntity"
        post:
            tags:
                - Incident Settings
            summary: Create a severity matrix condition
            description: Create a new condition
            operationId: createSeverityMatrixCondition
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1SeverityMatrixConditions"
                required: true
            responses:
                '201':
                    description: Create a new condition
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityMatrix_ConditionEntity"
            x-codegen-request-body-name: postV1SeverityMatrixConditions
    "/v1/severity_matrix/conditions/{condition_id}":
        get:
            tags:
                - Incident Settings
            operationId: getSeverityMatrixCondition
            parameters:
                - name: condition_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get Condition(s)
                    content: {}
            summary: Get a severity matrix condition
        delete:
            tags:
                - Incident Settings
            summary: Delete a severity matrix condition
            description: Delete a specific condition
            operationId: deleteSeverityMatrixCondition
            parameters:
                - name: condition_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a specific condition
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityMatrix_ConditionEntity"
        patch:
            tags:
                - Incident Settings
            summary: Update a severity matrix condition
            description: Update a specific condition
            operationId: updateSeverityMatrixCondition
            parameters:
                - name: condition_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1SeverityMatrixConditionsConditionId"
                required: true
            responses:
                '200':
                    description: Update a specific condition
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityMatrix_ConditionEntity"
            x-codegen-request-body-name: patchV1SeverityMatrixConditionsConditionId
    "/v1/severity_matrix/impacts":
        get:
            tags:
                - Incident Settings
            summary: List severity matrix impacts
            description: Lists impacts
            operationId: listSeverityMatrixImpacts
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists impacts
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityMatrix_ImpactEntity"
        post:
            tags:
                - Incident Settings
            summary: Create a severity matrix impact
            description: Create a new impact
            operationId: createSeverityMatrixImpact
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1SeverityMatrixImpacts"
                required: true
            responses:
                '201':
                    description: Create a new impact
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityMatrix_ImpactEntity"
            x-codegen-request-body-name: postV1SeverityMatrixImpacts
    "/v1/severity_matrix/impacts/{impact_id}":
        delete:
            tags:
                - Incident Settings
            summary: Delete an impact from the severity matrix
            description: Delete a specific impact
            operationId: deleteSeverityMatrixImpact
            parameters:
                - name: impact_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a specific impact
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityMatrix_ImpactEntity"
        patch:
            tags:
                - Incident Settings
            summary: Update an impact in the severity matrix
            description: Update a specific impact
            operationId: updateSeverityMatrixImpact
            parameters:
                - name: impact_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1SeverityMatrixImpactsImpactId"
                required: true
            responses:
                '200':
                    description: Update a specific impact
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/SeverityMatrix_ImpactEntity"
            x-codegen-request-body-name: patchV1SeverityMatrixImpactsImpactId
    "/v1/signals/analytics/grouped_metrics":
        get:
            tags:
                - Signals
            summary: List grouped signal alert metrics
            description: Generate a report of grouped metrics for Signals alerts
            operationId: getSignalGroupedMetrics
            parameters:
                - name: signal_rules
                  in: query
                  description: A comma separated list of signal rule IDs
                  schema:
                    type: string
                - name: teams
                  in: query
                  description: A comma separated list of team IDs
                  schema:
                    type: string
                - name: environments
                  in: query
                  description: A comma separated list of environment IDs
                  schema:
                    type: string
                - name: services
                  in: query
                  description: A comma separated list of service IDs
                  schema:
                    type: string
                - name: tags
                  in: query
                  description: A comma separated list of tags
                  schema:
                    type: string
                - name: users
                  in: query
                  description: A comma separated list of user IDs
                  schema:
                    type: string
                - name: group_by
                  in: query
                  description: String that determines how records are grouped
                  schema:
                    type: string
                    enum:
                        - signal_rules
                        - teams
                        - services
                        - environments
                        - tags
                - name: sort_by
                  in: query
                  description: String that determines how records are sorted
                  schema:
                    type: string
                    enum:
                        - total_opened_alerts
                        - total_acked_alerts
                        - total_incidents
                        - acked_percentage
                        - incidents_percentage
                - name: sort_direction
                  in: query
                  description: String that determines how records are sorted
                  schema:
                    type: string
                    enum:
                        - asc
                        - desc
                - name: start_date
                  in: query
                  description: The start date to return metrics from
                  schema:
                    type: string
                    format: date-time
                - name: end_date
                  in: query
                  description: The end date to return metrics from
                  schema:
                    type: string
                    format: date-time
            responses:
                '200':
                    description: Generate a report of grouped metrics for Signals alerts
                    content: {}
    "/v1/signals/analytics/mttx":
        get:
            tags:
                - Signals
            summary: Get MTTX analytics for signals
            description: Get mean-time-to-acknowledged (MTTA) and mean-time-to-resolved (MTTR) metrics for Signals alerts
            operationId: getSignalsMttxAnalytics
            parameters:
                - name: signal_rules
                  in: query
                  description: A comma separated list of signal rule IDs
                  schema:
                    type: string
                - name: teams
                  in: query
                  description: A comma separated list of team IDs
                  schema:
                    type: string
                - name: environments
                  in: query
                  description: A comma separated list of environment IDs
                  schema:
                    type: string
                - name: services
                  in: query
                  description: A comma separated list of service IDs
                  schema:
                    type: string
                - name: tags
                  in: query
                  description: A comma separated list of tags
                  schema:
                    type: string
                - name: users
                  in: query
                  description: A comma separated list of user IDs
                  schema:
                    type: string
                - name: group_by
                  in: query
                  description: String that determines how records are grouped
                  schema:
                    type: string
                    enum:
                        - signal_rules
                        - teams
                        - services
                        - environments
                        - tags
                - name: sort_by
                  in: query
                  description: String that determines how records are sorted
                  schema:
                    type: string
                    enum:
                        - total_opened_alerts
                        - total_acked_alerts
                        - total_incidents
                        - acked_percentage
                        - incidents_percentage
                - name: sort_direction
                  in: query
                  description: String that determines how records are sorted
                  schema:
                    type: string
                    enum:
                        - asc
                        - desc
                - name: start_date
                  in: query
                  description: The start date to return metrics from
                  schema:
                    type: string
                    format: date-time
                - name: end_date
                  in: query
                  description: The end date to return metrics from
                  schema:
                    type: string
                    format: date-time
            responses:
                '200':
                    description: Get mean-time-to-acknowledged (MTTA) and mean-time-to-resolved (MTTR) metrics for Signals alerts
                    content: {}
    "/v1/signals/analytics/timeseries":
        get:
            tags:
                - Signals
            summary: List timeseries metrics for signal alerts
            description: Generate a timeseries-based report of metrics for Signals alerts
            operationId: getSignalsAnalyticsTimeseries
            parameters:
                - name: bucket
                  in: query
                  description: String that determines how records are grouped
                  schema:
                    type: string
                    enum:
                        - month
                        - week
                        - day
                - name: signal_rules
                  in: query
                  description: A comma separated list of signal rule IDs
                  schema:
                    type: string
                - name: teams
                  in: query
                  description: A comma separated list of team IDs
                  schema:
                    type: string
                - name: environments
                  in: query
                  description: A comma separated list of environment IDs
                  schema:
                    type: string
                - name: services
                  in: query
                  description: A comma separated list of service IDs
                  schema:
                    type: string
                - name: tags
                  in: query
                  description: A comma separated list of tags
                  schema:
                    type: string
                - name: users
                  in: query
                  description: A comma separated list of user IDs
                  schema:
                    type: string
                - name: group_by
                  in: query
                  description: String that determines how records are grouped
                  schema:
                    type: string
                    enum:
                        - signal_rules
                        - teams
                        - services
                        - environments
                        - tags
                - name: sort_by
                  in: query
                  description: String that determines how records are sorted
                  schema:
                    type: string
                    enum:
                        - total_opened_alerts
                        - total_acked_alerts
                        - total_incidents
                        - acked_percentage
                        - incidents_percentage
                - name: sort_direction
                  in: query
                  description: String that determines how records are sorted
                  schema:
                    type: string
                    enum:
                        - asc
                        - desc
                - name: start_date
                  in: query
                  description: The start date to return metrics from
                  schema:
                    type: string
                    format: date-time
                - name: end_date
                  in: query
                  description: The end date to return metrics from
                  schema:
                    type: string
                    format: date-time
            responses:
                '200':
                    description: Generate a timeseries-based report of metrics for Signals alerts
                    content: {}
    "/v1/signals/debugger":
        post:
            tags:
                - Signals
            operationId: debugSignal
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1SignalsDebugger"
                required: true
            responses:
                '201':
                    description: created Debugger
                    content: {}
            x-codegen-request-body-name: postV1SignalsDebugger
            summary: Debug a signal
    "/v1/signals/email_targets":
        get:
            tags:
                - Signals
            summary: List email targets for signals
            description: List all Signals email targets for a team.
            operationId: listSignalEmailTargets
            parameters:
                - name: query
                  in: query
                  description: A query string to search the list of targets by.
                  schema:
                    type: string
            responses:
                '200':
                    description: List all Signals email targets for a team.
                    content: {}
        post:
            tags:
                - Signals
            summary: Create an email target for signals
            description: Create a Signals email target for a team.
            operationId: createSignalEmailTarget
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1SignalsEmailTargets"
                required: true
            responses:
                '201':
                    description: Create a Signals email target for a team.
                    content: {}
            x-codegen-request-body-name: postV1SignalsEmailTargets
    "/v1/signals/email_targets/{id}":
        get:
            tags:
                - Signals
            summary: Get a signal email target
            description: Get a Signals email target by ID
            operationId: getSignalEmailTarget
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Get a Signals email target by ID
                    content: {}
        delete:
            tags:
                - Signals
            summary: Delete a signal email target
            description: Delete a Signals email target by ID
            operationId: deleteSignalEmailTarget
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a Signals email target by ID
                    content: {}
        patch:
            tags:
                - Signals
            summary: Update a signal email target
            description: Update a Signals email target by ID
            operationId: updateSignalEmailTarget
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1SignalsEmailTargetsId"
                required: true
            responses:
                '200':
                    description: Update a Signals email target by ID
                    content: {}
            x-codegen-request-body-name: patchV1SignalsEmailTargetsId
    "/v1/signals/event_sources":
        get:
            tags:
                - Signals
            operationId: listSignalEventSources
            parameters:
                - name: team_id
                  in: query
                  description: Team ID to send signals to directly
                  schema:
                    type: string
                - name: escalation_policy_id
                  in: query
                  description: Escalation policy ID to send signals to directly. `team_id` is required if this is provided.
                  schema:
                    type: string
                - name: on_call_schedule_id
                  in: query
                  description: On-call schedule ID to send signals to directly. `team_id` is required if this is provided.
                  schema:
                    type: string
                - name: user_id
                  in: query
                  description: User ID to send signals to directly
                  schema:
                    type: string
            responses:
                '200':
                    description: get EventSource(s)
                    content: {}
            summary: List event sources for signals
    "/v1/signals/ingest_url":
        get:
            tags:
                - Signals
            summary: Get signal ingestion URL
            description: Retrieve the url for ingesting signals for your organization
            operationId: getSignalIngestUrl
            parameters:
                - name: team_id
                  in: query
                  description: Team ID to send signals to directly
                  schema:
                    type: string
                - name: escalation_policy_id
                  in: query
                  description: Escalation policy ID to send signals to directly. `team_id` is required if this is provided.
                  schema:
                    type: string
                - name: on_call_schedule_id
                  in: query
                  description: On-call schedule ID to send signals to directly. `team_id` is required if this is provided.
                  schema:
                    type: string
                - name: user_id
                  in: query
                  description: User ID to send signals to directly
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve the url for ingesting signals for your organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Signals_API_IngestKeyEntity"
    "/v1/signals/transposers":
        get:
            tags:
                - Signals
            operationId: listSignalTransposers
            responses:
                '200':
                    description: get Transposer(s)
                    content: {}
            summary: List signal transposers
    "/v1/signals/webhook_targets":
        get:
            tags:
                - Signals
            summary: List webhook targets for signals
            description: List all Signals webhook targets.
            operationId: listSignalWebhookTargets
            parameters:
                - name: query
                  in: query
                  description: A query string for searching through the list of webhook targets.
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all Signals webhook targets.
                    content: {}
        post:
            tags:
                - Signals
            summary: Create a webhook target for signals
            description: Create a Signals webhook target.
            operationId: createSignalWebhookTarget
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1SignalsWebhookTargets"
                required: true
            responses:
                '201':
                    description: Create a Signals webhook target.
                    content: {}
            x-codegen-request-body-name: postV1SignalsWebhookTargets
    "/v1/signals/webhook_targets/{id}":
        get:
            tags:
                - Signals
            summary: Get a webhook target
            description: Get a Signals webhook target by ID
            operationId: getSignalsWebhookTarget
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Get a Signals webhook target by ID
                    content: {}
        delete:
            tags:
                - Signals
            summary: Delete a webhook target
            description: Delete a Signals webhook target by ID
            operationId: deleteSignalsWebhookTarget
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a Signals webhook target by ID
                    content: {}
        patch:
            tags:
                - Signals
            summary: Update a webhook target
            description: Update a Signals webhook target by ID
            operationId: updateSignalsWebhookTarget
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1SignalsWebhookTargetsId"
                required: true
            responses:
                '200':
                    description: Update a Signals webhook target by ID
                    content: {}
            x-codegen-request-body-name: patchV1SignalsWebhookTargetsId
    "/v1/signals_on_call":
        get:
            tags:
                - Signals
            summary: List on-call schedules
            description: List all Signals on-call schedules for the entire organization.
            operationId: listSignalsOnCall
            parameters:
                - name: team_id
                  in: query
                  description: An optional comma separated list of team IDs to filter currently on-call users by
                  schema:
                    type: string
            responses:
                '200':
                    description: List all Signals on-call schedules for the entire organization.
                    content: {}
    "/v1/status_update_templates":
        get:
            tags:
                - Communication
            summary: List status update templates
            description: List all status update templates for your organization
            operationId: listStatusUpdateTemplates
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all status update templates for your organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/StatusUpdateTemplateEntity"
        post:
            tags:
                - Communication
            summary: Create a status update template
            description: Create a status update template for your organization
            operationId: createStatusUpdateTemplate
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1StatusUpdateTemplates"
                required: true
            responses:
                '201':
                    description: Create a status update template for your organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/StatusUpdateTemplateEntity"
            x-codegen-request-body-name: postV1StatusUpdateTemplates
    "/v1/status_update_templates/{status_update_template_id}":
        get:
            tags:
                - Communication
            summary: Get a status update template
            description: Get a single status update template by ID
            operationId: getStatusUpdateTemplate
            parameters:
                - name: status_update_template_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Get a single status update template by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/StatusUpdateTemplateEntity"
        delete:
            tags:
                - Communication
            summary: Delete a status update template
            description: Delete a single status update template
            operationId: deleteStatusUpdateTemplate
            parameters:
                - name: status_update_template_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a single status update template
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/StatusUpdateTemplateEntity"
        patch:
            x-speakeasy-test: false
            tags:
                - Communication
            summary: Update a status update template
            description: Update a single status update template
            operationId: updateStatusUpdateTemplate
            parameters:
                - name: status_update_template_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1StatusUpdateTemplatesStatusUpdateTemplateId"
                required: true
            responses:
                '200':
                    description: Update a single status update template
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/StatusUpdateTemplateEntity"
            x-codegen-request-body-name: patchV1StatusUpdateTemplatesStatusUpdateTemplateId
    "/v1/task_lists":
        get:
            tags:
                - Tasks
            summary: List task lists
            description: Lists all task lists for your organization
            operationId: listTaskLists
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists all task lists for your organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TaskListEntity"
        post:
            tags:
                - Tasks
            summary: Create a task list
            description: Creates a new task list
            operationId: createTaskList
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1TaskLists"
                required: true
            responses:
                '201':
                    description: Creates a new task list
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TaskListEntity"
            x-codegen-request-body-name: postV1TaskLists
    "/v1/task_lists/{task_list_id}":
        get:
            tags:
                - Tasks
            summary: Get a task list
            description: Retrieves a single task list by ID
            operationId: getTaskList
            parameters:
                - name: task_list_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves a single task list by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TaskListEntity"
        delete:
            tags:
                - Tasks
            summary: Delete a task list
            description: Delete a task list
            operationId: deleteTaskList
            parameters:
                - name: task_list_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a task list
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TaskListEntity"
        patch:
            tags:
                - Tasks
            summary: Update a task list
            description: Updates a task list's attributes and task list items
            operationId: updateTaskList
            parameters:
                - name: task_list_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1TaskListsTaskListId"
                required: true
            responses:
                '200':
                    description: Updates a task list's attributes and task list items
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TaskListEntity"
            x-codegen-request-body-name: patchV1TaskListsTaskListId
    "/v1/teams":
        get:
            tags:
                - Teams
            summary: List teams
            description: List all of the teams in the organization
            operationId: listTeams
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: A query to search teams by their name or description
                  schema:
                    type: string
                - name: name
                  in: query
                  description: A query to search teams by their name
                  schema:
                    type: string
                - name: services
                  in: query
                  description: A comma separated list of service IDs
                  schema:
                    type: string
                - name: default_incident_role
                  in: query
                  description: Filter by teams that have or do not have members with a default incident role asssigned. Value may be 'present', 'blank', or the ID of an incident role.
                  schema:
                    type: string
                - name: lite
                  in: query
                  description: Boolean to determine whether to return a slimified version of the teams object
                  schema:
                    type: boolean
            responses:
                '200':
                    description: List all of the teams in the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TeamEntityPaginated"
        post:
            tags:
                - Teams
            summary: Create a team
            description: Create a new team
            operationId: createTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1Teams"
                required: true
            responses:
                '201':
                    description: Create a new team
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TeamEntity"
            x-codegen-request-body-name: postV1Teams
    "/v1/teams/{team_id}":
        get:
            tags:
                - Teams
            summary: Get a team
            description: Retrieve a single team from its ID
            operationId: getTeam
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: lite
                  in: query
                  description: Boolean to determine whether to return a slimified version of the teams object
                  schema:
                    type: boolean
            responses:
                '200':
                    description: Retrieve a single team from its ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TeamEntity"
        delete:
            tags:
                - Teams
            summary: Archive a team
            description: Archives an team which will hide it from lists and metrics
            operationId: archiveTeam
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Archives an team which will hide it from lists and metrics
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TeamEntity"
        patch:
            tags:
                - Teams
            summary: Update a team
            description: Update a single team from its ID
            operationId: updateTeam
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1TeamsTeamId"
                required: true
            responses:
                '200':
                    description: Update a single team from its ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TeamEntity"
            x-codegen-request-body-name: patchV1TeamsTeamId
    "/v1/teams/{team_id}/escalation_policies":
        get:
            tags:
                - Signals
            summary: List escalation policies for a team
            description: List all Signals escalation policies for a team.
            operationId: listTeamEscalationPolicies
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: query
                  in: query
                  description: A query string for searching through the list of escalation policies.
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all Signals escalation policies for a team.
                    content: {}
        post:
            tags:
                - Signals
            summary: Create an escalation policy for a team
            description: Create a Signals escalation policy for a team.
            operationId: createTeamEscalationPolicy
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1TeamsTeamIdEscalationPolicies"
                required: true
            responses:
                '201':
                    description: Create a Signals escalation policy for a team.
                    content: {}
            x-codegen-request-body-name: postV1TeamsTeamIdEscalationPolicies
    "/v1/teams/{team_id}/escalation_policies/{id}":
        get:
            tags:
                - Signals
            summary: Get an escalation policy for a team
            description: Get a Signals escalation policy by ID
            operationId: getTeamEscalationPolicy
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Get a Signals escalation policy by ID
                    content: {}
        delete:
            tags:
                - Signals
            summary: Delete an escalation policy for a team
            description: Delete a Signals escalation policy by ID
            operationId: deleteTeamEscalationPolicy
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a Signals escalation policy by ID
                    content: {}
        patch:
            tags:
                - Signals
            summary: Update an escalation policy for a team
            description: Update a Signals escalation policy by ID
            operationId: updateTeamEscalationPolicy
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1TeamsTeamIdEscalationPoliciesId"
                required: true
            responses:
                '200':
                    description: Update a Signals escalation policy by ID
                    content: {}
            x-codegen-request-body-name: patchV1TeamsTeamIdEscalationPoliciesId
    "/v1/teams/{team_id}/on_call_schedules":
        get:
            tags:
                - Teams
            summary: List on-call schedules for a team
            description: List all Signals on-call schedules for a team.
            operationId: listTeamOnCallSchedules
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: query
                  in: query
                  description: A query string for searching through the list of on-call schedules.
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all Signals on-call schedules for a team.
                    content: {}
        post:
            tags:
                - Teams
            summary: Create an on-call schedule for a team
            description: Create a Signals on-call schedule for a team.
            operationId: createTeamOnCallSchedule
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1TeamsTeamIdOnCallSchedules"
                required: true
            responses:
                '201':
                    description: Create a Signals on-call schedule for a team.
                    content: {}
            x-codegen-request-body-name: postV1TeamsTeamIdOnCallSchedules
    "/v1/teams/{team_id}/on_call_schedules/{schedule_id}":
        get:
            tags:
                - Signals
            summary: Get an on-call schedule for a team
            description: Get a Signals on-call schedule by ID
            operationId: getTeamOnCallSchedule
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: schedule_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Get a Signals on-call schedule by ID
                    content: {}
        delete:
            tags:
                - Signals
            summary: Delete an on-call schedule for a team
            description: Delete a Signals on-call schedule by ID
            operationId: deleteTeamOnCallSchedule
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: schedule_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a Signals on-call schedule by ID
                    content: {}
        patch:
            tags:
                - Signals
            summary: Update an on-call schedule for a team
            description: Update a Signals on-call schedule by ID
            operationId: updateTeamOnCallSchedule
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: schedule_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1TeamsTeamIdOnCallSchedulesScheduleId"
                required: true
            responses:
                '200':
                    description: Update a Signals on-call schedule by ID
                    content: {}
            x-codegen-request-body-name: patchV1TeamsTeamIdOnCallSchedulesScheduleId
    "/v1/teams/{team_id}/on_call_schedules/{schedule_id}/shifts":
        post:
            tags:
                - Signals
            summary: Create a shift for an on-call schedule
            description: Create a Signals on-call shift in a schedule.
            operationId: createTeamOnCallScheduleShift
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: schedule_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1TeamsTeamIdOnCallSchedulesScheduleIdShifts"
                required: true
            responses:
                '201':
                    description: Create a Signals on-call shift in a schedule.
                    content: {}
            x-codegen-request-body-name: postV1TeamsTeamIdOnCallSchedulesScheduleIdShifts
    "/v1/teams/{team_id}/on_call_schedules/{schedule_id}/shifts/{id}":
        get:
            tags:
                - Teams
            summary: Get an on-call shift for a team schedule
            description: Get a Signals on-call shift by ID
            operationId: getTeamScheduleShift
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: schedule_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Get a Signals on-call shift by ID
                    content: {}
        delete:
            tags:
                - Teams
            summary: Delete an on-call shift from a team schedule
            description: Delete a Signals on-call shift by ID
            operationId: deleteTeamScheduleShift
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: schedule_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a Signals on-call shift by ID
                    content: {}
        patch:
            tags:
                - Teams
            summary: Update an on-call shift in a team schedule
            description: Update a Signals on-call shift by ID
            operationId: updateTeamScheduleShift
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: schedule_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId"
                required: true
            responses:
                '200':
                    description: Update a Signals on-call shift by ID
                    content: {}
            x-codegen-request-body-name: patchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId
    "/v1/teams/{team_id}/signal_rules":
        get:
            tags:
                - Signals
            summary: List signal rules for a team
            description: List all Signals rules for a team.
            operationId: listTeamSignalRules
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: query
                  in: query
                  description: A query string for searching through the list of alerting rules.
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all Signals rules for a team.
                    content: {}
        post:
            tags:
                - Signals
            summary: Create a signal rule for a team
            description: Create a Signals rule for a team.
            operationId: createTeamSignalRule
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1TeamsTeamIdSignalRules"
                required: true
            responses:
                '201':
                    description: Create a Signals rule for a team.
                    content: {}
            x-codegen-request-body-name: postV1TeamsTeamIdSignalRules
    "/v1/teams/{team_id}/signal_rules/{id}":
        get:
            tags:
                - Signals
            summary: Get a signal rule
            description: Get a Signals rule by ID.
            operationId: getTeamSignalRule
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Get a Signals rule by ID.
                    content: {}
        delete:
            tags:
                - Signals
            summary: Delete a signal rule
            description: Delete a Signals rule by ID
            operationId: deleteTeamSignalRule
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a Signals rule by ID
                    content: {}
        patch:
            tags:
                - Signals
            summary: Update a signal rule
            description: Update a Signals rule by ID
            operationId: updateTeamSignalRule
            parameters:
                - name: team_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1TeamsTeamIdSignalRulesId"
                required: true
            responses:
                '200':
                    description: Update a Signals rule by ID
                    content: {}
            x-codegen-request-body-name: patchV1TeamsTeamIdSignalRulesId
    "/v1/ticketing/priorities":
        get:
            tags:
                - Incident Settings
            summary: List ticketing priorities
            description: List all ticketing priorities available to the organization
            operationId: listTicketingPriorities
            responses:
                '200':
                    description: List all ticketing priorities available to the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_PriorityEntity"
        post:
            tags:
                - Incident Settings
            summary: Create a ticketing priority
            description: Create a single ticketing priority
            operationId: createTicketingPriority
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1TicketingPriorities"
                required: true
            responses:
                '201':
                    description: Create a single ticketing priority
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_PriorityEntity"
            x-codegen-request-body-name: postV1TicketingPriorities
    "/v1/ticketing/priorities/{id}":
        get:
            tags:
                - Integrations
            summary: Get a ticketing priority
            description: Retrieve a single ticketing priority by ID
            operationId: getTicketingPriority
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single ticketing priority by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_PriorityEntity"
        delete:
            tags:
                - Integrations
            summary: Delete a ticketing priority
            description: Delete a single ticketing priority by ID
            operationId: deleteTicketingPriority
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Delete a single ticketing priority by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_PriorityEntity"
        patch:
            tags:
                - Integrations
            summary: Update a ticketing priority
            description: Update a single ticketing priority's attributes
            operationId: updateTicketingPriority
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1TicketingPrioritiesId"
                required: true
            responses:
                '200':
                    description: Update a single ticketing priority's attributes
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_PriorityEntity"
            x-codegen-request-body-name: patchV1TicketingPrioritiesId
    "/v1/ticketing/projects":
        get:
            tags:
                - Integrations
            summary: List ticketing projects
            description: List all ticketing projects available to the organization
            operationId: listTicketingProjects
            parameters:
                - name: supports_ticket_types
                  in: query
                  schema:
                    type: string
                - name: providers
                  in: query
                  schema:
                    type: string
                - name: connection_ids
                  in: query
                  schema:
                    type: string
                - name: configured_projects
                  in: query
                  schema:
                    type: boolean
                - name: query
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: List all ticketing projects available to the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_Projects_ProjectListItemEntity"
    "/v1/ticketing/projects/{ticketing_project_id}":
        get:
            tags:
                - Integrations
            summary: Get a ticketing project
            description: Retrieve a single ticketing project by ID
            operationId: getTicketingProject
            parameters:
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single ticketing project by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_Projects_ProjectListItemEntity"
    "/v1/ticketing/projects/{ticketing_project_id}/configuration_options":
        get:
            tags:
                - Integrations
            operationId: getTicketingProjectConfigurationOptions
            parameters:
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get ConfigurationOption(s)
                    content: {}
            summary: List configuration options for a ticketing project
    "/v1/ticketing/projects/{ticketing_project_id}/configuration_options/options_for/{field_id}":
        get:
            tags:
                - Integrations
            operationId: getTicketingProjectFieldOptions
            parameters:
                - name: field_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get OptionsFor(s)
                    content: {}
            summary: List configuration options for a ticketing project field
    "/v1/ticketing/projects/{ticketing_project_id}/field_maps":
        post:
            tags:
                - Integrations
            summary: Create a field mapping for a ticketing project
            description: Creates field map for a ticketing project
            operationId: createTicketingProjectFieldMap
            parameters:
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '201':
                    description: Creates field map for a ticketing project
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_ProjectFieldMapEntity"
    "/v1/ticketing/projects/{ticketing_project_id}/field_maps/available_fields":
        get:
            tags:
                - Integrations
            summary: List available fields for ticket field mapping
            description: Returns metadata for the fields that are available for field mapping.
            operationId: getTicketingProjectAvailableFields
            parameters:
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Returns metadata for the fields that are available for field mapping.
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_FieldMaps_MappableFieldEntity"
    "/v1/ticketing/projects/{ticketing_project_id}/field_maps/{map_id}":
        get:
            tags:
                - Integrations
            summary: Get a field map for a ticketing project
            description: Retrieve field map for a ticketing project
            operationId: getTicketingProjectFieldMap
            parameters:
                - name: map_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve field map for a ticketing project
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_ProjectFieldMapEntity"
        delete:
            tags:
                - Integrations
            summary: Delete a field map for a ticketing project
            description: Archive field map for a ticketing project
            operationId: deleteTicketingProjectFieldMap
            parameters:
                - name: map_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Archive field map for a ticketing project
                    content: {}
        patch:
            tags:
                - Integrations
            summary: Update a field map for a ticketing project
            description: Update field map for a ticketing project
            operationId: updateTicketingProjectFieldMap
            parameters:
                - name: map_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Update field map for a ticketing project
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_ProjectFieldMapEntity"
    "/v1/ticketing/projects/{ticketing_project_id}/provider_project_configurations":
        post:
            tags:
                - Integrations
            summary: Create a ticketing project configuration
            description: Creates configuration for a ticketing project
            operationId: createTicketingProjectConfiguration
            parameters:
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '201':
                    description: Creates configuration for a ticketing project
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_ProjectConfigEntity"
    "/v1/ticketing/projects/{ticketing_project_id}/provider_project_configurations/{config_id}":
        get:
            tags:
                - Integrations
            summary: Get a ticketing project configuration
            description: Retrieve configuration for a ticketing project
            operationId: getTicketingProjectConfig
            parameters:
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: config_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve configuration for a ticketing project
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_ProjectConfigEntity"
        delete:
            tags:
                - Integrations
            summary: Delete a ticketing project configuration
            description: Archive configuration for a ticketing project
            operationId: deleteTicketingProjectConfig
            parameters:
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: config_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Archive configuration for a ticketing project
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_ProjectConfigEntity"
        patch:
            tags:
                - Integrations
            summary: Update a ticketing project configuration
            description: Update configuration for a ticketing project
            operationId: updateTicketingProjectConfig
            parameters:
                - name: ticketing_project_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: config_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Update configuration for a ticketing project
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_ProjectConfigEntity"
    "/v1/ticketing/ticket_tags":
        get:
            tags:
                - Integrations
            summary: List ticket tags
            description: List all of the ticket tags in the organization
            operationId: listTicketTags
            parameters:
                - name: prefix
                  in: query
                  schema:
                    type: string
            responses:
                '200':
                    description: List all of the ticket tags in the organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/TagEntityPaginated"
    "/v1/ticketing/tickets":
        get:
            tags:
                - Tasks
            summary: List tickets
            description: List all of the tickets that have been added to the organiation
            operationId: listTickets
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: tags
                  in: query
                  description: A comma separated list of tags
                  schema:
                    type: string
                - name: tag_match_strategy
                  in: query
                  description: A matching strategy for the tags provided
                  schema:
                    type: string
                    enum:
                        - any
                        - match_all
                        - exclude
                - name: assigned_user
                  in: query
                  description: Filter tickets assigned to this user id
                  schema:
                    type: string
                - name: state
                  in: query
                  description: Filter tickets by state
                  schema:
                    type: string
                    enum:
                        - open
                        - in_progress
                        - cancelled
                        - done
            responses:
                '200':
                    description: List all of the tickets that have been added to the organiation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_TicketEntity"
        post:
            tags:
                - Tasks
            summary: Create a ticket
            description: Creates a ticket for a project
            operationId: createTicket
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1TicketingTickets"
                required: true
            responses:
                '201':
                    description: Creates a ticket for a project
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_TicketEntity"
            x-codegen-request-body-name: postV1TicketingTickets
    "/v1/ticketing/tickets/{ticket_id}":
        get:
            tags:
                - Integrations
            summary: Get a ticket
            description: Retrieves a single ticket by ID
            operationId: getTicket
            parameters:
                - name: ticket_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieves a single ticket by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_TicketEntity"
        delete:
            tags:
                - Integrations
            operationId: deleteTicket
            parameters:
                - name: ticket_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: deleted Ticket
                    content: {}
            summary: Delete a ticket
        patch:
            tags:
                - Integrations
            summary: Update a ticket
            description: Update a ticket's attributes
            operationId: updateTicket
            parameters:
                - name: ticket_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1TicketingTicketsTicketId"
                required: true
            responses:
                '200':
                    description: Update a ticket's attributes
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Ticketing_TicketEntity"
            x-codegen-request-body-name: patchV1TicketingTicketsTicketId
    "/v1/users":
        get:
            tags:
                - Users
            summary: List users
            description: Retrieve a list of all users in an organization
            operationId: listUsers
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: Text string of a query to filter users by name or email
                  schema:
                    type: string
                - name: name
                  in: query
                  description: Text string of a query to filter users by name
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a list of all users in an organization
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/UserEntityPaginated"
    "/v1/users/{id}":
        get:
            tags:
                - Users
            summary: Get a user
            description: Retrieve a single user by ID
            operationId: getUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a single user by ID
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/UserEntity"
    "/v1/users/{id}/services":
        get:
            tags:
                - Services
            summary: List services for a user's teams
            description: Retrieves a list of services owned by the teams a user is on
            operationId: listUserServices
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Retrieves a list of services owned by the teams a user is on
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    "$ref": "#/components/schemas/TeamEntityPaginated"
    "/v1/webhooks":
        get:
            tags:
                - Webhooks
            summary: List webhooks
            description: Lists webhooks
            operationId: listWebhooks
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: per_page
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: Lists webhooks
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Webhooks_Entities_WebhookEntity"
        post:
            tags:
                - Webhooks
            summary: Create a webhook
            description: Create a new webhook
            operationId: createWebhook
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/postV1Webhooks"
                required: true
            responses:
                '201':
                    description: Create a new webhook
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Webhooks_Entities_WebhookEntity"
            x-codegen-request-body-name: postV1Webhooks
    "/v1/webhooks/{webhook_id}":
        get:
            tags:
                - Webhooks
            summary: Get a webhook
            description: Retrieve a specific webhook
            operationId: getWebhook
            parameters:
                - name: webhook_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: Retrieve a specific webhook
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Webhooks_Entities_WebhookEntity"
        delete:
            tags:
                - Webhooks
            summary: Delete a webhook
            description: Delete a specific webhook
            operationId: deleteWebhook
            parameters:
                - name: webhook_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                '204':
                    description: Delete a specific webhook
                    content: {}
        patch:
            tags:
                - Webhooks
            summary: Update a webhook
            description: Update a specific webhook
            operationId: updateWebhook
            parameters:
                - name: webhook_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/patchV1WebhooksWebhookId"
                required: true
            responses:
                '200':
                    description: Update a specific webhook
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/Webhooks_Entities_WebhookEntity"
            x-codegen-request-body-name: patchV1WebhooksWebhookId
    "/v1/webhooks/{webhook_id}/deliveries":
        get:
            tags:
                - Webhooks
            operationId: listWebhookDeliveries
            parameters:
                - name: webhook_id
                  in: path
                  description: ID of a webhook
                  required: true
                  schema:
                    type: string
            responses:
                '200':
                    description: get Delivery(s)
                    content: {}
            summary: List webhook deliveries
components:
    schemas:
        ErrorEntity:
            type: object
            properties:
                detail:
                    type: string
                messages:
                    type: array
                    items:
                        type: string
                meta:
                    type: object
                    properties: {}
                    description: An object with additional error metadata
                code:
                    type: string
                    description: A stable code on which to match errors
            description: ErrorEntity model
        PongEntity:
            type: object
            properties:
                response:
                    type: string
                actor:
                    "$ref": "#/components/schemas/ActorEntity"
                organization:
                    "$ref": "#/components/schemas/OrganizationEntity"
            description: PongEntity model
        ActorEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                email:
                    type: string
                type:
                    type: string
                    enum:
                        - firehydrant_user
                        - firehydrant_bot
                        - alertmanager
                        - asana
                        - aws
                        - bugsnag
                        - checkly
                        - custom_alerts
                        - datadog
                        - shortcut
                        - new_relic
                        - nunc
                        - github
                        - giphy
                        - google_meet
                        - google_calendar
                        - microsoft_teams
                        - microsoft_teams_v2
                        - webex
                        - jira_cloud
                        - jira_onprem
                        - opsgenie
                        - pager_duty
                        - honeycomb
                        - patchy
                        - service_now
                        - signals
                        - slack
                        - statuspage
                        - victorops
                        - zendesk
                        - zoom
                        - confluence_cloud
                        - google_docs
                        - zoom_v2
                        - linear
                        - cortex
        OrganizationEntity:
            type: object
            properties:
                name:
                    type: string
                id:
                    type: string
        postV1Environments:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
            description: Creates an environment for the organization
        EnvironmentEntryEntity:
            type: object
            properties:
                id:
                    type: string
                    description: UUID of the Environment
                name:
                    type: string
                    description: Name of the Environment
                slug:
                    type: string
                    description: Slug of the Environment
                description:
                    type: string
                    description: Description of the Environment
                updated_at:
                    type: string
                    description: The time the environment was updated
                    format: date-time
                created_at:
                    type: string
                    description: The time the environment was created
                    format: date-time
                active_incidents:
                    type: string
                    description: List of active incident guids
                external_resources:
                    type: array
                    description: Information about known linkages to representations of services outside of FireHydrant.
                    items:
                        "$ref": "#/components/schemas/ExternalResourceEntity"
            description: EnvironmentEntryEntity model
        ExternalResourceEntity:
            type: object
            properties:
                connection_type:
                    type: string
                connection_name:
                    type: string
                connection_id:
                    type: string
                remote_id:
                    type: string
                remote_url:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                name:
                    type: string
        EnvironmentEntryEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/EnvironmentEntryEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: EnvironmentEntryEntityPaginated model
        PaginationEntity:
            type: object
            properties:
                count:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                items:
                    type: integer
                    format: int32
                pages:
                    type: integer
                    format: int32
                last:
                    type: integer
                    format: int32
                prev:
                    type: integer
                    format: int32
                    nullable: true
                next:
                    type: integer
                    format: int32
                    nullable: true
        patchV1EnvironmentsEnvironmentId:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
            description: Update a environments attributes
        postV1Services:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: A hash of label keys and values
                service_tier:
                    type: integer
                    description: Integer representing service tier. Lower values represent higher criticality. If not specified the default value will be 5.
                    format: int32
                    enum:
                        - 0
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                functionalities:
                    type: array
                    description: An array of functionalities
                    items:
                        type: object
                        properties:
                            summary:
                                type: string
                                description: If you are trying to create a new functionality and attach it to this service, set the summary key
                            id:
                                type: string
                                description: If you are trying to reuse a functionality, you may set the ID to attach it to the service
                links:
                    type: array
                    description: An array of links to associate with this service
                    items:
                        required:
                            - href_url
                            - name
                        type: object
                        properties:
                            name:
                                type: string
                                description: Short name used to display and identify this link
                            href_url:
                                type: string
                                description: URL
                            icon_url:
                                type: string
                                description: An optional URL to an icon representing this link
                owner:
                    required:
                        - id
                    type: object
                    properties:
                        id:
                            type: string
                    description: An object representing a Team that owns the service
                teams:
                    type: array
                    description: An array of teams to attach to this service.
                    items:
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                type: string
                alert_on_add:
                    type: boolean
                auto_add_responding_team:
                    type: boolean
                external_resources:
                    type: array
                    description: An array of external resources to attach to this service.
                    items:
                        required:
                            - remote_id
                        type: object
                        properties:
                            remote_id:
                                type: string
                            connection_type:
                                type: string
                                description: 'The integration slug for the external resource. Can be one of: github, opsgenie, pager_duty, victorops. Not required if the resource has already been imported.'
            description: Creates a service for the organization, you may also create or attach functionalities to the service on create.
        ServiceEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                slug:
                    type: string
                service_tier:
                    type: integer
                    format: int32
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                allowed_params:
                    type: array
                    items:
                        type: string
                labels:
                    type: object
                    properties: {}
                    description: An object of label key and values
                alert_on_add:
                    type: boolean
                auto_add_responding_team:
                    type: boolean
                active_incidents:
                    type: array
                    description: List of active incident guids
                    items:
                        type: string
                checklists:
                    type: array
                    description: List of checklists associated with a service
                    items:
                        "$ref": "#/components/schemas/ChecklistTemplateEntity"
                completed_checks:
                    type: integer
                    format: int32
                external_resources:
                    type: array
                    description: Information about known linkages to representations of services outside of FireHydrant.
                    items:
                        "$ref": "#/components/schemas/ExternalResourceEntity"
                functionalities:
                    type: array
                    description: List of functionalities attached to the service
                    items:
                        "$ref": "#/components/schemas/FunctionalityEntity"
                last_import:
                    "$ref": "#/components/schemas/Imports_ImportableResourceEntity"
                links:
                    type: array
                    description: List of links attached to this service.
                    items:
                        "$ref": "#/components/schemas/LinksEntity"
                managed_by:
                    type: string
                    description: If set, this field indicates that the service is managed by an integration and thus cannot be set manually
                managed_by_settings:
                    type: object
                    properties: {}
                    description: Indicates the settings of the catalog that manages this service
                owner:
                    "$ref": "#/components/schemas/TeamEntityLite"
                service_checklist_updated_at:
                    type: string
                    format: date-time
                teams:
                    type: array
                    description: List of teams attached to the service
                    items:
                        "$ref": "#/components/schemas/TeamEntityLite"
                updated_by:
                    "$ref": "#/components/schemas/AuthorEntity"
            description: ServiceEntity model
        ChecklistTemplateEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                created_at:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                checks:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ChecklistCheckEntity"
                owner:
                    "$ref": "#/components/schemas/TeamEntityLite"
                connected_services:
                    type: array
                    description: List of services that use this checklist
                    items:
                        "$ref": "#/components/schemas/ServiceEntityChecklist"
            description: ChecklistTemplateEntity model
        ChecklistCheckEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                status:
                    type: boolean
        TeamEntityLite:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                slug:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                signals_ical_url:
                    type: string
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                in_support_hours:
                    type: boolean
        AuthorEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                source:
                    type: string
                email:
                    type: string
        ServiceEntityChecklist:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                slug:
                    type: string
                service_tier:
                    type: integer
                    format: int32
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                allowed_params:
                    type: array
                    items:
                        type: string
                labels:
                    type: object
                    properties: {}
                    description: An object of label key and values
                alert_on_add:
                    type: boolean
                auto_add_responding_team:
                    type: boolean
                completed_checks:
                    type: integer
                    format: int32
                owner:
                    "$ref": "#/components/schemas/TeamEntityLite"
                service_checklist_updated_at:
                    type: string
                    format: date-time
        FunctionalityEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                slug:
                    type: string
                description:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                labels:
                    type: object
                    properties: {}
                    description: An object of label key and values
                active_incidents:
                    type: array
                    description: List of active incident guids
                    items:
                        type: string
                links:
                    type: array
                    description: List of links attached to this functionality.
                    items:
                        "$ref": "#/components/schemas/LinksEntity"
                owner:
                    "$ref": "#/components/schemas/TeamEntityLite"
                alert_on_add:
                    type: boolean
                auto_add_responding_team:
                    type: boolean
                updated_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                services:
                    type: array
                    description: Services this functionality provides
                    items:
                        "$ref": "#/components/schemas/ServiceEntityLite"
                external_resources:
                    type: array
                    description: Information about known linkages to representations of services outside of FireHydrant.
                    items:
                        "$ref": "#/components/schemas/ExternalResourceEntity"
                teams:
                    type: array
                    description: List of teams attached to the functionality
                    items:
                        "$ref": "#/components/schemas/TeamEntityLite"
            description: FunctionalityEntity model
        LinksEntity:
            type: object
            properties:
                id:
                    type: string
                href_url:
                    type: string
                icon_url:
                    type: string
                name:
                    type: string
        ServiceEntityLite:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                slug:
                    type: string
                service_tier:
                    type: integer
                    format: int32
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                allowed_params:
                    type: array
                    items:
                        type: string
                labels:
                    type: object
                    properties: {}
                    description: An object of label key and values
                alert_on_add:
                    type: boolean
                auto_add_responding_team:
                    type: boolean
            description: ServiceEntityLite model
        Imports_ImportableResourceEntity:
            type: object
            properties:
                import_errors:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Imports_ImportErrorEntity"
                imported_at:
                    type: string
                    format: date-time
                remote_id:
                    type: string
                state:
                    type: string
                    enum:
                        - selected
                        - skipped
                        - imported
                        - errored
        Imports_ImportErrorEntity:
            type: object
            properties:
                id:
                    type: string
                message:
                    type: string
                created_at:
                    type: string
                    format: date-time
                data:
                    type: object
                    properties: {}
                    description: Additional error data
                resource:
                    "$ref": "#/components/schemas/Imports_ImportErrorEntity_ResourceEntity"
        Imports_ImportErrorEntity_ResourceEntity:
            type: object
            properties:
                resource_id:
                    type: string
                resource_type:
                    type: string
                name:
                    type: string
        ServiceEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ServiceEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: ServiceEntityPaginated model
        postV1ServicesServiceLinks:
            required:
                - connection_id
                - external_service_ids
                - integration
            type: object
            properties:
                external_service_ids:
                    type: string
                    description: ID of the service
                connection_id:
                    type: string
                    description: ID for the integration. This can be found by going to the edit page for the integration
                integration:
                    type: string
                    description: The name of the service
                    enum:
                        - pager_duty
                        - opsgenie
                        - victorops
            description: Creates a service with the appropriate integration for each external service ID passed
        ServiceLinkEntity:
            type: object
            properties:
                status_code:
                    type: integer
                    format: int32
                service:
                    "$ref": "#/components/schemas/ServiceEntity"
            description: ServiceLinkEntity model
        patchV1ServicesServiceId:
            type: object
            properties:
                alert_on_add:
                    type: boolean
                auto_add_responding_team:
                    type: boolean
                checklists:
                    type: array
                    description: Array of checklist IDs to attach to the service
                    items:
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                type: string
                            remove:
                                type: boolean
                                description: Set to `true` to remove checklist from service
                description:
                    type: string
                external_resources:
                    type: array
                    description: An array of external resources to attach to this service.
                    items:
                        required:
                            - remote_id
                        type: object
                        properties:
                            remote_id:
                                type: string
                            connection_type:
                                type: string
                                description: 'The integration slug for the external resource. Can be one of: github, opsgenie, pager_duty, victorops. Not required if the resource has already been imported.'
                            remove:
                                type: boolean
                                description: If you are trying to remove an external resource from a service, set this to 'true'.
                functionalities:
                    type: array
                    description: An array of functionalities
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                description: If you are trying to reuse a functionality, you may set the ID to attach it to the service
                            remove:
                                type: boolean
                                description: If you are trying to remove a functionality from a service, set this to 'true'
                            summary:
                                type: string
                                description: If you are trying to create a new functionality and attach it to this service, set the summary key
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: A hash of label keys and values
                links:
                    type: array
                    description: An array of links to associate with this service. This will remove all links not present in the patch. Only acts if 'links' key is included in the payload.
                    items:
                        required:
                            - href_url
                            - name
                        type: object
                        properties:
                            href_url:
                                type: string
                                description: URL
                            name:
                                type: string
                                description: Short name used to display and identify this link
                            icon_url:
                                type: string
                                description: An optional URL to an icon representing this link
                            remove:
                                type: boolean
                                description: If you are trying to remove a link, set this to 'true'
                            id:
                                type: string
                                description: If updating an existing link, specify it's id.
                name:
                    type: string
                owner:
                    required:
                        - id
                    type: object
                    properties:
                        id:
                            type: string
                    description: An object representing a Team that owns the service
                remove_owner:
                    type: boolean
                    description: If you are trying to remove a team as an owner from a service, set this to 'true'
                remove_remaining_checklists:
                    type: boolean
                    description: If set to true, any checklists tagged on the service that are not included in the given array will be removed. Set this to true if you want to do a replacement operation for the checklists
                remove_remaining_external_resources:
                    type: boolean
                    description: If set to true, any external_resources tagged on the service that are not included in the given array will be removed. Set this to true if you want to do a replacement operation for the external_resources
                remove_remaining_functionalities:
                    type: boolean
                    description: If set to true, any functionalities tagged on the service that are not included in the given array will be removed. Set this to true if you want to do a replacement operation for the functionalities
                remove_remaining_teams:
                    type: boolean
                    description: If set to true, any teams tagged on the service that are not included in the given array will be removed. Set this to true if you want to do a replacement operation for the teams
                service_tier:
                    type: integer
                    description: Integer representing service tier
                    format: int32
                    enum:
                        - 0
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                teams:
                    type: array
                    description: An array of teams to attach to this service.
                    items:
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                type: string
                            remove:
                                type: boolean
                                description: If you are trying to remove a team from a service, set this to 'true'
            description: |
                Update a services attributes, you may also add or remove functionalities from the service as well.
                Note: You may not remove or add individual label key/value pairs. You must include the entire object to override label values.
        ServiceWithAllDependenciesEntity:
            type: object
            properties:
                child_service_dependencies:
                    type: array
                    description: Services that depend on this service
                    items:
                        "$ref": "#/components/schemas/ServiceChildDependencyEntity"
                parent_service_dependencies:
                    type: array
                    description: Services that this service is dependent on
                    items:
                        "$ref": "#/components/schemas/ServiceParentDependencyEntity"
                service_dependencies:
                    type: array
                    description: 'All dependencies. Can be one of: ServiceChildDependencyEntity, ServiceParentDependencyEntity'
                    items:
                        type: object
                        properties: {}
            description: ServiceWithAllDependenciesEntity model
        ServiceChildDependencyEntity:
            type: object
            properties:
                id:
                    type: string
                notes:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                service:
                    "$ref": "#/components/schemas/ServiceEntity"
                type:
                    type: string
        ServiceParentDependencyEntity:
            type: object
            properties:
                id:
                    type: string
                notes:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                service:
                    "$ref": "#/components/schemas/ServiceEntity"
                type:
                    type: string
        postV1ServicesServiceIdChecklistResponseChecklistId:
            required:
                - check_id
                - status
            type: object
            properties:
                check_id:
                    type: string
                status:
                    type: boolean
                    description: Status of the check. 'true' if it's complete, 'false' if incomplete, or blank if not yet interacted with
            description: Creates a response for a checklist item
        postV1ServiceDependencies:
            required:
                - connected_service_id
                - service_id
            type: object
            properties:
                service_id:
                    type: string
                connected_service_id:
                    type: string
                notes:
                    type: string
                    description: A note to describe the service dependency relationship
            description: Creates a service dependency relationship between two services
        ServiceDependencyEntity:
            type: object
            properties:
                id:
                    type: string
                notes:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                service:
                    "$ref": "#/components/schemas/ServiceEntity"
                connected_service:
                    "$ref": "#/components/schemas/ServiceEntity"
            description: ServiceDependencyEntity model
        patchV1ServiceDependenciesServiceDependencyId:
            type: object
            properties:
                notes:
                    type: string
                    description: A note to describe the service dependency relationship
            description: Update the notes of the service dependency
        postV1Functionalities:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                services:
                    type: array
                    items:
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                type: string
                                description: ID of a service
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: A hash of label keys and values
                alert_on_add:
                    type: boolean
                auto_add_responding_team:
                    type: boolean
                external_resources:
                    type: array
                    description: An array of external resources to attach to this service.
                    items:
                        required:
                            - remote_id
                        type: object
                        properties:
                            remote_id:
                                type: string
                            connection_type:
                                type: string
                                description: 'The integration slug for the external resource. Can be one of: github, opsgenie, pager_duty, statuspage, victorops. Not required if the resource has already been imported.'
                links:
                    type: array
                    description: An array of links to associate with this service
                    items:
                        required:
                            - href_url
                            - name
                        type: object
                        properties:
                            name:
                                type: string
                                description: Short name used to display and identify this link
                            href_url:
                                type: string
                                description: URL
                            icon_url:
                                type: string
                                description: An optional URL to an icon representing this link
                owner:
                    required:
                        - id
                    type: object
                    properties:
                        id:
                            type: string
                    description: An object representing a Team that owns the service
                teams:
                    type: array
                    description: An array of teams to attach to this service.
                    items:
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                type: string
            description: Creates a functionality for the organization
        FunctionalityEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/FunctionalityEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: FunctionalityEntityPaginated model
        patchV1FunctionalitiesFunctionalityId:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                services:
                    type: array
                    items:
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                type: string
                                description: ID of a service
                            remove:
                                type: boolean
                                description: Set to true if you want to remove the given service from the functionality
                links:
                    type: array
                    description: An array of links to associate with this functionality. This will remove all links not present in the patch. Only acts if 'links' key is included in the payload.
                    items:
                        required:
                            - href_url
                            - name
                        type: object
                        properties:
                            href_url:
                                type: string
                                description: URL
                            name:
                                type: string
                                description: Short name used to display and identify this link
                            icon_url:
                                type: string
                                description: An optional URL to an icon representing this link
                            remove:
                                type: boolean
                                description: If you are trying to remove a link, set this to 'true'
                            id:
                                type: string
                                description: If updating an existing link, specify it's id.
                owner:
                    required:
                        - id
                    type: object
                    properties:
                        id:
                            type: string
                    description: An object representing a Team that owns the functionality
                remove_owner:
                    type: boolean
                    description: If you are trying to remove a team as an owner from a functionality, set this to 'true'
                teams:
                    type: array
                    description: An array of teams to attach to this functionality.
                    items:
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                type: string
                            remove:
                                type: boolean
                                description: If you are trying to remove a team from a functionality, set this to 'true'
                remove_remaining_teams:
                    type: boolean
                    description: If set to true, any teams tagged on the service that are not included in the given array will be removed. Set this to true if you want to do a replacement operation for the teams
                external_resources:
                    type: array
                    description: An array of external resources to attach to this service.
                    items:
                        required:
                            - remote_id
                        type: object
                        properties:
                            remote_id:
                                type: string
                            connection_type:
                                type: string
                                description: 'The integration slug for the external resource. Can be one of: github, opsgenie, pager_duty, statuspage, victorops. Not required if the resource has already been imported.'
                            remove:
                                type: boolean
                                description: If you are trying to remove an external resource from a service, set this to 'true'.
                remove_remaining_external_resources:
                    type: boolean
                    description: If set to true, any external_resources tagged on the service that are not included in the given array will be removed. Set this to true if you want to do a replacement operation for the external_resources
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: A hash of label keys and values
                alert_on_add:
                    type: boolean
                auto_add_responding_team:
                    type: boolean
                remove_remaining_services:
                    type: boolean
                    description: Set this to true if you want to remove all of the services that are not included in the services array from the functionality
                    default: false
            description: Update a functionalities attributes
        postV1Teams:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                slug:
                    type: string
                slack_channel_id:
                    type: string
                    description: The Slack channel ID that this team is associated with
                ms_teams_channel:
                    required:
                        - channel_id
                        - ms_team_id
                    type: object
                    properties:
                        channel_id:
                            type: string
                        ms_team_id:
                            type: string
                    description: MS Teams channel identity for channel associated with this team
                memberships:
                    type: array
                    items:
                        type: object
                        properties:
                            user_id:
                                type: string
                            schedule_id:
                                type: string
                            incident_role_id:
                                type: string
                                description: An incident role ID that this user will automatically assigned if this team is assigned to an incident
            description: Create a new team
        TeamEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                slug:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                signals_ical_url:
                    type: string
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                in_support_hours:
                    type: boolean
                slack_channel:
                    "$ref": "#/components/schemas/Integrations_Slack_SlackChannelEntity"
                ms_teams_channel:
                    "$ref": "#/components/schemas/Integrations_MicrosoftTeamsV2_ChannelEntity"
                memberships:
                    type: array
                    items:
                        "$ref": "#/components/schemas/MembershipEntity"
                owned_checklist_templates:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ChecklistTemplateEntity"
                owned_functionalities:
                    type: array
                    items:
                        "$ref": "#/components/schemas/FunctionalityEntityLite"
                owned_services:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ServiceEntityLite"
                owned_runbooks:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SlimRunbookEntity"
                responding_services:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ServiceEntityLite"
                services:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ServiceEntityLite"
                functionalities:
                    type: array
                    items:
                        "$ref": "#/components/schemas/FunctionalityEntityLite"
            description: TeamEntity model
        Integrations_Slack_SlackChannelEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                slack_channel_id:
                    type: string
        Integrations_MicrosoftTeamsV2_ChannelEntity:
            type: object
            properties:
                id:
                    type: string
                channel_id:
                    type: string
                channel_name:
                    type: string
                ms_team_id:
                    type: string
                team_name:
                    type: string
                channel_url:
                    type: string
                status:
                    type: string
                incident:
                    "$ref": "#/components/schemas/IncidentEntity"
        IncidentEntity:
            type: object
            properties:
                id:
                    type: string
                    description: UUID of the Incident
                name:
                    type: string
                    description: Name of the incident
                created_at:
                    type: string
                    description: The time the incident was opened
                    format: date-time
                started_at:
                    type: string
                    description: The time the incident started
                    format: date-time
                discarded_at:
                    type: string
                    description: The time the incident was archived
                    format: date-time
                summary:
                    type: string
                customer_impact_summary:
                    type: string
                description:
                    type: string
                current_milestone:
                    type: string
                    description: The type/slug of the current milestone. Will be one of the currently configured milestones for the given incident.
                number:
                    type: integer
                    description: Incident number
                    format: int32
                priority:
                    type: string
                severity:
                    type: string
                severity_color:
                    type: string
                severity_impact:
                    type: string
                severity_condition:
                    type: string
                tag_list:
                    type: array
                    items:
                        type: string
                severity_impact_object:
                    "$ref": "#/components/schemas/SeverityMatrix_ImpactEntity"
                severity_condition_object:
                    "$ref": "#/components/schemas/SeverityMatrix_ConditionEntity"
                private_id:
                    type: string
                organization_id:
                    type: string
                milestones:
                    type: array
                    description: 'DEPRECATED: Please use lifecycle phases instead'
                    items:
                        "$ref": "#/components/schemas/Incidents_MilestoneEntity"
                lifecycle_phases:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_LifecyclePhaseEntity"
                lifecycle_measurements:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_LifecycleMeasurementEntity"
                active:
                    type: boolean
                labels:
                    type: object
                    properties: {}
                    description: A key/value of labels
                role_assignments:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_RoleAssignmentEntity"
                status_pages:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_StatusPageEntity"
                incident_url:
                    type: string
                private_status_page_url:
                    type: string
                organization:
                    "$ref": "#/components/schemas/OrganizationEntity"
                customers_impacted:
                    type: integer
                    format: int32
                monetary_impact:
                    type: integer
                    format: int32
                monetary_impact_cents:
                    type: integer
                    format: int32
                last_update:
                    type: string
                last_note:
                    "$ref": "#/components/schemas/Event_NoteEntity"
                report_id:
                    type: string
                ai_incident_summary:
                    type: string
                services:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SuccinctEntity"
                environments:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SuccinctEntity"
                functionalities:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SuccinctEntity"
                channel_name:
                    type: string
                channel_reference:
                    type: string
                channel_id:
                    type: string
                channel_status:
                    type: string
                    description: 'inoperative: 0, operational: 1, archived: 2'
                incident_tickets:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Ticketing_TicketEntity"
                ticket:
                    "$ref": "#/components/schemas/Ticketing_TicketEntity"
                impacts:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_ImpactEntity"
                conference_bridges:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_ConferenceBridgeEntity"
                incident_channels:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_ChannelEntity"
                retro_exports:
                    type: array
                    description: 'A list of objects attached to this item. Can be one of: LinkEntity, CustomerSupportIssueEntity, or GenericAttachmentEntity'
                    items:
                        type: object
                        properties: {}
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                context_object:
                    "$ref": "#/components/schemas/Incidents_ContextObjectEntity"
                team_assignments:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_TeamAssignmentEntityLite"
                conversations:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Conversations_API_Entities_Reference"
                custom_fields:
                    type: array
                    items:
                        "$ref": "#/components/schemas/CustomFields_FieldValue"
                field_requirements:
                    type: array
                    items:
                        "$ref": "#/components/schemas/IncidentEntity_FieldRequirementEntity"
            description: IncidentEntity model
        SeverityMatrix_ImpactEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                type:
                    type: string
                affects_id:
                    type: string
                position:
                    type: integer
                    format: int32
            description: SeverityMatrix_ImpactEntity model
        SeverityMatrix_ConditionEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                position:
                    type: integer
                    description: Position is used to determine ordering of conditions in API responses and dropdowns. The condition with the lowest position (typically 0) will be considered the Default Condition
                    format: int32
            description: SeverityMatrix_ConditionEntity model
        Incidents_MilestoneEntity:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                    description: The milestone's type. This will be one of the currently configured milestones for the given incident.
                duration:
                    type: string
                    description: How long the incident spent in this milestones, in ISO 8601 Duration Format. This will be null if the milestone is the incident's current milestone.
                occurred_at:
                    type: string
                    format: date-time
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
        Incidents_LifecyclePhaseEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                type:
                    type: string
                position:
                    type: integer
                    format: int32
                milestones:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_LifecycleMilestoneEntity"
        Incidents_LifecycleMilestoneEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                slug:
                    type: string
                position:
                    type: integer
                    format: int32
                occurred_at:
                    type: string
                    format: date-time
                duration:
                    type: string
                updated_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                updated_at:
                    type: string
                    format: date-time
        Incidents_LifecycleMeasurementEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                slug:
                    type: string
                starts_at_milestone:
                    type: string
                ends_at_milestone:
                    type: string
                value:
                    type: string
                calculated_at:
                    type: string
                    format: date-time
        Incidents_RoleAssignmentEntity:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: string
                    enum:
                        - active
                        - inactive
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                incident_role:
                    "$ref": "#/components/schemas/IncidentRoleEntity"
                user:
                    "$ref": "#/components/schemas/UserEntity"
            description: Incidents_RoleAssignmentEntity model
        IncidentRoleEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                summary:
                    type: string
                description:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                discarded_at:
                    type: string
                    format: date-time
            description: IncidentRoleEntity model
        UserEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                email:
                    type: string
                slack_user_id:
                    type: string
                slack_linked?:
                    type: boolean
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                signals_enabled_notification_types:
                    type: array
                    items:
                        type: string
            description: UserEntity model
        Incidents_StatusPageEntity:
            type: object
            properties:
                id:
                    type: string
                url:
                    type: string
                external_id:
                    type: string
                name:
                    type: string
                display_name:
                    type: string
                integration:
                    "$ref": "#/components/schemas/IntegrationEntity"
            description: Incidents_StatusPageEntity model
        IntegrationEntity:
            type: object
            properties:
                id:
                    type: string
                integration_name:
                    type: string
                integration_slug:
                    type: string
                display_name:
                    type: string
                created_at:
                    type: string
                    format: date-time
        Event_NoteEntity:
            type: object
            properties:
                id:
                    type: string
                body:
                    type: string
                created_at:
                    type: string
                    format: date-time
                status_pages:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_StatusPageEntity"
                conversations:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Conversations_API_Entities_Reference"
            description: Event_NoteEntity model
        Conversations_API_Entities_Reference:
            type: object
            properties:
                id:
                    type: string
                resource_class:
                    type: string
                resource_id:
                    type: string
                field:
                    type: string
                comments_url:
                    type: string
                channel:
                    "$ref": "#/components/schemas/Conversations_API_Entities_Channel"
        Conversations_API_Entities_Channel:
            type: object
            properties:
                name:
                    type: string
        SuccinctEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        Ticketing_TicketEntity:
            type: object
            properties:
                id:
                    type: string
                summary:
                    type: string
                description:
                    type: string
                state:
                    type: string
                    enum:
                        - open
                        - in_progress
                        - cancelled
                        - done
                type:
                    type: string
                    enum:
                        - incident
                        - task
                        - follow_up
                assignees:
                    type: array
                    items:
                        "$ref": "#/components/schemas/AuthorEntity"
                priority:
                    "$ref": "#/components/schemas/Ticketing_PriorityEntity"
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                attachments:
                    type: array
                    description: 'A list of objects attached to this item. Can be one of: LinkEntity, CustomerSupportIssueEntity, or GenericAttachmentEntity'
                    items:
                        type: object
                        properties: {}
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                tag_list:
                    type: array
                    items:
                        type: string
                incident_id:
                    type: string
                    description: ID of incident that this ticket is related to
                incident_name:
                    type: string
                    description: Name of incident that this ticket is related to
                incident_current_milestone:
                    type: string
                    description: Milestone of incident that this ticket is related to
                task_id:
                    type: string
                    description: ID of task that this ticket is related to
                due_at:
                    type: string
                    format: date-time
                link:
                    "$ref": "#/components/schemas/Attachments_LinkEntity"
            description: Ticketing_TicketEntity model
        Ticketing_PriorityEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                position:
                    type: integer
                    format: int32
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
            description: Ticketing_PriorityEntity model
        Attachments_LinkEntity:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                display_text:
                    type: string
                href_url:
                    type: string
                icon_url:
                    type: string
                editable:
                    type: boolean
                    description: Link can be edited
                deletable:
                    type: boolean
                    description: Link can be deleted
            description: Attachments_LinkEntity model
        Incidents_ImpactEntity:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                    enum:
                        - environment
                        - functionality
                        - service
                impact:
                    "$ref": "#/components/schemas/SuccinctEntity"
                condition:
                    "$ref": "#/components/schemas/SeverityMatrix_ConditionEntity"
                conversations:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Conversations_API_Entities_Reference"
        Incidents_ConferenceBridgeEntity:
            type: object
            properties:
                id:
                    type: string
                attachments:
                    type: array
                    description: 'A list of objects attached to this item. Can be one of: LinkEntity, CustomerSupportIssueEntity, or GenericAttachmentEntity'
                    items:
                        type: object
                        properties: {}
        Incidents_ChannelEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                source:
                    type: string
                source_name:
                    type: string
                source_id:
                    type: string
                url:
                    type: string
                icon_url:
                    type: string
                status:
                    type: string
            description: Incidents_ChannelEntity model
        Incidents_ContextObjectEntity:
            type: object
            properties:
                object_type:
                    type: string
                object_id:
                    type: string
                context_tag:
                    type: string
                context_description:
                    type: string
        Incidents_TeamAssignmentEntityLite:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                team:
                    "$ref": "#/components/schemas/TeamEntityLite"
        CustomFields_FieldValue:
            type: object
            properties:
                name:
                    type: string
                value_type:
                    type: string
                display_name:
                    type: string
                description:
                    type: string
                slug:
                    type: string
                field_id:
                    type: string
                value_array:
                    type: string
                value_string:
                    type: string
                value:
                    type: string
        IncidentEntity_FieldRequirementEntity:
            type: object
            properties:
                field_id:
                    type: string
                    description: A unique identifier for the field.
                required_at_milestone_id:
                    type: string
                    description: The milestone at which this field is required. If null, this field is always required.
        MembershipEntity:
            type: object
            properties:
                user:
                    "$ref": "#/components/schemas/UserEntity"
                schedule:
                    "$ref": "#/components/schemas/ScheduleEntity"
                signals_on_call_schedule:
                    "$ref": "#/components/schemas/SuccinctEntity"
                default_incident_role:
                    "$ref": "#/components/schemas/IncidentRoleEntity"
        ScheduleEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                integration:
                    type: string
                discarded:
                    type: boolean
        FunctionalityEntityLite:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                slug:
                    type: string
                description:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                labels:
                    type: object
                    properties: {}
                    description: An object of label key and values
                active_incidents:
                    type: array
                    description: List of active incident guids
                    items:
                        type: string
                links:
                    type: array
                    description: List of links attached to this functionality.
                    items:
                        "$ref": "#/components/schemas/LinksEntity"
                owner:
                    "$ref": "#/components/schemas/TeamEntityLite"
                alert_on_add:
                    type: boolean
                auto_add_responding_team:
                    type: boolean
                updated_by:
                    "$ref": "#/components/schemas/AuthorEntity"
        SlimRunbookEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                summary:
                    type: string
                description:
                    type: string
                type:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                attachment_rule:
                    "$ref": "#/components/schemas/Rules_RuleEntity"
                owner:
                    "$ref": "#/components/schemas/TeamEntityLite"
                categories:
                    type: string
                    description: categories the runbook applies to
        Rules_RuleEntity:
            type: object
            properties:
                logic:
                    type: object
                    properties: {}
                    description: An unstructured object of key/value pairs describing the logic for applying the rule.
                user_data:
                    "$ref": "#/components/schemas/FHTypes_GenericEntity"
        FHTypes_GenericEntity:
            type: object
            properties:
                type:
                    type: string
                value:
                    type: string
                label:
                    type: string
        TeamEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/TeamEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: TeamEntityPaginated model
        patchV1TeamsTeamId:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                slug:
                    type: string
                slack_channel_id:
                    type: string
                    description: The Slack channel ID that this team is associated with
                ms_teams_channel:
                    required:
                        - channel_id
                        - ms_team_id
                    type: object
                    properties:
                        channel_id:
                            type: string
                        ms_team_id:
                            type: string
                    description: MS Teams channel identity for channel associated with this team
                memberships:
                    type: array
                    items:
                        type: object
                        properties:
                            user_id:
                                type: string
                            schedule_id:
                                type: string
                            incident_role_id:
                                type: string
                                description: An incident role ID that this user will automatically assigned if this team is assigned to an incident
            description: Update a single team from its ID
        postV1TeamsTeamIdEscalationPolicies:
            required:
                - name
                - steps
            type: object
            properties:
                name:
                    type: string
                    description: The escalation policy's name.
                description:
                    type: string
                    description: A detailed description of the escalation policy.
                repetitions:
                    type: integer
                    description: The number of times that the escalation policy should repeat before an alert is dropped.
                    format: int32
                    default: 0
                default:
                    type: boolean
                    description: Whether this escalation policy should be the default for the team.
                    default: false
                steps:
                    type: array
                    description: A list of steps that define how an alert should escalate through the policy.
                    items:
                        required:
                            - targets
                            - timeout
                        type: object
                        properties:
                            targets:
                                type: array
                                description: A list of targets that the step will notify. You can specify up to 15 targets per step.
                                items:
                                    required:
                                        - id
                                        - type
                                    type: object
                                    properties:
                                        type:
                                            type: string
                                            description: The type of target that the step will notify.
                                            enum:
                                                - OnCallSchedule
                                                - User
                                                - SlackChannel
                                                - EntireTeam
                                                - Webhook
                                        id:
                                            type: string
                                            description: The ID of the target that the step will notify.
                            timeout:
                                type: string
                                description: An ISO8601 duration string specifying how long to wait before moving on to the next step. For the last step, this value specifies how long to wait before the escalation policy should repeat, if it repeats.
                handoff_step:
                    required:
                        - target_id
                        - target_type
                    type: object
                    properties:
                        target_type:
                            type: string
                            description: The type of target to which the policy will hand off.
                            enum:
                                - EscalationPolicy
                                - Team
                        target_id:
                            type: string
                            description: The ID of the target to which the policy will hand off.
                    description: A step that defines where an alert should be sent when the policy is exhausted and the alert is still unacknowledged.
            description: Create a Signals escalation policy for a team.
        patchV1TeamsTeamIdEscalationPoliciesId:
            type: object
            properties:
                name:
                    type: string
                    description: The escalation policy's name.
                description:
                    type: string
                    description: A detailed description of the escalation policy.
                repetitions:
                    type: integer
                    description: The number of times that the escalation policy should repeat before an alert is dropped.
                    format: int32
                    default: 0
                default:
                    type: boolean
                    description: Whether this escalation policy should be the default for the team.
                    default: false
                steps:
                    type: array
                    description: A list of steps that define how an alert should escalate through the policy.
                    items:
                        required:
                            - timeout
                        type: object
                        properties:
                            targets:
                                type: array
                                description: A list of targets that the step will notify. You can specify up to 15 targets per step.
                                items:
                                    required:
                                        - id
                                        - type
                                    type: object
                                    properties:
                                        type:
                                            type: string
                                            description: The type of target that the step will notify.
                                            enum:
                                                - OnCallSchedule
                                                - User
                                                - SlackChannel
                                                - EntireTeam
                                                - Webhook
                                        id:
                                            type: string
                                            description: The ID of the target that the step will notify.
                            timeout:
                                type: string
                                description: An ISO8601 duration string specifying how long to wait before moving on to the next step. For the last step, this value specifies how long to wait before the escalation policy should repeat, if it repeats.
                handoff_step:
                    required:
                        - target_id
                        - target_type
                    type: object
                    properties:
                        target_type:
                            type: string
                            description: The type of target to which the policy will hand off.
                            enum:
                                - EscalationPolicy
                                - Team
                        target_id:
                            type: string
                            description: The ID of the target to which the policy will hand off.
                    description: A step that defines where an alert should be sent when the policy is exhausted and the alert is still unacknowledged.
            description: Update a Signals escalation policy by ID
        postV1TeamsTeamIdOnCallSchedules:
            required:
                - name
                - strategy
                - time_zone
            type: object
            properties:
                name:
                    type: string
                    description: The on-call schedule's name.
                description:
                    type: string
                    description: A detailed description of the on-call schedule.
                time_zone:
                    type: string
                    description: The time zone in which the on-call schedule operates. This value must be a valid IANA time zone name.
                slack_user_group_id:
                    type: string
                    description: The ID of a Slack user group for syncing purposes. If provided, we will automatically sync whoever is on call to the user group in Slack.
                members:
                    type: array
                    description: An ordered list of objects that specify members of the on-call schedule's rotation.
                    items:
                        type: object
                        properties:
                            user_id:
                                type: string
                                description: |
                                    The ID of a user who should be added to the schedule's rotation. You can add a user to the schedule
                                    multiple times to construct more complex rotations, and you can specify a `null` user ID to create
                                    unassigned slots in the rotation.
                strategy:
                    required:
                        - type
                    type: object
                    properties:
                        type:
                            type: string
                            description: The type of strategy. Must be one of "daily", "weekly", or "custom".
                            enum:
                                - daily
                                - weekly
                                - custom
                        handoff_time:
                            type: string
                            description: An ISO8601 time string specifying when on-call shifts should hand off. This value is only used if the strategy type is "daily" or "weekly".
                        handoff_day:
                            type: string
                            description: The day of the week on which on-call shifts should hand off, as its long-form name (e.g. "monday", "tuesday", etc). This value is only used if the strategy type is "weekly".
                            enum:
                                - monday
                                - tuesday
                                - wednesday
                                - thursday
                                - friday
                                - saturday
                                - sunday
                        shift_duration:
                            type: string
                            description: An ISO8601 duration string specifying how long each shift should last. This value is only used if the strategy type is "custom".
                    description: An object that specifies how the schedule's on-call shifts should be generated.
                restrictions:
                    type: array
                    description: A list of objects that restrict the schedule to speccific on-call periods.
                    items:
                        required:
                            - end_day
                            - end_time
                            - start_day
                            - start_time
                        type: object
                        properties:
                            start_day:
                                type: string
                                description: The day of the week on which the restriction should start, as its long-form name (e.g. "monday", "tuesday", etc).
                                enum:
                                    - monday
                                    - tuesday
                                    - wednesday
                                    - thursday
                                    - friday
                                    - saturday
                                    - sunday
                            start_time:
                                type: string
                                description: An ISO8601 time string specifying when the restriction should start.
                            end_day:
                                type: string
                                description: The day of the week on which the restriction should end, as its long-form name (e.g. "monday", "tuesday", etc).
                                enum:
                                    - monday
                                    - tuesday
                                    - wednesday
                                    - thursday
                                    - friday
                                    - saturday
                                    - sunday
                            end_time:
                                type: string
                                description: An ISO8601 time string specifying when the restriction should end.
                start_time:
                    type: string
                    description: An ISO8601 time string specifying when the schedule's first shift should start. This value is only used if the schedule's strategy is "custom".
                color:
                    type: string
                    description: A hex color code that will be used to represent the schedule in the UI and iCal subscriptions.
                member_ids:
                    type: array
                    description: This parameter is deprecated; use `members` instead.
                    items:
                        type: string
            description: Create a Signals on-call schedule for a team.
        patchV1TeamsTeamIdOnCallSchedulesScheduleId:
            type: object
            properties:
                name:
                    type: string
                    description: The on-call schedule's name.
                description:
                    type: string
                    description: A detailed description of the on-call schedule.
                time_zone:
                    type: string
                    description: The time zone in which the on-call schedule operates. This value must be a valid IANA time zone name.
                slack_user_group_id:
                    type: string
                    description: The ID of a Slack user group for syncing purposes. If provided, we will automatically sync whoever is on call to the user group in Slack.
                members:
                    type: array
                    description: An ordered list of objects that specify members of the on-call schedule's rotation.
                    items:
                        type: object
                        properties:
                            user_id:
                                type: string
                                description: |
                                    The ID of a user who should be added to the schedule's rotation. You can add a user to the schedule
                                    multiple times to construct more complex rotations, and you can specify a `null` user ID to create
                                    unassigned slots in the rotation.
                strategy:
                    required:
                        - type
                    type: object
                    properties:
                        type:
                            type: string
                            description: The type of strategy. Must be one of "daily", "weekly", or "custom".
                            enum:
                                - daily
                                - weekly
                                - custom
                        handoff_time:
                            type: string
                            description: An ISO8601 time string specifying when on-call shifts should hand off. This value is only used if the strategy type is "daily" or "weekly".
                        handoff_day:
                            type: string
                            description: The day of the week on which on-call shifts should hand off, as its long-form name (e.g. "monday", "tuesday", etc). This value is only used if the strategy type is "weekly".
                            enum:
                                - monday
                                - tuesday
                                - wednesday
                                - thursday
                                - friday
                                - saturday
                                - sunday
                        shift_duration:
                            type: string
                            description: An ISO8601 duration string specifying how long each shift should last. This value is only used if the strategy type is "custom".
                    description: An object that specifies how the schedule's on-call shifts should be generated.
                restrictions:
                    type: array
                    description: A list of objects that restrict the schedule to speccific on-call periods.
                    items:
                        required:
                            - end_day
                            - end_time
                            - start_day
                            - start_time
                        type: object
                        properties:
                            start_day:
                                type: string
                                description: The day of the week on which the restriction should start, as its long-form name (e.g. "monday", "tuesday", etc).
                                enum:
                                    - monday
                                    - tuesday
                                    - wednesday
                                    - thursday
                                    - friday
                                    - saturday
                                    - sunday
                            start_time:
                                type: string
                                description: An ISO8601 time string specifying when the restriction should start.
                            end_day:
                                type: string
                                description: The day of the week on which the restriction should end, as its long-form name (e.g. "monday", "tuesday", etc).
                                enum:
                                    - monday
                                    - tuesday
                                    - wednesday
                                    - thursday
                                    - friday
                                    - saturday
                                    - sunday
                            end_time:
                                type: string
                                description: An ISO8601 time string specifying when the restriction should end.
                effective_at:
                    type: string
                    description: |
                        An ISO8601 time string specifying when the updated schedule should take effect. This
                        value must be provided if editing an attribute that would affect how the schedule's
                        shifts are generated, such as the time zone, members, strategy, or restrictions.
                color:
                    type: string
                    description: A hex color code that will be used to represent the schedule in the UI and iCal subscriptions.
                member_ids:
                    type: array
                    description: This parameter is deprecated; use `members` instead.
                    items:
                        type: string
            description: Update a Signals on-call schedule by ID
        postV1TeamsTeamIdOnCallSchedulesScheduleIdShifts:
            required:
                - end_time
                - start_time
            type: object
            properties:
                start_time:
                    type: string
                    description: The start time of the shift in ISO8601 format.
                end_time:
                    type: string
                    description: The end time of the shift in ISO8601 format.
                user_id:
                    type: string
                    description: The ID of the user who is on-call for the shift. If not provided, the shift will be unassigned.
            description: Create a Signals on-call shift in a schedule.
        patchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId:
            type: object
            properties:
                start_time:
                    type: string
                    description: The start time of the shift in ISO8601 format.
                end_time:
                    type: string
                    description: The end time of the shift in ISO8601 format.
                user_id:
                    type: string
                    description: The ID of the user who is on-call for the shift. If not provided, the shift will be unassigned.
                coverage_request:
                    type: string
                    description: A description of why coverage is needed for this shift. If the shift is re-assigned, this will automatically be cleared unless provided again.
            description: Update a Signals on-call shift by ID
        postV1TeamsTeamIdSignalRules:
            required:
                - expression
                - name
                - target_id
                - target_type
            type: object
            properties:
                name:
                    type: string
                    description: The rule's name.
                expression:
                    type: string
                    description: The CEL expression that defines the rule.
                target_type:
                    type: string
                    description: The type of target that the rule will notify when matched.
                    enum:
                        - EscalationPolicy
                        - OnCallSchedule
                        - User
                        - Webhook
                target_id:
                    type: string
                    description: The ID of the target that the rule will notify when matched.
                incident_type_id:
                    type: string
                    description: The ID of an incident type that should be used when an alert is promoted to an incident
                notification_priority_override:
                    type: string
                    description: 'A notification priority that will be set on the resulting alert (default: HIGH)'
                    enum:
                        - HIGH
                        - MEDIUM
                        - LOW
                        - ''
            description: Create a Signals rule for a team.
        patchV1TeamsTeamIdSignalRulesId:
            type: object
            properties:
                name:
                    type: string
                    description: The rule's name.
                expression:
                    type: string
                    description: The CEL expression that defines the rule.
                target_type:
                    type: string
                    description: The type of target that the rule will notify when matched.
                    enum:
                        - EscalationPolicy
                        - OnCallSchedule
                        - User
                        - Webhook
                target_id:
                    type: string
                    description: The ID of the target that the rule will notify when matched.
                incident_type_id:
                    type: string
                    description: The ID of an incident type that should be used when an alert is promoted to an incident
                notification_priority_override:
                    type: string
                    description: 'A notification priority that will be set on the resulting alert (default: HIGH)'
                    enum:
                        - HIGH
                        - MEDIUM
                        - LOW
                        - ''
            description: Update a Signals rule by ID
        postV1Changes:
            type: object
            properties:
                summary:
                    type: string
                description:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: A labels hash of keys and values
            description: Create a new change entry
        ChangeEntity:
            type: object
            properties:
                id:
                    type: string
                    description: UUID of the Change
                summary:
                    type: string
                    description: Description of the Change
                created_at:
                    type: string
                    description: The time the change entry was created
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                labels:
                    type: object
                    properties: {}
                    description: Arbitrary key/value pairs of labels.
                description:
                    type: string
                    description: Description of the Change
            description: ChangeEntity model
        patchV1ChangesChangeId:
            type: object
            properties:
                summary:
                    type: string
                description:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
            description: Update a change entry
        postV1ChangesChangeIdIdentities:
            required:
                - type
                - value
            type: object
            properties:
                type:
                    type: string
                value:
                    type: string
            description: Create an identity for this change
        ChangeIdentityEntity:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                value:
                    type: string
                change_id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
            description: ChangeIdentityEntity model
        ChangeIdentityEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ChangeIdentityEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: ChangeIdentityEntityPaginated model
        patchV1ChangesChangeIdIdentitiesIdentityId:
            required:
                - type
                - value
            type: object
            properties:
                type:
                    type: string
                value:
                    type: string
            description: Update an identity
        ChangesEvents:
            required:
                - summary
            type: object
            properties:
                summary:
                    type: string
                description:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
                starts_at:
                    type: string
                    format: date-time
                ends_at:
                    type: string
                    format: date-time
                environments:
                    type: array
                    description: An array of environment IDs
                    items:
                        type: string
                services:
                    type: array
                    description: An array of service IDs
                    items:
                        type: string
                changes:
                    type: array
                    description: An array of change IDs
                    items:
                        type: string
                external_id:
                    type: string
                    description: The ID of a change event as assigned by an external provider
                change_identities:
                    type: array
                    description: If provided and valid, the event will be linked to all changes that have the same identities. Identity *values* must be unique.
                    items:
                        required:
                            - type
                            - value
                        type: object
                        properties:
                            type:
                                type: string
                            value:
                                type: string
                attachments:
                    type: array
                    description: JSON objects representing attachments, see attachments documentation for the schema
                    items:
                        required:
                            - type
                        type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - link
                authors:
                    type: array
                    description: Array of additional authors to add to the change event, the creating actor will automatically be added as an author
                    items:
                        required:
                            - name
                            - source
                            - source_id
                        type: object
                        properties:
                            source:
                                type: string
                            source_id:
                                type: string
                            name:
                                type: string
            description: Create a change event
        ChangeEventEntity:
            type: object
            properties:
                id:
                    type: string
                summary:
                    type: string
                description:
                    type: string
                external_id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                starts_at:
                    type: string
                    format: date-time
                ends_at:
                    type: string
                    format: date-time
                    nullable: true
                duration_ms:
                    type: integer
                    format: int32
                    nullable: true
                duration_iso8601:
                    type: string
                    nullable: true
                environments:
                    type: array
                    items:
                        "$ref": "#/components/schemas/EnvironmentEntryEntity"
                related_changes:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ChangeEntity"
                identities:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ChangeIdentityEntity"
                authors:
                    type: array
                    items:
                        "$ref": "#/components/schemas/AuthorEntity"
                attachments:
                    type: array
                    description: 'A list of objects attached to this item. Can be one of: LinkEntity, CustomerSupportIssueEntity, or GenericAttachmentEntity'
                    items:
                        type: object
                        properties: {}
                labels:
                    type: object
                    properties: {}
                    description: An object of label key and values
                services:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ServiceEntityLite"
            description: ChangeEventEntity model
        ChangeEventSlimEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ChangeEventSlimEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: ChangeEventSlimEntityPaginated model
        ChangeEventSlimEntity:
            type: object
            properties:
                id:
                    type: string
                summary:
                    type: string
                description:
                    type: string
                external_id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                starts_at:
                    type: string
                    format: date-time
                ends_at:
                    type: string
                    format: date-time
                    nullable: true
                duration_ms:
                    type: integer
                    format: int32
                    nullable: true
                duration_iso8601:
                    type: string
                    nullable: true
                environments:
                    type: array
                    items:
                        "$ref": "#/components/schemas/EnvironmentEntryEntity"
                authors:
                    type: array
                    items:
                        "$ref": "#/components/schemas/AuthorEntity"
                labels:
                    type: object
                    properties: {}
                    description: An object of label key and values
                services:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ServiceEntityLite"
        patchV1ChangesEventsChangeEventId:
            type: object
            properties:
                summary:
                    type: string
                description:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
                starts_at:
                    type: string
                    format: date-time
                ends_at:
                    type: string
                    format: date-time
                environments:
                    type: array
                    description: An array of environment IDs (setting this will overwrite the current environments)
                    items:
                        type: string
                services:
                    type: array
                    description: An array of service IDs (setting this will overwrite the current services)
                    items:
                        type: string
                attachments:
                    type: array
                    description: JSON objects representing attachments, see attachments documentation for the schema
                    items:
                        required:
                            - type
                        type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - link
            description: Update a change event
        ChangeTypeEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ChangeTypeEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: ChangeTypeEntityPaginated model
        ChangeTypeEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        EntitlementEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/EntitlementEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: EntitlementEntityPaginated model
        EntitlementEntity:
            type: object
            properties:
                current_count:
                    type: integer
                    format: int32
                errors:
                    type: array
                    items:
                        type: string
                exists:
                    type: boolean
                available:
                    type: boolean
                maximum:
                    type: integer
                    format: int32
                name:
                    type: string
                slug:
                    type: string
                tier:
                    type: string
                    enum:
                        - free
                        - essentials
                        - enterprise
                        - signals_only
        postV1Incidents:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                summary:
                    type: string
                customer_impact_summary:
                    type: string
                description:
                    type: string
                priority:
                    type: string
                severity:
                    type: string
                severity_condition_id:
                    type: string
                severity_impact_id:
                    type: string
                alert_ids:
                    type: array
                    description: List of alert IDs that this incident should be associated to
                    items:
                        type: string
                labels:
                    type: object
                    properties: {}
                    description: Key:value pairs to track custom data for the incident
                runbook_ids:
                    type: array
                    description: List of ids of Runbooks to attach to this incident. Foregoes any conditions these Runbooks may have guarding automatic attachment.
                    items:
                        type: string
                tag_list:
                    type: array
                    description: List of tags for the incident
                    items:
                        type: string
                impacts:
                    type: array
                    description: An array of impacted infrastructure
                    items:
                        required:
                            - condition_id
                            - id
                            - type
                        type: object
                        properties:
                            type:
                                type: string
                                description: 'The type of impacted infrastructure. One of: environment, functionality, or service'
                            id:
                                type: string
                                description: The ID of the impacted infrastructure
                            condition_id:
                                type: string
                                description: The ID of the impact condition. Find these at /v1/severity_matrix/conditions
                milestones:
                    type: array
                    description: An array of milestones to set on an incident. This can be used to create an already-resolved incident.
                    items:
                        required:
                            - occurred_at
                            - type
                        type: object
                        properties:
                            type:
                                type: string
                                description: The type/slug of the milestone. Must be one of the currently configured milestones.
                            occurred_at:
                                type: string
                                description: An ISO8601 formatted string for when this milestone occurred. If you are removing a milestone, this field still needs to be set to some value
                                format: date-time
                restricted:
                    type: boolean
                team_ids:
                    type: array
                    description: IDs of teams you wish to assign to this incident.
                    items:
                        type: string
                custom_fields:
                    type: array
                    description: An array of custom fields to set on the incident.
                    items:
                        required:
                            - field_id
                        type: object
                        properties:
                            field_id:
                                type: string
                                description: The ID of the custom field you wish to set.
                            value_string:
                                type: string
                                description: The value you wish to set on the custom field if the type of the field accepts string values
                            value_array:
                                type: array
                                description: The value you wish to set on the custom field if the type of the field accepts array values
                                items:
                                    type: string
                external_links:
                    type: string
                skip_incident_type_values:
                    type: boolean
                    description: If true, the incident type values will not be copied to the incident. This is useful when creating an incident from an incident type, but you want to set the values manually.
                    default: false
            description: Create a new incident
        IncidentEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/IncidentEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: IncidentEntityPaginated model
        patchV1IncidentsIncidentId:
            type: object
            properties:
                name:
                    type: string
                summary:
                    type: string
                customer_impact_summary:
                    type: string
                description:
                    type: string
                labels:
                    type: object
                    properties: {}
                    description: Key:value pairs to track custom data for the incident
                priority:
                    type: string
                severity:
                    type: string
                severity_condition_id:
                    type: string
                severity_impact_id:
                    type: string
                tag_list:
                    type: array
                    description: List of tags for the incident
                    items:
                        type: string
            description: Updates an incident with provided parameters
        Incidents_AlertEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_AlertEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Incidents_AlertEntityPaginated model
        Incidents_AlertEntity:
            type: object
            properties:
                id:
                    type: string
                alert:
                    "$ref": "#/components/schemas/Alerts_AlertEntity"
                primary:
                    type: boolean
                    description: whether or not this is the primary alert for this incident
            description: Incidents_AlertEntity model
        Alerts_AlertEntity:
            type: object
            properties:
                id:
                    type: string
                summary:
                    type: string
                description:
                    type: string
                priority:
                    type: string
                integration_name:
                    type: string
                starts_at:
                    type: string
                    format: date-time
                ends_at:
                    type: string
                    format: date-time
                    nullable: true
                duration_ms:
                    type: integer
                    format: int32
                    nullable: true
                duration_iso8601:
                    type: string
                    nullable: true
                status:
                    type: string
                remote_id:
                    type: string
                remote_url:
                    type: string
                labels:
                    type: object
                    properties: {}
                    description: Arbitrary key:value pairs of labels.
                environments:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SuccinctEntity"
                services:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SuccinctEntity"
                tags:
                    type: array
                    items:
                        type: string
                source_icon:
                    type: string
                signal_id:
                    type: string
                signal_rule:
                    "$ref": "#/components/schemas/Signals_API_RuleEntity"
                team_name:
                    type: string
                team_id:
                    type: string
                position:
                    type: integer
                    format: int32
                incidents:
                    type: array
                    items:
                        "$ref": "#/components/schemas/PublicAPI_V1_Incidents_SuccinctEntity"
                events:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Alerts_SirenEventEntity"
                is_expired:
                    type: boolean
            description: Alerts_AlertEntity model
        Signals_API_RuleEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                expression:
                    type: string
                team_id:
                    type: string
                target:
                    "$ref": "#/components/schemas/Signals_API_TargetEntity"
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                incident_type:
                    "$ref": "#/components/schemas/SuccinctEntity"
                notification_priority_override:
                    type: string
                    enum:
                        - HIGH
                        - MEDIUM
                        - LOW
        Signals_API_TargetEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                type:
                    type: string
                is_pageable:
                    type: boolean
        PublicAPI_V1_Incidents_SuccinctEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                number:
                    type: string
        Alerts_SirenEventEntity:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                data:
                    type: object
                    properties: {}
                    description: The event's payload
                created_at:
                    type: string
                    format: date-time
        patchV1IncidentsIncidentIdAlertsIncidentAlertIdPrimary:
            required:
                - primary
            type: object
            properties:
                primary:
                    type: boolean
            description: Setting an alert as primary will overwrite milestone times in the FireHydrant incident with times included in the primary alert. Services attached to the primary alert will also be automatically added to the incident.
        putV1IncidentsIncidentIdMilestonesBulkUpdate:
            required:
                - milestones
            type: object
            properties:
                bulk:
                    type: string
                    enum:
                        - 'true'
                milestones:
                    type: array
                    items:
                        required:
                            - occurred_at
                            - type
                        type: object
                        properties:
                            type:
                                type: string
                                description: The type/slug of the milestone. Must be one of the currently configured milestones for the given incident.
                            occurred_at:
                                type: string
                                description: An ISO8601 formatted string for when this milestone occurred. If you are removing a milestone, this field still needs to be set to some value
                                format: date-time
                            remove:
                                type: boolean
                                description: If set to true, the milestone will be removed from the incident
            description: |
                Update milestone times in bulk for a given incident. All milestone
                times for an incident must occur in chronological order
                corresponding to the configured order of milestones. If the result
                of this request would cause any milestone(s) to appear out of place,
                a 422 response will instead be returned. This includes milestones
                not explicitly submitted or updated in this request.
        Incidents_MilestoneEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_MilestoneEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Incidents_MilestoneEntityPaginated model
        postV1IncidentsIncidentIdRelatedChangeEvents:
            required:
                - change_event_id
                - type
            type: object
            properties:
                change_event_id:
                    type: string
                    description: The ID of the change event to associate
                type:
                    type: string
                    enum:
                        - caused
                        - fixed
                        - suspect
                        - dismissed
                why:
                    type: string
                    description: A short description about why this change event is related
            description: Add a related change to an incident. Changes added to an incident can be causes, fixes, or suspects. To remove a change from an incident, the type field should be set to dismissed.
        Incidents_RelatedChangeEventEntity:
            type: object
            properties:
                id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                why:
                    type: string
                    description: The reason why this change event is related to this incident
                type:
                    type: string
                    enum:
                        - caused
                        - fixed
                        - suspect
                        - dismissed
                change_event:
                    "$ref": "#/components/schemas/ChangeEventEntity"
                incident_id:
                    type: string
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
            description: Incidents_RelatedChangeEventEntity model
        Incidents_RelatedChangeEventEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_RelatedChangeEventEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Incidents_RelatedChangeEventEntityPaginated model
        patchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId:
            type: object
            properties:
                type:
                    type: string
                    enum:
                        - caused
                        - fixed
                        - suspect
                        - dismissed
                why:
                    type: string
                    description: A short description about why this change event is related
            description: Update a change attached to an incident
        postV1IncidentsIncidentIdStatusPages:
            required:
                - integration_id
                - integration_slug
            type: object
            properties:
                integration_slug:
                    type: string
                integration_id:
                    type: string
                title:
                    type: string
            description: Add a status page to an incident.
        Incidents_StatusPageEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_StatusPageEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Incidents_StatusPageEntityPaginated model
        postV1IncidentsIncidentIdTaskLists:
            required:
                - task_list_id
            type: object
            properties:
                task_list_id:
                    type: string
                    description: The id of the task list.
                assignee_id:
                    type: string
                    description: The ID of the user assigned to the tasks in this list.
            description: Add all tasks from list to incident
        TaskEntity:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                description:
                    type: string
                state:
                    type: string
                assignee:
                    "$ref": "#/components/schemas/AuthorEntity"
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                due_at:
                    type: string
                    format: date-time
            description: TaskEntity model
        postV1IncidentsIncidentIdTasks:
            required:
                - title
            type: object
            properties:
                title:
                    type: string
                    description: The title of the task.
                state:
                    type: string
                    description: 'The state of the task. One of: open, in_progress, cancelled, done'
                description:
                    type: string
                    description: A description of what the task is for.
                assignee_id:
                    type: string
                    description: The ID of the user assigned to the task.
                due_at:
                    type: string
                    description: The due date of the task. Relative values are supported such as '5m'
            description: Create a task
        TaskEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/TaskEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: TaskEntityPaginated model
        patchV1IncidentsIncidentIdTasksTaskId:
            type: object
            properties:
                title:
                    type: string
                    description: The title of the task.
                description:
                    type: string
                    description: A description of what the task is for.
                state:
                    type: string
                    description: 'The state of the task. One of: open, in_progress, cancelled, done'
                assignee_id:
                    type: string
                    description: The ID of the user assigned to the task.
                due_at:
                    type: string
                    description: The due date of the task. Relative values are supported such as '5m'
            description: Update a task's attributes
        postV1IncidentsIncidentIdTasksTaskIdConvert:
            type: object
            properties:
                summary:
                    type: string
                project_id:
                    type: string
                description:
                    type: string
                state:
                    type: string
                tag_list:
                    type: array
                    description: List of tags for the ticket
                    items:
                        type: string
            description: Convert a task to a follow-up
        Attachments_LinkEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Attachments_LinkEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Attachments_LinkEntityPaginated model
        postV1IncidentsIncidentIdLinks:
            required:
                - href
            type: object
            properties:
                display_text:
                    type: string
                icon_url:
                    type: string
                href:
                    type: string
            description: Allows adding adhoc links to an incident as an attachment
        putV1IncidentsIncidentIdLinksLinkId:
            type: object
            properties:
                display_text:
                    type: string
                icon_url:
                    type: string
                href_url:
                    type: string
            description: Updates the external incident link attributes
        PublicAPI_V1_Incidents_TranscriptEntity:
            type: object
            properties:
                id:
                    type: string
                    description: The unique identifier for the transcript entry
                speaker:
                    type: string
                    description: The speaker for the transcript entry
                start:
                    type: integer
                    description: The start time for the transcript entry
                    format: int32
                until:
                    type: integer
                    description: The end time for the transcript entry
                    format: int32
                words:
                    type: string
                    description: The words spoken for the transcript entry
                created_at:
                    type: string
                    description: The time the transcript entry was created
                    format: date-time
                updated_at:
                    type: string
                    description: The time the transcript entry was last updated
                    format: date-time
            description: PublicAPI_V1_Incidents_TranscriptEntity model
        IncidentAttachmentEntity:
            type: object
            properties:
                file_name:
                    type: string
                file_content_type:
                    type: string
                signed_url:
                    type: string
                media_type:
                    type: string
                description:
                    type: string
                external_id:
                    type: string
                file_size:
                    type: integer
                    format: int32
                status:
                    type: string
                    enum:
                        - pending_upload
                        - uploaded
                versions:
                    type: object
                    properties: {}
                    description: An object with keys that designate a specific version or size of the attachment
            description: IncidentAttachmentEntity model
        IncidentEventEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/IncidentEventEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: IncidentEventEntityPaginated model
        IncidentEventEntity:
            type: object
            properties:
                id:
                    type: string
                incident_id:
                    type: string
                type:
                    type: string
                context:
                    type: string
                data:
                    type: object
                    properties: {}
                    description: 'Can be one of: NoteEntity, TourStepEntity, RootCauseEntity, ChangeTypeEntity, RoleUpdateEntity, TaskUpdateEntity, AlertLinkedEntity, ChatMessageEntity, AddTaskListEntity, ImpactUpdateEntity, TicketUpdateEntity, GeneralUpdateEntity, ChangelogEntryEntity, IncidentStatusEntity, TeamAssignmentEntity, BulkUpdateEntity'
                occurred_at:
                    type: string
                    format: date-time
                visibility:
                    type: string
                    enum:
                        - private_to_org
                        - open_to_public
                        - internal_status_page
                author:
                    "$ref": "#/components/schemas/AuthorEntity"
                votes:
                    "$ref": "#/components/schemas/VotesEntity"
                conversations:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Conversations_API_Entities_Reference"
            description: IncidentEventEntity model
        VotesEntity:
            type: object
            properties:
                voted:
                    type: boolean
                    description: Whether or not the current actor has voted
                liked:
                    type: boolean
                    description: Whether or not the current actor has voted positively
                disliked:
                    type: boolean
                    description: Whether or not the current actor has voted negatively
                likes:
                    type: integer
                    format: int32
                dislikes:
                    type: integer
                    format: int32
            description: VotesEntity model
        patchV1IncidentsIncidentIdEventsEventIdVotes:
            required:
                - direction
            type: object
            properties:
                direction:
                    type: string
                    description: The direction you would like to vote, or if you dig it
                    enum:
                        - up
                        - down
                        - dig
            description: Allows for upvoting or downvoting an event
        patchV1IncidentsIncidentIdImpact:
            type: object
            properties:
                note:
                    type: string
                milestone:
                    type: string
                impact:
                    type: array
                    items:
                        required:
                            - condition_id
                            - id
                        type: object
                        properties:
                            id:
                                type: string
                            condition_id:
                                type: string
                status_pages:
                    type: array
                    items:
                        required:
                            - id
                            - integration_slug
                        type: object
                        properties:
                            id:
                                type: string
                            integration_slug:
                                type: string
            description: |
                Allows updating an incident's impacted infrastructure, with the option to
                move the incident into a different milestone and provide a note to update
                the incident timeline and any attached status pages. If this method is
                requested with the PUT verb, impacts will be completely replaced with the
                information in the request body, even if not provided (effectively clearing
                all impacts). If this method is requested with the PATCH verb, the provided
                impacts will be added or updated, but no impacts will be removed.
        putV1IncidentsIncidentIdImpact:
            type: object
            properties:
                note:
                    type: string
                milestone:
                    type: string
                impact:
                    type: array
                    items:
                        required:
                            - condition_id
                            - id
                        type: object
                        properties:
                            id:
                                type: string
                            condition_id:
                                type: string
                status_pages:
                    type: array
                    items:
                        required:
                            - id
                            - integration_slug
                        type: object
                        properties:
                            id:
                                type: string
                            integration_slug:
                                type: string
            description: |
                Allows updating an incident's impacted infrastructure, with the option to
                move the incident into a different milestone and provide a note to update
                the incident timeline and any attached status pages. If this method is
                requested with the PUT verb, impacts will be completely replaced with the
                information in the request body, even if not provided (effectively clearing
                all impacts). If this method is requested with the PATCH verb, the provided
                impacts will be added or updated, but no impacts will be removed.
        postV1IncidentsIncidentIdImpactType:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                condition_id:
                    type: string
            description: Add impacted infrastructure to an incident
        IncidentImpactEntity:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                infrastructure:
                    "$ref": "#/components/schemas/SuccinctEntity"
            description: IncidentImpactEntity model
        IncidentImpactEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/IncidentImpactEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: IncidentImpactEntityPaginated model
        postV1IncidentsIncidentIdNotes:
            required:
                - body
            type: object
            properties:
                body:
                    type: string
                occurred_at:
                    type: string
                    description: ISO8601 timestamp for when the note occurred
                    format: date-time
                visibility:
                    type: string
                    default: private_to_org
                    enum:
                        - private_to_org
                        - open_to_public
                        - internal_status_page
                status_pages:
                    type: array
                    items:
                        required:
                            - id
                            - integration_slug
                        type: object
                        properties:
                            id:
                                type: string
                            integration_slug:
                                type: string
            description: Create a new note on for an incident. The visibility field on a note determines where it gets posted.
        patchV1IncidentsIncidentIdNotesNoteId:
            required:
                - body
            type: object
            properties:
                body:
                    type: string
            description: Updates the body of a note
        postV1IncidentsIncidentIdGenericChatMessages:
            required:
                - body
            type: object
            properties:
                body:
                    type: string
                occurred_at:
                    type: string
                    description: ISO8601 timestamp for when the chat message occurred
                    format: date-time
                vote_direction:
                    type: string
                    enum:
                        - up
                        - down
            description: Create a new generic chat message on an incident timeline. These are independent of any specific chat provider.
        Event_GenericChatMessageEntity:
            type: object
            properties:
                id:
                    type: string
                body:
                    type: string
                created_at:
                    type: string
                    format: date-time
            description: Event_GenericChatMessageEntity model
        patchV1IncidentsIncidentIdGenericChatMessagesMessageId:
            required:
                - body
            type: object
            properties:
                body:
                    type: string
            description: Update an existing generic chat message on an incident.
        Incidents_RoleAssignmentEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Incidents_RoleAssignmentEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Incidents_RoleAssignmentEntityPaginated model
        postV1IncidentsIncidentIdRoleAssignments:
            required:
                - incident_role_id
                - user_id
            type: object
            properties:
                user_id:
                    type: string
                    description: The user ID to assign the role to
                incident_role_id:
                    type: string
                    description: The Incident Role ID to assign the role to
            description: Assign a role to a user for this incident
        postV1IncidentsIncidentIdTeamAssignments:
            required:
                - team_id
            type: object
            properties:
                team_id:
                    type: string
                    description: The team ID to associate to the incident
            description: Assign a team for this incident
        Incidents_RelationshipsEntity:
            type: object
            properties:
                parent:
                    "$ref": "#/components/schemas/PublicAPI_V1_Incidents_SuccinctEntity"
                children:
                    type: array
                    description: The root incident's child incidents.
                    items:
                        "$ref": "#/components/schemas/PublicAPI_V1_Incidents_SuccinctEntity"
                siblings:
                    type: array
                    description: A list of incidents that share the root incident's parent.
                    items:
                        "$ref": "#/components/schemas/PublicAPI_V1_Incidents_SuccinctEntity"
            description: Incidents_RelationshipsEntity model
        IncidentRoleEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/IncidentRoleEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: IncidentRoleEntityPaginated model
        postV1IncidentRoles:
            required:
                - name
                - summary
            type: object
            properties:
                name:
                    type: string
                summary:
                    type: string
                description:
                    type: string
            description: Create a new incident role
        patchV1IncidentRolesIncidentRoleId:
            type: object
            properties:
                name:
                    type: string
                summary:
                    type: string
                description:
                    type: string
            description: Update a single incident role from its ID
        TagEntity:
            type: object
            properties:
                name:
                    type: string
            description: TagEntity model
        TagEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/TagEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: TagEntityPaginated model
        postV1IncidentTypes:
            required:
                - name
                - template
            type: object
            properties:
                name:
                    type: string
                template:
                    type: object
                    properties:
                        description:
                            type: string
                        customer_impact_summary:
                            type: string
                        labels:
                            type: object
                            additionalProperties:
                                type: string
                            description: A labels hash of keys and values
                        severity:
                            type: string
                        priority:
                            type: string
                        tag_list:
                            type: array
                            description: List of tags for the incident
                            items:
                                type: string
                        runbook_ids:
                            type: array
                            description: List of ids of Runbooks to attach to incidents created from this type
                            items:
                                type: string
                        private_incident:
                            type: boolean
                        team_ids:
                            type: array
                            description: List of ids of teams to be assigned to incidents
                            items:
                                type: string
                        impacts:
                            type: array
                            description: An array of impact/condition combinations
                            items:
                                required:
                                    - condition_id
                                    - id
                                type: object
                                properties:
                                    id:
                                        type: string
                                        description: The id of impact
                                    condition_id:
                                        type: string
                                        description: The id of the condition
            description: Create a new incident type
        IncidentTypeEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                template:
                    "$ref": "#/components/schemas/IncidentTypeEntity_TemplateEntity"
                template_values:
                    "$ref": "#/components/schemas/IncidentTypeEntity_TemplateValuesEntity"
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
            description: IncidentTypeEntity model
        IncidentTypeEntity_TemplateEntity:
            type: object
            properties:
                incident_name:
                    type: string
                summary:
                    type: string
                description:
                    type: string
                customer_impact_summary:
                    type: string
                labels:
                    type: object
                    properties: {}
                    description: Arbitrary key:value pairs of labels for your incidents.
                severity:
                    type: string
                priority:
                    type: string
                tag_list:
                    type: array
                    items:
                        type: string
                runbook_ids:
                    type: array
                    items:
                        type: string
                team_ids:
                    type: array
                    items:
                        type: string
                private_incident:
                    type: boolean
                custom_fields:
                    type: string
                impacts:
                    type: array
                    items:
                        "$ref": "#/components/schemas/IncidentTypeEntity_TemplateImpactEntity"
        IncidentTypeEntity_TemplateImpactEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                condition_id:
                    type: string
                condition_name:
                    type: string
                type:
                    type: string
                    enum:
                        - environment
                        - functionality
                        - service
        IncidentTypeEntity_TemplateValuesEntity:
            type: object
            properties:
                services:
                    type: array
                    items:
                        "$ref": "#/components/schemas/IncidentTypeEntity_TemplateImpactEntity"
                functionalities:
                    type: array
                    items:
                        "$ref": "#/components/schemas/IncidentTypeEntity_TemplateImpactEntity"
                environments:
                    type: array
                    items:
                        "$ref": "#/components/schemas/IncidentTypeEntity_TemplateImpactEntity"
                runbooks:
                    type: object
                    properties: {}
                    description: A hash mapping runbook IDs to runbook names.
                teams:
                    type: array
                    items:
                        "$ref": "#/components/schemas/TeamEntity"
        IncidentTypeEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/IncidentTypeEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: IncidentTypeEntityPaginated model
        patchV1IncidentTypesId:
            required:
                - name
                - template
            type: object
            properties:
                name:
                    type: string
                template:
                    type: object
                    properties:
                        description:
                            type: string
                        customer_impact_summary:
                            type: string
                        labels:
                            type: object
                            additionalProperties:
                                type: string
                            description: A labels hash of keys and values
                        severity:
                            type: string
                        priority:
                            type: string
                        tag_list:
                            type: array
                            description: List of tags for the incident
                            items:
                                type: string
                        runbook_ids:
                            type: array
                            description: List of ids of Runbooks to attach to incidents created from this type
                            items:
                                type: string
                        private_incident:
                            type: boolean
                        team_ids:
                            type: array
                            description: List of ids of teams to be assigned to incidents
                            items:
                                type: string
                        impacts:
                            type: array
                            description: An array of impact/condition combinations
                            items:
                                required:
                                    - condition_id
                                    - id
                                type: object
                                properties:
                                    id:
                                        type: string
                                        description: The id of impact
                                    condition_id:
                                        type: string
                                        description: The id of the condition
            description: Update a single incident type from its ID
        Integrations_IntegrationEntity:
            type: object
            properties:
                id:
                    type: string
                slug:
                    type: string
                name:
                    type: string
                description:
                    type: string
                setup_url:
                    type: string
                created_at:
                    type: string
                    format: date-time
                connections:
                    "$ref": "#/components/schemas/Integrations_ConnectionEntity"
                enabled:
                    type: boolean
                installed:
                    type: boolean
                deprecated:
                    type: boolean
                logo:
                    "$ref": "#/components/schemas/Integrations_IntegrationEntity_LogoEntity"
                nat_ip:
                    type: string
            description: Integrations_IntegrationEntity model
        Integrations_ConnectionEntity:
            type: object
            properties:
                id:
                    type: string
                integration_slug:
                    type: string
                integration_id:
                    type: string
                display_name:
                    type: string
                configuration_url:
                    type: string
                authorized_by:
                    type: string
                authorized_by_id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                details:
                    type: object
                    properties: {}
                    description: Integration-specific details of this connection. As identified by the integration_slug, this object will be represented by that integration's ConnectionEntity.
                default_authorized_actor:
                    "$ref": "#/components/schemas/AuthorEntity"
        Integrations_IntegrationEntity_LogoEntity:
            type: object
            properties:
                logo_url:
                    type: string
        FieldMapping_FieldMapEntity:
            type: object
            properties:
                id:
                    type: string
                connection_id:
                    type: string
                connection_type:
                    type: string
                entity_id:
                    type: string
                entity_type:
                    type: string
                body:
                    type: object
                    properties: {}
                available_fields_url:
                    type: string
                data_bag_url:
                    type: string
            description: FieldMapping_FieldMapEntity model
        FieldMapping_MappableFieldEntity:
            type: object
            properties:
                value:
                    type: string
                    description: The ID of the field
                label:
                    type: string
                    description: The human-readable name of the field
                type:
                    type: string
                    description: The allowed type of the field
                allowed_values:
                    type: string
                    description: The allowed values of the field
                required:
                    type: string
                    description: If the field is required to be mapped
                help_text:
                    type: string
                    description: Short, inline documentation for the present field
            description: FieldMapping_MappableFieldEntity model
        Integrations_Aws_ConnectionEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Integrations_Aws_ConnectionEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Integrations_Aws_ConnectionEntityPaginated model
        Integrations_Aws_ConnectionEntity:
            type: object
            properties:
                id:
                    type: string
                aws_account_id:
                    type: string
                target_arn:
                    type: string
                external_id:
                    type: string
                connection_status:
                    type: string
                    enum:
                        - pending_setup
                        - role_assumed
                        - cant_assume_role
                        - invalid_permissions
                        - validated
                status_text:
                    type: string
                status_description:
                    type: string
                environment_id:
                    type: string
                environment_name:
                    type: string
                regions:
                    type: array
                    items:
                        type: string
            description: Integrations_Aws_ConnectionEntity model
        patchV1IntegrationsAwsConnectionsId:
            type: object
            properties:
                aws_account_id:
                    type: string
                target_arn:
                    type: string
                connection_status:
                    type: string
            description: Update the AWS connection with the provided data.
        Integrations_Aws_CloudtrailBatchEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Integrations_Aws_CloudtrailBatchEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Integrations_Aws_CloudtrailBatchEntityPaginated model
        Integrations_Aws_CloudtrailBatchEntity:
            type: object
            properties:
                id:
                    type: string
                events_created:
                    type: integer
                    format: int32
                status:
                    type: string
                    enum:
                        - in_progress
                        - failed
                        - successful
                        - pending
                        - retried
                starts_at:
                    type: string
                    format: date-time
                ends_at:
                    type: string
                    format: date-time
                connection:
                    "$ref": "#/components/schemas/Integrations_Aws_ConnectionEntity"
                created_at:
                    type: string
                    format: date-time
            description: Integrations_Aws_CloudtrailBatchEntity model
        patchV1IntegrationsAwsCloudtrailBatchesId:
            type: object
            properties:
                events_created:
                    type: integer
                    format: int32
                status:
                    type: string
                error:
                    type: string
                ends_at:
                    type: string
                    format: date-time
            description: Update a CloudTrail batch with new information.
        Integrations_ConfluenceCloud_SpaceKeyEntity:
            type: object
            properties:
                key:
                    type: string
                name:
                    type: string
            description: Integrations_ConfluenceCloud_SpaceKeyEntity model
        Integrations_Statuspage_ConnectionEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Integrations_Statuspage_ConnectionEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Integrations_Statuspage_ConnectionEntityPaginated model
        Integrations_Statuspage_ConnectionEntity:
            type: object
            properties:
                id:
                    type: string
                page_name:
                    type: string
                page_id:
                    type: string
                conditions:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Integrations_Statuspage_ConditionEntity"
                severities:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Integrations_Statuspage_SeverityEntity"
                milestone_mappings:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Integrations_Statuspage_MilestoneMappingEntity"
            description: Integrations_Statuspage_ConnectionEntity model
        Integrations_Statuspage_ConditionEntity:
            type: object
            properties:
                condition_id:
                    type: string
                condition_name:
                    type: string
                statuspageio_condition:
                    type: string
                    enum:
                        - operational
                        - major_outage
                        - minor_outage
                        - degraded_performance
        Integrations_Statuspage_SeverityEntity:
            type: object
            properties:
                severity_slug:
                    type: string
                remote_status:
                    type: string
        Integrations_Statuspage_MilestoneMappingEntity:
            type: object
            properties:
                milestone_id:
                    type: string
                status:
                    type: string
        patchV1IntegrationsStatuspageConnectionsConnectionId:
            type: object
            properties:
                page_id:
                    type: string
                severities:
                    type: array
                    items:
                        required:
                            - remote_status
                            - severity_slug
                        type: object
                        properties:
                            severity_slug:
                                type: string
                                description: FireHydrant severity slug
                            remote_status:
                                type: string
                                description: Statuspage.io severity name
                conditions:
                    type: array
                    items:
                        required:
                            - condition_id
                            - statuspageio_condition
                        type: object
                        properties:
                            condition_id:
                                type: string
                                description: FireHydrant condition id
                            statuspageio_condition:
                                type: string
                                description: Statuspage.io condition name
                milestone_mappings:
                    type: array
                    items:
                        required:
                            - milestone_id
                            - status
                        type: object
                        properties:
                            milestone_id:
                                type: string
                                description: FireHydrant milestone id
                            status:
                                type: string
                                description: Statuspage.io status
                                enum:
                                    - investigating
                                    - identified
                                    - monitoring
                                    - resolved
            description: Update the given Statuspage integration connection.
        UserEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/UserEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: UserEntityPaginated model
        CurrentUserEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                source:
                    type: string
                email:
                    type: string
                role:
                    type: string
                teams:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SuccinctEntity"
                organization_id:
                    type: string
                organization_name:
                    type: string
                account_id:
                    type: integer
                    format: int32
            description: CurrentUserEntity model
        ReportEntity:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Reports_BucketEntity"
                start_date:
                    type: string
                    format: date
                end_date:
                    type: string
                    format: date
                bucket_period:
                    type: string
            description: ReportEntity model
        Reports_BucketEntity:
            type: object
            properties:
                bucket:
                    type: string
                points:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Reports_DataPointEntity"
        Reports_DataPointEntity:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: integer
                    format: int32
        Metrics_TicketFunnelMetricsEntity:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Metrics_TicketFunnelMetricsEntity_DataBucketEntity"
                groupings:
                    "$ref": "#/components/schemas/Metrics_TicketFunnelMetricsEntity_GroupingsEntity"
            description: Metrics_TicketFunnelMetricsEntity model
        Metrics_TicketFunnelMetricsEntity_DataBucketEntity:
            type: object
            properties:
                time_bucket:
                    type: string
                    description: The start datetime for the period
                    format: date-time
                filter_params:
                    "$ref": "#/components/schemas/Metrics_TicketFunnelMetricsEntity_DataBucketFilterParamsEntity"
                tasks_created:
                    type: integer
                    description: The number of tasks created
                    format: int32
                tasks_done:
                    type: integer
                    description: The number of tasks completed
                    format: int32
                follow_ups_created:
                    type: integer
                    description: The number of follow ups created
                    format: int32
                follow_ups_done:
                    type: integer
                    description: The number of follow ups completed
                    format: int32
        Metrics_TicketFunnelMetricsEntity_DataBucketFilterParamsEntity:
            type: object
            properties:
                start_date:
                    type: string
                    description: The start datetime for the period
                    format: date-time
                end_date:
                    type: string
                    description: The end datetime for the period not inclusive
                    format: date
        Metrics_TicketFunnelMetricsEntity_GroupingsEntity:
            type: object
            properties:
                bucket_size:
                    type: string
                    description: The bucket size for the data
        Metrics_RetrospectiveEntity:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Metrics_RetrospectiveEntity_DataEntity"
                summary:
                    "$ref": "#/components/schemas/Metrics_RetrospectiveEntity_SummaryEntity"
            description: Metrics_RetrospectiveEntity model
        Metrics_RetrospectiveEntity_DataEntity:
            type: object
            properties:
                x:
                    type: string
                "y":
                    type: number
                    format: float
        Metrics_RetrospectiveEntity_SummaryEntity:
            type: object
            properties:
                completed:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
                incomplete:
                    type: integer
                    format: int32
                mean:
                    type: number
                    format: float
                shortest:
                    type: number
                    format: float
                longest:
                    type: number
                    format: float
                completion_percentage:
                    type: number
                    format: float
        Metrics_MilestonesFunnelEntity:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Metrics_MilestonesFunnelEntity_DataBucketEntity"
                columns:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Metrics_MilestonesFunnelEntity_ColumnEntity"
                groupings:
                    "$ref": "#/components/schemas/Metrics_MilestonesFunnelEntity_GroupingsEntity"
                meta:
                    "$ref": "#/components/schemas/Metrics_MilestonesFunnelEntity_MetaEntity"
            description: Metrics_MilestonesFunnelEntity model
        Metrics_MilestonesFunnelEntity_DataBucketEntity:
            type: object
            properties:
                time_bucket:
                    type: string
                    description: The start datetime for the period
                    format: date-time
                filter_params:
                    "$ref": "#/components/schemas/Metrics_MilestonesFunnelEntity_DataBucketFilterParamsEntity"
                milestone_counts:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Metrics_MilestonesFunnelEntity_DataBucketMilestoneCountEntity"
        Metrics_MilestonesFunnelEntity_DataBucketFilterParamsEntity:
            type: object
            properties:
                start_date:
                    type: string
                    description: The start datetime for the period
                    format: date-time
                end_date:
                    type: string
                    description: The end datetime for the period not inclusive
                    format: date
        Metrics_MilestonesFunnelEntity_DataBucketMilestoneCountEntity:
            type: object
            properties:
                milestone_id:
                    type: string
                    description: The UUID of the milestone
                count:
                    type: integer
                    description: The frequency count of that milestone for the period
                    format: int32
        Metrics_MilestonesFunnelEntity_ColumnEntity:
            type: object
            properties:
                name:
                    type: string
                    description: The slug of the milestone
                label:
                    type: string
                    description: The name of the milestone
                tooltip:
                    type: string
                    description: The description of the milestone
                id:
                    type: string
                    description: The UUID of the milestone
        Metrics_MilestonesFunnelEntity_GroupingsEntity:
            type: object
            properties:
                bucket_size:
                    type: string
                    description: The bucket size for the data
        Metrics_MilestonesFunnelEntity_MetaEntity:
            type: object
            properties:
                deleted_milestones:
                    type: array
                    items:
                        type: string
                added_milestones:
                    type: array
                    items:
                        type: string
        Metrics_MetricsEntity:
            type: object
            properties:
                type:
                    type: string
                by:
                    type: string
                    description: 'The field by which the metrics are grouped. Can be one of: total, severity, priority, functionality, service, environment, or user.'
                bucket_size:
                    type: integer
                    description: 'The size of returned buckets. Can be one of: day, week, month, or all_time.'
                    format: int32
                display_information:
                    type: object
                    properties: {}
                keys:
                    type: array
                    items:
                        type: string
                buckets:
                    type: array
                    items:
                        type: object
                        properties: {}
                sort:
                    "$ref": "#/components/schemas/Metrics_MetricsEntity_SortEntity"
            description: Metrics_MetricsEntity model
        Metrics_MetricsEntity_SortEntity:
            type: object
            properties:
                field:
                    type: string
                direction:
                    type: string
                limit:
                    type: integer
                    format: int32
        Metrics_MttxDataEntity:
            type: object
            properties:
                groupings:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Metrics_MttxDataEntity_GroupingEntity"
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Metrics_MttxGroupEntity"
            description: Metrics_MttxDataEntity model
        Metrics_MttxDataEntity_GroupingEntity:
            type: object
            properties:
                type:
                    type: string
                id_attribute:
                    type: string
                name_attribute:
                    type: string
        Metrics_MttxGroupEntity:
            type: object
            properties:
                group_attributes:
                    type: string
                filter_params:
                    type: object
                    properties: {}
                count:
                    type: integer
                    format: int32
                mttd:
                    type: number
                    format: float
                mtta:
                    type: number
                    format: float
                mttm:
                    type: number
                    format: float
                mttr:
                    type: number
                    format: float
                count_diff:
                    type: integer
                    format: int32
                count_percent_diff:
                    type: number
                    format: float
                mttd_diff:
                    type: number
                    format: float
                mtta_diff:
                    type: number
                    format: float
                mttm_diff:
                    type: number
                    format: float
                mttr_diff:
                    type: number
                    format: float
                mttd_percent_diff:
                    type: number
                    format: float
                mtta_percent_diff:
                    type: number
                    format: float
                mttm_percent_diff:
                    type: number
                    format: float
                mttr_percent_diff:
                    type: number
                    format: float
                healthiness:
                    type: number
                    format: float
        Metrics_InfrastructureListEntity:
            type: object
            properties:
                data:
                    type: array
                    description: List of infrastructure metrics
                    items:
                        "$ref": "#/components/schemas/Metrics_InfrastructureMetricsEntity"
            description: Metrics_InfrastructureListEntity model
        Metrics_InfrastructureMetricsEntity:
            type: object
            properties:
                id:
                    type: string
                    description: The UUID of the component
                name:
                    type: string
                    description: The name of the component
                mttd:
                    type: integer
                    description: Mean Time To Detection (seconds) for all incidents for this component in this time period
                    format: int32
                mtta:
                    type: integer
                    description: Mean Time To Acknowledgement (seconds) for all incidents for this component in this time period
                    format: int32
                mttm:
                    type: integer
                    description: Mean Time To Mitigation (seconds) for all incidents for this component in this time period
                    format: int32
                mttr:
                    type: integer
                    description: Mean Time To Resolution (seconds) for all incidents for this component in this time period
                    format: int32
                count:
                    type: integer
                    description: Number of incidents in this time period for this component
                    format: int32
                total_time:
                    type: integer
                    description: Total time (seconds) the component was impacted (MTTR x Incident Count)
                    format: int32
            description: Metrics_InfrastructureMetricsEntity model
        Runbooks_ActionsEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Runbooks_ActionsEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Runbooks_ActionsEntityPaginated model
        Runbooks_ActionsEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                slug:
                    type: string
                description:
                    type: string
                config:
                    "$ref": "#/components/schemas/Runbooks_ActionConfigEntity"
                category:
                    type: string
                prerequisites:
                    type: object
                    properties: {}
                integration:
                    "$ref": "#/components/schemas/Integrations_IntegrationEntity"
                supported_runbook_types:
                    type: array
                    items:
                        type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                automatable:
                    type: boolean
                rerunnable:
                    type: boolean
                repeatable:
                    type: boolean
                default_logic:
                    type: object
                    properties: {}
                default_rule_data:
                    type: object
                    properties: {}
        Runbooks_ActionConfigEntity:
            type: object
            properties:
                elements:
                    "$ref": "#/components/schemas/Runbooks_ElementEntity"
                documentation_url:
                    type: string
                    description: Location of documentation for this action
        Runbooks_ElementEntity:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                markdown:
                    "$ref": "#/components/schemas/Runbooks_ElementMarkdownEntity"
                textarea:
                    "$ref": "#/components/schemas/Runbooks_ElementTextareaEntity"
                input:
                    "$ref": "#/components/schemas/Runbooks_ElementInputEntity"
                plain_text:
                    "$ref": "#/components/schemas/Runbooks_ElementMarkdownEntity"
                dynamic_select:
                    "$ref": "#/components/schemas/Runbooks_ElementDynamicSelectEntity"
        Runbooks_ElementMarkdownEntity:
            type: object
            properties:
                text:
                    type: string
        Runbooks_ElementTextareaEntity:
            type: object
            properties:
                label:
                    type: string
                placeholder:
                    type: string
                default_value:
                    type: string
        Runbooks_ElementInputEntity:
            type: object
            properties:
                label:
                    type: string
                placeholder:
                    type: string
                default_value:
                    type: string
                required:
                    type: boolean
        Runbooks_ElementDynamicSelectEntity:
            type: object
            properties:
                label:
                    type: string
                placeholder:
                    type: string
                async_url:
                    type: string
                required:
                    type: boolean
                clearable:
                    type: boolean
                is_multi:
                    type: boolean
                default_value:
                    "$ref": "#/components/schemas/Runbooks_ElementDynamicSelectEntity_SelectOptionEntity"
                options:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Runbooks_ElementDynamicSelectEntity_SelectOptionEntity"
        Runbooks_ElementDynamicSelectEntity_SelectOptionEntity:
            type: object
            properties:
                label:
                    type: string
                value:
                    type: string
        postV1RunbooksExecutions:
            required:
                - execute_for
                - runbook_id
            type: object
            properties:
                execute_for:
                    type: string
                    description: 'The incident to attach the runbook to. Format must be: `incident/${incidentId}`'
                runbook_id:
                    type: string
                    description: ID of runbook to attach
            description: Attaches a runbook to an incident and executes it
        Runbooks_ExecutionEntity:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: string
                status_reason:
                    type: string
                status_reason_message:
                    type: string
                has_been_rerun:
                    type: boolean
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                created_by:
                    type: string
                runbook:
                    "$ref": "#/components/schemas/SlimRunbookEntity"
                steps:
                    "$ref": "#/components/schemas/Runbooks_ExecutionStepEntity"
                executed_for:
                    "$ref": "#/components/schemas/Runbooks_ExecutionEntity_ExecutedForEntity"
            description: Runbooks_ExecutionEntity model
        Runbooks_ExecutionStepEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                action_slug:
                    type: string
                action_type:
                    type: string
                integration_name:
                    type: string
                integration_slug:
                    type: string
                automatic:
                    type: boolean
                config:
                    type: object
                    properties: {}
                step_elements:
                    type: array
                    items:
                        type: object
                        properties: {}
                executable:
                    type: boolean
                repeats:
                    type: boolean
                repeats_duration:
                    type: string
                    description: ISO8601 formatted duration string
                repeats_at:
                    type: string
                    format: date-time
                has_been_rerun:
                    type: boolean
                has_been_retried:
                    type: boolean
                execution:
                    "$ref": "#/components/schemas/Runbooks_ExecutionStepExecutionEntity"
                repeatable:
                    type: boolean
                rule:
                    "$ref": "#/components/schemas/Rules_RuleEntity"
        Runbooks_ExecutionStepExecutionEntity:
            type: object
            properties:
                state:
                    type: string
                    enum:
                        - initial
                        - pending
                        - scheduled
                        - started
                        - dismissed
                        - completed
                        - errored
                data:
                    type: object
                    properties: {}
                performed_by:
                    "$ref": "#/components/schemas/ActorEntity"
                performed_at:
                    type: string
                    format: date-time
                scheduled_for:
                    type: string
                    format: date-time
                error:
                    type: string
                webhook_delivery:
                    "$ref": "#/components/schemas/Runbooks_WebhookDeliveryEntity"
        Runbooks_WebhookDeliveryEntity:
            type: object
            properties:
                headers:
                    type: string
                status_code:
                    type: string
        Runbooks_ExecutionEntity_ExecutedForEntity:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                name:
                    type: string
        Runbooks_ExecutionEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Runbooks_ExecutionEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Runbooks_ExecutionEntityPaginated model
        patchV1RunbooksExecutionsExecutionIdVotes:
            required:
                - direction
            type: object
            properties:
                direction:
                    type: string
                    description: The direction you would like to vote, or if you dig it
                    enum:
                        - up
                        - down
                        - dig
            description: Allows for upvoting or downvoting an event
        putV1RunbooksExecutionsExecutionIdStepsStepId:
            required:
                - state
            type: object
            properties:
                state:
                    type: string
                schedule_for:
                    type: string
                    format: date-time
                data:
                    type: object
                    additionalProperties: true
                    description: Data for execution of this step
                repeats_at:
                    type: string
                    format: date-time
            description: Updates a runbook step execution, especially for changing the state of a step execution.
        patchV1RunbooksExecutionsExecutionIdStepsStepIdVotes:
            required:
                - direction
            type: object
            properties:
                direction:
                    type: string
                    description: The direction you would like to vote, or if you dig it
                    enum:
                        - up
                        - down
                        - dig
            description: Allows for upvoting or downvoting an event
        postV1Runbooks:
            required:
                - name
                - type
            type: object
            properties:
                name:
                    type: string
                type:
                    type: string
                    description: Deprecated, but still required. Please just use 'incident'
                    enum:
                        - incident
                        - general
                        - infrastructure
                        - incident_role
                summary:
                    type: string
                    description: Deprecated. Use description
                description:
                    type: string
                    description: A longer description about the Runbook. Supports markdown format
                auto_attach_to_restricted_incidents:
                    type: boolean
                    description: Whether or not this runbook should be automatically attached to restricted incidents. Note that setting this to `true` will prevent it from being attached to public incidents, even manually. Defaults to `false`.
                tutorial:
                    type: boolean
                    description: Whether or not this runbook is a tutorial runbook
                owner:
                    required:
                        - id
                    type: object
                    properties:
                        id:
                            type: string
                    description: An object representing a Team that owns the runbook
                attachment_rule:
                    required:
                        - logic
                    type: object
                    properties:
                        logic:
                            type: string
                            description: The JSON logic for the attaching the runbook
                        user_data:
                            type: string
                            description: The user data for the rule
                steps:
                    type: array
                    items:
                        required:
                            - action_id
                            - name
                        type: object
                        properties:
                            name:
                                type: string
                                description: Name for step
                            action_id:
                                type: string
                                description: ID of action to use for this step.
                            rule:
                                required:
                                    - logic
                                type: object
                                properties:
                                    logic:
                                        type: string
                                        description: The JSON logic for the rule
                                    user_data:
                                        type: string
                                        description: The user data for the rule
            description: Create a new runbook for use with incidents.
        RunbookEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                summary:
                    type: string
                description:
                    type: string
                type:
                    type: string
                runbook_template_id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                updated_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                steps:
                    "$ref": "#/components/schemas/RunbookStepEntity"
                attachment_rule:
                    "$ref": "#/components/schemas/Rules_RuleEntity"
                votes:
                    "$ref": "#/components/schemas/VotesEntity"
                is_editable:
                    type: boolean
                owner:
                    "$ref": "#/components/schemas/TeamEntityLite"
                categories:
                    type: string
                    description: categories the runbook applies to
                auto_attach_to_restricted_incidents:
                    type: boolean
                tutorial:
                    type: boolean
            description: RunbookEntity model
        RunbookStepEntity:
            type: object
            properties:
                name:
                    type: string
                action_id:
                    type: string
                step_id:
                    type: string
                config:
                    type: object
                    properties: {}
                    description: An unstructured object of key/value pairs describing the config settings for the step.
                action_elements:
                    type: array
                    description: A list of action elements
                    items:
                        type: object
                        properties: {}
                step_elements:
                    type: array
                    description: A list of step elements
                    items:
                        type: object
                        properties: {}
                automatic:
                    type: boolean
                delay_duration:
                    type: string
                    format: date-time
                action:
                    "$ref": "#/components/schemas/Runbooks_ActionsEntity"
                reruns:
                    type: boolean
                repeats:
                    type: boolean
                repeats_duration:
                    type: string
                    format: date-time
                votes:
                    "$ref": "#/components/schemas/VotesEntity"
                rule:
                    "$ref": "#/components/schemas/Rules_RuleEntity"
        putV1RunbooksRunbookId:
            type: object
            properties:
                name:
                    type: string
                summary:
                    type: string
                description:
                    type: string
                tutorial:
                    type: boolean
                    description: Whether or not this runbook is a tutorial runbook
                owner:
                    type: object
                    properties:
                        id:
                            type: string
                    description: An object representing a Team that owns the runbook
                severities:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                services:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                environments:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                attachment_rule:
                    required:
                        - logic
                    type: object
                    properties:
                        logic:
                            type: string
                            description: The JSON logic for the attaching the runbook
                        user_data:
                            type: string
                            description: The user data for the rule
                steps:
                    type: array
                    items:
                        required:
                            - action_id
                            - name
                        type: object
                        properties:
                            step_id:
                                type: string
                                description: ID of step to be updated
                            name:
                                type: string
                                description: Name for step
                            action_id:
                                type: string
                                description: ID of action to use for this step.
                            rule:
                                required:
                                    - logic
                                type: object
                                properties:
                                    logic:
                                        type: string
                                        description: The JSON logic for the rule
                                    user_data:
                                        type: string
                                        description: The user data for the rule
                auto_attach_to_restricted_incidents:
                    type: boolean
                    description: Whether or not this runbook should be automatically attached to restricted incidents. Note that setting this to `true` will prevent it from being attached to public incidents, even manually. Defaults to `false`.
            description: |
                Update a runbook and any attachment rules associated with it. This endpoint is used to configure nearly everything
                about a runbook, including but not limited to the steps, environments, attachment rules, and severities.
        NuncConnectionEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/NuncConnectionEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: NuncConnectionEntityPaginated model
        NuncConnectionEntity:
            type: object
            properties:
                id:
                    type: string
                domain:
                    type: string
                company_name:
                    type: string
                company_website:
                    type: string
                cname:
                    type: string
                greeting_title:
                    type: string
                greeting_body:
                    type: string
                operational_message:
                    type: string
                company_tos_url:
                    type: string
                primary_color:
                    type: string
                secondary_color:
                    type: string
                button_background_color:
                    type: string
                button_text_color:
                    type: string
                link_color:
                    type: string
                title:
                    type: string
                exposed_fields:
                    type: string
                conditions:
                    "$ref": "#/components/schemas/NuncConditionEntity"
                components:
                    "$ref": "#/components/schemas/NuncComponentEntity"
                component_groups:
                    "$ref": "#/components/schemas/NuncComponentGroupEntity"
                logo:
                    "$ref": "#/components/schemas/MediaImageEntity"
                cover_image:
                    "$ref": "#/components/schemas/MediaImageEntity"
                favicon:
                    "$ref": "#/components/schemas/MediaImageEntity"
                open_graph_image:
                    "$ref": "#/components/schemas/MediaImageEntity"
                dark_logo:
                    "$ref": "#/components/schemas/MediaImageEntity"
                enable_histogram:
                    type: boolean
                ui_version:
                    type: integer
                    format: int32
                links:
                    type: array
                    description: List of links attached to this status page.
                    items:
                        "$ref": "#/components/schemas/LinksEntity"
            description: NuncConnectionEntity model
        NuncConditionEntity:
            type: object
            properties:
                nunc_condition:
                    type: string
                condition_name:
                    type: string
                condition_id:
                    type: string
        NuncComponentEntity:
            type: object
            properties:
                infrastructure_type:
                    type: string
                infrastructure_id:
                    type: string
                label:
                    type: string
                position:
                    type: integer
                    format: int32
                component_group_id:
                    type: string
        NuncComponentGroupEntity:
            type: object
            properties:
                id:
                    type: string
                component_group_id:
                    type: string
                name:
                    type: string
                position:
                    type: integer
                    format: int32
        MediaImageEntity:
            type: object
            properties:
                original_url:
                    type: string
                versions_urls:
                    type: object
                    properties: {}
                    description: An object with keys that can have different versions of an image
        NuncEmailSubscribersEntity:
            type: object
            properties:
                id:
                    type: string
                    description: UUID of the subscriber
                email:
                    type: string
                    description: Email of the subscriber
                created_at:
                    type: string
                    description: The time the subscriber was created
                    format: date-time
            description: NuncEmailSubscribersEntity model
        patchV1NuncConnectionsNuncConnectionIdLinksLinkId:
            type: object
            properties:
                display_text:
                    type: string
                icon_url:
                    type: string
                href_url:
                    type: string
            description: Update a link to be displayed on a FireHydrant status page
        patchV1SavedSearchesResourceTypeSavedSearchId:
            type: object
            properties:
                is_private:
                    type: boolean
                name:
                    type: string
                filter_values:
                    type: object
                    additionalProperties: true
            description: Update a specific saved search
        SavedSearchEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                resource_type:
                    type: string
                user_id:
                    type: string
                is_private:
                    type: boolean
                    description: Whether or not this saved search is private
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                filter_values:
                    type: object
                    properties: {}
                    description: An unstructured key/value pair of saved values for searching
            description: SavedSearchEntity model
        postV1SavedSearchesResourceType:
            required:
                - filter_values
                - name
            type: object
            properties:
                name:
                    type: string
                is_private:
                    type: boolean
                filter_values:
                    type: object
                    additionalProperties: true
            description: Create a new saved search for a particular resource type
        Lifecycles_PhaseEntityList:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Lifecycles_PhaseEntity"
            description: Lifecycles_PhaseEntityList model
        Lifecycles_PhaseEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                type:
                    type: string
                position:
                    type: integer
                    format: int32
                milestones:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Lifecycles_MilestoneEntity"
            description: Lifecycles_PhaseEntity model
        Lifecycles_MilestoneEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                slug:
                    type: string
                position:
                    type: integer
                    format: int32
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                updated_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
        postV1Priorities:
            required:
                - slug
            type: object
            properties:
                slug:
                    type: string
                description:
                    type: string
                default:
                    type: boolean
            description: Create a new priority
        PriorityEntity:
            type: object
            properties:
                slug:
                    type: string
                description:
                    type: string
                position:
                    type: integer
                    format: int32
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                default:
                    type: boolean
            description: PriorityEntity model
        patchV1PrioritiesPrioritySlug:
            type: object
            properties:
                slug:
                    type: string
                description:
                    type: string
                default:
                    type: boolean
            description: Update a specific priority
        postV1Severities:
            required:
                - slug
            type: object
            properties:
                slug:
                    type: string
                description:
                    type: string
                position:
                    type: integer
                    format: int32
                color:
                    type: string
                    enum:
                        - red
                        - orange
                        - yellow
                        - blue
                        - teal
                        - grey
            description: Create a new severity
        SeverityEntity:
            type: object
            properties:
                slug:
                    type: string
                description:
                    type: string
                type:
                    type: string
                position:
                    type: integer
                    format: int32
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                system_record:
                    type: boolean
                color:
                    type: string
            description: SeverityEntity model
        SeverityEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SeverityEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: SeverityEntityPaginated model
        patchV1SeveritiesSeveritySlug:
            type: object
            properties:
                slug:
                    type: string
                description:
                    type: string
                position:
                    type: integer
                    format: int32
                color:
                    type: string
                    enum:
                        - red
                        - orange
                        - yellow
                        - blue
                        - teal
                        - grey
            description: Update a specific severity
        patchV1SeverityMatrix:
            required:
                - data
            type: object
            properties:
                summary:
                    type: string
                data:
                    type: array
                    items:
                        required:
                            - condition_id
                            - impact_id
                            - severity
                        type: object
                        properties:
                            severity:
                                type: string
                                description: Slug of a severity
                            impact_id:
                                type: string
                                description: Impact id
                            condition_id:
                                type: string
                                description: Condition id
            description: Update available severities and impacts in your organization's severity matrix.
        SeverityMatrix_SeverityMatrixEntity:
            type: object
            properties:
                matrix:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SeverityMatrix_ItemEntity"
                impacts:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SeverityMatrix_ImpactEntity"
                conditions:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SeverityMatrix_ConditionEntity"
            description: SeverityMatrix_SeverityMatrixEntity model
        SeverityMatrix_ItemEntity:
            type: object
            properties:
                severity:
                    type: string
                condition_id:
                    type: string
                impact_id:
                    type: string
                impact_type:
                    type: string
        postV1SeverityMatrixConditions:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                position:
                    type: integer
                    description: Position is used to determine ordering of conditions in API responses and dropdowns. The condition with the lowest position (typically 0) will be considered the Default Condition
                    format: int32
            description: Create a new condition
        patchV1SeverityMatrixConditionsConditionId:
            type: object
            properties:
                name:
                    type: string
                position:
                    type: integer
                    description: Position is used to determine ordering of conditions in API responses and dropdowns. The condition with the lowest position (typically 0) will be considered the Default Condition
                    format: int32
            description: Update a specific condition
        postV1SeverityMatrixImpacts:
            required:
                - affects_id
                - affects_type
            type: object
            properties:
                affects_type:
                    type: string
                affects_id:
                    type: string
                position:
                    type: integer
                    format: int32
            description: Create a new impact
        patchV1SeverityMatrixImpactsImpactId:
            type: object
            properties:
                name:
                    type: string
                position:
                    type: integer
                    format: int32
            description: Update a specific impact
        postV1ScheduledMaintenances:
            required:
                - ends_at
                - name
                - starts_at
            type: object
            properties:
                name:
                    type: string
                starts_at:
                    type: string
                    description: ISO8601 timestamp for the start time of the scheduled maintenance
                    format: date-time
                ends_at:
                    type: string
                    description: ISO8601 timestamp for the end time of the scheduled maintenance
                    format: date-time
                summary:
                    type: string
                description:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: A json object of label keys and values
                status_pages:
                    type: array
                    description: An array of status pages to display this maintenance on
                    items:
                        required:
                            - connection_id
                        type: object
                        properties:
                            integration_slug:
                                type: string
                                description: The slug identifying the type of status page
                            connection_id:
                                type: string
                                description: The UUID of the status page to display this maintenance on
                impacts:
                    type: array
                    description: An array of impact/condition combinations
                    items:
                        required:
                            - condition_id
                            - id
                            - type
                        type: object
                        properties:
                            type:
                                type: string
                                description: The type of impact
                            id:
                                type: string
                                description: The id of impact
                            condition_id:
                                type: string
                                description: The id of the condition
            description: Create a new scheduled maintenance event
        ScheduledMaintenanceEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                summary:
                    type: string
                description:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                starts_at:
                    type: string
                    format: date-time
                ends_at:
                    type: string
                    format: date-time
                incident:
                    "$ref": "#/components/schemas/IncidentEntity"
                status_pages:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ScheduledMaintenancesStatusPageEntity"
                impacts:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ScheduledMaintenancesImpactEntity"
                labels:
                    type: object
                    properties: {}
                    description: An object of label key and values
            description: ScheduledMaintenanceEntity model
        ScheduledMaintenancesStatusPageEntity:
            type: object
            properties:
                id:
                    type: string
                integration_id:
                    type: string
                integration_slug:
                    type: string
                integration_name:
                    type: string
        ScheduledMaintenancesImpactEntity:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                impact:
                    "$ref": "#/components/schemas/SuccinctEntity"
                condition:
                    "$ref": "#/components/schemas/SeverityMatrix_ConditionEntity"
        patchV1ScheduledMaintenancesScheduledMaintenanceId:
            type: object
            properties:
                name:
                    type: string
                summary:
                    type: string
                starts_at:
                    type: string
                    description: ISO8601 timestamp for the start time of the scheduled maintenance
                    format: date-time
                ends_at:
                    type: string
                    description: ISO8601 timestamp for the end time of the scheduled maintenance
                    format: date-time
                description:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: A json object of label keys and values
                status_pages:
                    type: array
                    description: An array of status pages to display this maintenance on
                    items:
                        required:
                            - connection_id
                        type: object
                        properties:
                            integration_slug:
                                type: string
                                description: The slug identifying the type of status page
                            connection_id:
                                type: string
                                description: The UUID of the status page to display this maintenance on
                impacts:
                    type: array
                    description: An array of impact/condition combinations
                    items:
                        required:
                            - condition_id
                            - id
                            - type
                        type: object
                        properties:
                            type:
                                type: string
                                description: The type of impact
                            id:
                                type: string
                                description: The id of impact
                            condition_id:
                                type: string
                                description: The id of the condition
            description: Change the conditions of a scheduled maintenance event, including updating any status page announcements of changes.
        ScheduleEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ScheduleEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: ScheduleEntityPaginated model
        InfrastructureSearchEntity:
            type: object
            properties:
                type:
                    type: string
                infrastructure:
                    type: string
            description: InfrastructureSearchEntity model
        Nunc_NuncSubscription:
            type: object
            properties:
                response:
                    type: string
            description: Nunc_NuncSubscription model
        postV1NuncSubscriptions:
            required:
                - email
            type: object
            properties:
                email:
                    type: string
            description: Subscribe to status page updates
        postV1StatusUpdateTemplates:
            required:
                - body
                - name
            type: object
            properties:
                name:
                    type: string
                body:
                    type: string
            description: Create a status update template for your organization
        StatusUpdateTemplateEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                body:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                discarded_at:
                    type: string
                    format: date-time
            description: StatusUpdateTemplateEntity model
        patchV1StatusUpdateTemplatesStatusUpdateTemplateId:
            type: object
            properties:
                name:
                    type: string
                body:
                    type: string
            description: Update a single status update template
        Organizations_CustomFieldDefinitionEntity:
            type: object
            properties:
                display_name:
                    type: string
                field_id:
                    type: string
                field_type:
                    type: string
                slug:
                    type: string
                description:
                    type: string
                required:
                    type: boolean
                required_at_milestone_id:
                    type: string
                    description: The milestone at which this field is required, if `required` is set to `true`. When null, a required field is always required.
                permissible_values:
                    type: string
            description: Organizations_CustomFieldDefinitionEntity model
        patchV1CustomFieldsDefinitionsFieldId:
            type: object
            properties:
                description:
                    type: string
                display_name:
                    type: string
                permissible_values:
                    type: array
                    items:
                        type: string
                required:
                    type: boolean
                required_at_milestone_id:
                    type: string
                    description: An optional milestone ID to specify when the field should become required, if `required` is set to `true`. If not provided, required fields are always required.
            description: Update a single custom field definition
        postV1CustomFieldsDefinitions:
            required:
                - display_name
                - field_type
                - required
            type: object
            properties:
                display_name:
                    type: string
                description:
                    type: string
                field_type:
                    type: string
                permissible_values:
                    type: array
                    items:
                        type: string
                required:
                    type: boolean
                required_at_milestone_id:
                    type: string
                    description: An optional milestone ID to specify when the field should become required, if `required` is set to `true`. If not provided, required fields are always required.
            description: Create a new custom field definition
        postV1PostMortemsReports:
            required:
                - incident_id
            type: object
            properties:
                incident_id:
                    type: string
            description: Create a report
        PostMortems_PostMortemReportEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                summary:
                    type: string
                incident_id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                tag_list:
                    type: array
                    items:
                        type: string
                additional_details:
                    type: array
                    items:
                        type: string
                incident:
                    "$ref": "#/components/schemas/IncidentEntity"
                questions:
                    "$ref": "#/components/schemas/PostMortems_QuestionEntity"
                calendar_events:
                    "$ref": "#/components/schemas/Calendars_EventEntity"
            description: PostMortems_PostMortemReportEntity model
        PostMortems_QuestionEntity:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                body:
                    type: string
                tooltip:
                    type: string
                kind:
                    type: string
                question_type_id:
                    type: string
                is_required:
                    type: boolean
                available_options:
                    type: array
                    items:
                        type: string
                conversations:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Conversations_API_Entities_Reference"
        Calendars_EventEntity:
            type: object
            properties:
                id:
                    type: string
                summary:
                    type: string
                description:
                    type: string
                starts_at:
                    type: string
                ends_at:
                    type: string
                created_at:
                    type: string
                updated_at:
                    type: string
                provider_url:
                    type: string
                provider_icon_url:
                    type: string
        PostMortems_PostMortemReportEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/PostMortems_PostMortemReportEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: PostMortems_PostMortemReportEntityPaginated model
        patchV1PostMortemsReportsReportId:
            type: object
            properties:
                name:
                    type: string
                summary:
                    type: string
                additional_details:
                    type: string
                questions:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                description: ID of a question
                            body:
                                type: string
                                description: Answer to question
            description: Update a report
        postV1PostMortemsReportsReportIdReasons:
            required:
                - summary
            type: object
            properties:
                summary:
                    type: string
            description: Add a new contributing factor to an incident
        PostMortems_ReasonEntity:
            type: object
            properties:
                id:
                    type: string
                summary:
                    type: string
                position:
                    type: integer
                    format: int32
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                conversations:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Conversations_API_Entities_Reference"
            description: PostMortems_ReasonEntity model
        PostMortems_ReasonEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/PostMortems_ReasonEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: PostMortems_ReasonEntityPaginated model
        patchV1PostMortemsReportsReportIdReasonsReasonId:
            type: object
            properties:
                summary:
                    type: string
            description: Update a contributing factor
        putV1PostMortemsReportsReportIdReasonsOrder:
            required:
                - new_position
                - old_position
            type: object
            properties:
                old_position:
                    type: integer
                    format: int32
                new_position:
                    type: integer
                    format: int32
            description: Reorder a contributing factor
        patchV1PostMortemsReportsReportIdFieldsFieldId:
            required:
                - value
            type: object
            properties:
                value:
                    type: string
            description: Update a field value on a post mortem report
        PostMortems_SectionFieldEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                value:
                    type: string
            description: PostMortems_SectionFieldEntity model
        postV1PostMortemsReportsReportIdPublish:
            type: object
            properties:
                user_ids:
                    type: array
                    description: An array of user IDs with whom to share the report
                    items:
                        type: string
                team_ids:
                    type: array
                    description: An array of team IDs with whom to share the report
                    items:
                        type: string
            description: Marks an incident retrospective as published and emails all of the participants in the report the summary
        putV1PostMortemsQuestions:
            type: object
            properties:
                _make_swagger_work_:
                    type: string
                questions:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                description: ID of a question
                            title:
                                type: string
                                description: title of a question
                            tooltip:
                                type: string
                                description: tooltip of a question
            description: Update the questions configured to be provided and filled out on future retrospective reports.
        PostMortems_QuestionTypeEntity:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                tooltip:
                    type: string
                kind:
                    type: string
                is_required:
                    type: boolean
                available_options:
                    type: array
                    items:
                        type: string
            description: PostMortems_QuestionTypeEntity model
        PostMortems_QuestionTypeEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/PostMortems_QuestionTypeEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: PostMortems_QuestionTypeEntityPaginated model
        Alerts_AlertEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Alerts_AlertEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Alerts_AlertEntityPaginated model
        Alerts_ProcessingLogEntryEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Alerts_ProcessingLogEntryEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: Alerts_ProcessingLogEntryEntityPaginated model
        Alerts_ProcessingLogEntryEntity:
            type: object
            properties:
                id:
                    type: string
                context:
                    type: object
                    properties: {}
                    description: An unstructured representation of this log entry's context.
                created_at:
                    type: string
                    format: date-time
                level:
                    type: string
                    enum:
                        - unknown
                        - debug
                        - info
                        - warn
                        - error
                        - fatal
                message:
                    type: string
                message_type:
                    type: string
                    enum:
                        - i18n_key
                        - custom
        postV1TicketingTickets:
            required:
                - summary
            type: object
            properties:
                summary:
                    type: string
                related_to:
                    type: string
                    description: Which incident this ticket is related to, in the format of 'incident/UUID'
                project_id:
                    type: string
                description:
                    type: string
                state:
                    type: string
                type:
                    type: string
                priority_id:
                    type: string
                tag_list:
                    type: array
                    description: List of tags for the ticket
                    items:
                        type: string
                remote_url:
                    type: string
                    description: The remote URL for an existing ticket in a supported and configured ticketing integration
            description: Creates a ticket for a project
        patchV1TicketingTicketsTicketId:
            type: object
            properties:
                summary:
                    type: string
                description:
                    type: string
                state:
                    type: string
                type:
                    type: string
                priority_id:
                    type: string
                tag_list:
                    type: array
                    description: List of tags for the ticket
                    items:
                        type: string
            description: Update a ticket's attributes
        Ticketing_Projects_ProjectListItemEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                config:
                    "$ref": "#/components/schemas/Ticketing_ProjectConfigEntity"
                field_map:
                    "$ref": "#/components/schemas/Ticketing_ProjectFieldMapEntity"
                updated_at:
                    type: string
                    format: date-time
                connection_slug:
                    type: string
            description: Ticketing_Projects_ProjectListItemEntity model
        Ticketing_ProjectConfigEntity:
            type: object
            properties:
                id:
                    type: string
                connection_id:
                    type: string
                connection_type:
                    type: string
                ticketing_project_id:
                    type: string
                ticketing_project_name:
                    type: string
                details:
                    type: object
                    properties: {}
                    description: 'A config object containing details about the project config. Can be one of: Ticketing::JiraCloud::ProjectConfigEntity, Ticketing::JiraOnprem::ProjectConfigEntity, or Ticketing::Shortcut::ProjectConfigEntity'
            description: Ticketing_ProjectConfigEntity model
        Ticketing_ProjectFieldMapEntity:
            type: object
            properties:
                id:
                    type: string
                connection_id:
                    type: string
                connection_type:
                    type: string
                ticketing_project_id:
                    type: string
                body:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Ticketing_ProjectFieldMapBodyEntity"
            description: Ticketing_ProjectFieldMapEntity model
        Ticketing_ProjectFieldMapBodyEntity:
            type: object
            properties:
                strategy:
                    type: string
                    enum:
                        - basic
                        - logic
                external_field:
                    type: string
                external_value:
                    "$ref": "#/components/schemas/Ticketing_ProjectFieldMapExternalValueEntity"
                user_data:
                    type: object
                    properties: {}
                cases:
                    type: array
                    items:
                        "$ref": "#/components/schemas/Ticketing_ProjectFieldMapCasesEntity"
                else:
                    "$ref": "#/components/schemas/Ticketing_ProjectFieldMapCasesElseEntity"
        Ticketing_ProjectFieldMapExternalValueEntity:
            type: object
            properties:
                type:
                    type: string
                    enum:
                        - literal
                        - fh-attribute
                        - fh-type
                value:
                    type: string
                attribute:
                    type: string
                presentation:
                    type: string
        Ticketing_ProjectFieldMapCasesEntity:
            type: object
            properties:
                logic:
                    type: object
                    properties: {}
                    description: An unstructured object of key/value pairs describing the logic for applying the rule.
                external_value:
                    "$ref": "#/components/schemas/Ticketing_ProjectFieldMapExternalValueEntity"
        Ticketing_ProjectFieldMapCasesElseEntity:
            type: object
            properties:
                external_value:
                    "$ref": "#/components/schemas/Ticketing_ProjectFieldMapExternalValueEntity"
        Ticketing_FieldMaps_MappableFieldEntity:
            type: object
            properties:
                value:
                    type: string
                    description: The ID of the field
                label:
                    type: string
                    description: The human-readable name of the field
                type:
                    type: string
                    description: The allowed type of the field
                allowed_values:
                    type: string
                    description: The allowed values of the field
                required:
                    type: string
                    description: If the field is required to be mapped
            description: Ticketing_FieldMaps_MappableFieldEntity model
        postV1TicketingPriorities:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                position:
                    type: integer
                    description: The position that this priority should take in your list of priorities. Priorities should be ordered from highest to lowest, with the highest priority at 0. If a position isn't specified, the new priority will be added to the end of the list; if another priority already exists at the specified position, that priority and all priorities following it will automatically be moved down the list to make room for the new priority.
                    format: int32
            description: Create a single ticketing priority
        patchV1TicketingPrioritiesId:
            type: object
            properties:
                name:
                    type: string
                position:
                    type: integer
                    description: The position that this priority should take in your list of priorities. Priorities should be ordered from highest to lowest, with the highest priority at 0. If a position isn't specified, the new priority will be added to the end of the list; if another priority already exists at the specified position, this priority will shift that priority and all priorities down the list.
                    format: int32
            description: Update a single ticketing priority's attributes
        postV1TaskLists:
            required:
                - name
                - task_list_items
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                task_list_items:
                    type: array
                    items:
                        required:
                            - summary
                        type: object
                        properties:
                            summary:
                                type: string
                                description: A summary of the task
                            description:
                                type: string
                                description: A long-form description for the task if additional context is helpful
            description: Creates a new task list
        TaskListEntity:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                task_list_items:
                    "$ref": "#/components/schemas/TaskListItemEntity"
            description: TaskListEntity model
        TaskListItemEntity:
            type: object
            properties:
                summary:
                    type: string
                description:
                    type: string
        patchV1TaskListsTaskListId:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                task_list_items:
                    type: array
                    items:
                        required:
                            - summary
                        type: object
                        properties:
                            summary:
                                type: string
                                description: A summary of the task
                            description:
                                type: string
                                description: A long-form description for the task if additional context is helpful
            description: Updates a task list's attributes and task list items
        putV1ScimV2GroupsId:
            required:
                - displayName
                - members
            type: object
            properties:
                displayName:
                    type: string
                    description: The name of the team being updated
                members:
                    type: array
                    items:
                        required:
                            - value
                        type: object
                        properties:
                            value:
                                type: string
                                description: String that represents the user's UUID to assign to the team
            description: SCIM endpoint to update a Team (Colloquial for Group in the SCIM protocol). Any members defined in the payload will be assigned to the team with no defined role, any missing members will be removed from the team.
        postV1ScimV2Groups:
            required:
                - displayName
                - members
            type: object
            properties:
                displayName:
                    type: string
                    description: The name of the team being created
                members:
                    type: array
                    items:
                        required:
                            - value
                        type: object
                        properties:
                            value:
                                type: string
                                description: String that represents the user's UUID to assign to the team
            description: SCIM endpoint to create a new Team (Colloquial for Group in the SCIM protocol). Any members defined in the payload will be assigned to the team with no defined role.
        patchV1ScimV2UsersId:
            required:
                - Operations
            type: object
            properties:
                trail:
                    type: string
                    description: An optional trail to log the request
                Operations:
                    type: array
                    description: An array of operations to perform on the user
                    items:
                        required:
                            - op
                            - path
                        type: object
                        properties:
                            op:
                                type: string
                                description: The operation to perform on the user. Options are add, remove, replace
                            path:
                                type: string
                                description: The path to the attribute to be modified
            description: PATCH SCIM endpoint to update a User. This endpoint is used to update a resource's attributes.
        putV1ScimV2UsersId:
            type: object
            properties:
                userName:
                    type: string
                    description: A service provider's unique identifier for the user
                name:
                    required:
                        - familyName
                        - givenName
                    type: object
                    properties:
                        givenName:
                            type: string
                            description: The family name of the User, or last name in most Western languages
                        familyName:
                            type: string
                            description: The given name of the User, or first name in most Western languages
                    description: The components of the user's name
                emails:
                    type: array
                    description: Email addresses for the User
                    items:
                        required:
                            - value
                        type: object
                        properties:
                            value:
                                type: string
                                description: String that represents an email address for the User
                            primary:
                                type: boolean
                                description: Boolean which signifies if an email is intended as the primary email for the User
                roles:
                    type: array
                    description: Roles for the User
                    items:
                        type: string
                active:
                    type: boolean
                    description: Boolean that represents whether user is active
            description: PUT SCIM endpoint to update a User. This endpoint is used to replace a resource's attributes.
        postV1ScimV2Users:
            required:
                - emails
                - name
                - userName
            type: object
            properties:
                userName:
                    type: string
                    description: A service provider's unique identifier for the user
                name:
                    required:
                        - familyName
                        - givenName
                    type: object
                    properties:
                        familyName:
                            type: string
                            description: The family name of the User, or last name in most Western languages
                        givenName:
                            type: string
                            description: The given name of the User, or first name in most Western languages
                    description: The components of the user's name
                emails:
                    type: array
                    description: Email addresses for the User
                    items:
                        required:
                            - primary
                            - value
                        type: object
                        properties:
                            value:
                                type: string
                                description: String that represents an email address for the User
                            primary:
                                type: boolean
                                description: Boolean which signifies if an email is intended as the primary email for the User
                roles:
                    type: array
                    description: Roles for the User. Options are owner, member or collaborator
                    items:
                        type: string
                password:
                    type: string
                    description: This attribute is intended to be used as a means to set, replace, or compare (i.e., filter for equality) a password
            description: SCIM endpoint to create and provision a new User. This endpoint will provision the User, which allows them to accept their account throught their IDP or via the Forgot Password flow.
        postV1CatalogsCatalogIdIngest:
            required:
                - data
                - encoding
            type: object
            properties:
                encoding:
                    type: string
                    description: Encoding for submitted data
                    enum:
                        - text/yaml
                        - application/x-yaml
                        - application/json
                data:
                    type: string
                    description: Service data
            description: Accepts catalog data in the configured format and asyncronously processes the data to incorporate changes into service catalog.
        Imports_ImportEntity:
            type: object
            properties:
                state:
                    type: string
                    enum:
                        - preprocessing
                        - ready_for_import
                        - importing
                        - completed
                updated_at:
                    type: string
                    format: date-time
            description: Imports_ImportEntity model
        postV1ChecklistTemplates:
            required:
                - checks
                - name
            type: object
            properties:
                name:
                    type: string
                checks:
                    type: array
                    description: An array of checks for the checklist template
                    items:
                        required:
                            - name
                        type: object
                        properties:
                            name:
                                type: string
                                description: The name of the check
                            description:
                                type: string
                                description: The description of the check
                description:
                    type: string
                team_id:
                    type: string
                    description: The ID of the Team that owns the checklist template
                connected_services:
                    type: array
                    description: Array of service IDs to attach checklist template to
                    items:
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                type: string
            description: Creates a checklist template for the organization
        ChecklistTemplateEntityPaginated:
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ChecklistTemplateEntity"
                pagination:
                    "$ref": "#/components/schemas/PaginationEntity"
            description: ChecklistTemplateEntityPaginated model
        patchV1ChecklistTemplatesId:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                checks:
                    type: array
                    description: An array of checks for the checklist template
                    items:
                        required:
                            - name
                        type: object
                        properties:
                            id:
                                type: string
                                description: Specify the check ID when updating an already existing check
                            description:
                                type: string
                                description: The description of the check
                            name:
                                type: string
                                description: The name of the check
                team_id:
                    type: string
                    description: The ID of the Team that owns the checklist template
                connected_services:
                    type: array
                    description: Array of service IDs to attach checklist template to
                    items:
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                type: string
                            remove:
                                type: boolean
                                description: Set to `true` to remove checklist from service
                remove_remaining_connected_services:
                    type: boolean
                    description: If set to true, any services tagged on the checklist that are not included in the given array will be removed. Set this to true if you want to do a replacement operation for the services
            description: Update a checklist templates attributes
        postV1ConversationsConversationIdCommentsCommentIdReactions:
            required:
                - reaction
            type: object
            properties:
                reaction:
                    type: string
                    description: CLDR short name of Unicode emojis
            description: ALPHA - Create a reaction on a comment
        patchV1ConversationsConversationIdCommentsCommentId:
            type: object
            properties:
                body:
                    type: string
                    description: Text body of comment
            description: ALPHA - Update a comment's attributes
        postV1ConversationsConversationIdComments:
            required:
                - body
            type: object
            properties:
                body:
                    type: string
                    description: Text body of comment
            description: ALPHA - Creates a comment for a project
        postV1SignalsEmailTargets:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                    description: The email target's name.
                slug:
                    type: string
                    description: The email address that will be listening to events.
                description:
                    type: string
                    description: A detailed description of the email target.
                target:
                    required:
                        - id
                        - type
                    type: object
                    properties:
                        type:
                            type: string
                            description: The type of target that the inbound email will notify when matched.
                            enum:
                                - Team
                                - EntireTeam
                                - EscalationPolicy
                                - OnCallSchedule
                                - User
                                - SlackChannel
                                - Webhook
                        id:
                            type: string
                            description: The ID of the target that the inbound email will notify when matched.
                    description: |
                        The target that the email target will notify. This object must contain a `type`
                        field that specifies the type of target and an `id` field that specifies the ID of
                        the target. The `type` field must be one of "escalation_policy", "on_call_schedule",
                        "team", "user", or "slack_channel".
                allowed_senders:
                    type: array
                    description: A list of email addresses that are allowed to send events to the target. Must be exact match.
                    items:
                        type: string
                rules:
                    type: array
                    description: A list of CEL expressions that should be evaluated and matched to determine if the target should be notified.
                    items:
                        type: string
                rule_matching_strategy:
                    type: string
                    description: Whether or not all rules must match, or if only one rule must match.
                    enum:
                        - all
                        - any
                status_cel:
                    type: string
                    description: The CEL expression that defines the status of an incoming email that is sent to the target.
                level_cel:
                    type: string
                    description: The CEL expression that defines the level of an incoming email that is sent to the target.
            description: Create a Signals email target for a team.
        patchV1SignalsEmailTargetsId:
            type: object
            properties:
                name:
                    type: string
                    description: The email target's name.
                slug:
                    type: string
                    description: The email address that will be listening to events.
                description:
                    type: string
                    description: A detailed description of the email target.
                target:
                    required:
                        - id
                        - type
                    type: object
                    properties:
                        type:
                            type: string
                            description: The type of target that the inbound email will notify when matched.
                            enum:
                                - Team
                                - EntireTeam
                                - EscalationPolicy
                                - OnCallSchedule
                                - User
                                - SlackChannel
                                - Webhook
                        id:
                            type: string
                            description: The ID of the target that the inbound email will notify when matched.
                    description: |
                        The target that the email target will notify. This object must contain a `type`
                        field that specifies the type of target and an `id` field that specifies the ID of
                        the target. The `type` field must be one of "escalation_policy", "on_call_schedule",
                        "team", "user", or "slack_channel".
                allowed_senders:
                    type: array
                    description: A list of email addresses that are allowed to send events to the target. Must be exact match.
                    items:
                        type: string
                status_cel:
                    type: string
                    description: The CEL expression that defines the status of an incoming email that is sent to the target.
                level_cel:
                    type: string
                    description: The CEL expression that defines the level of an incoming email that is sent to the target.
                rules:
                    type: array
                    description: A list of CEL expressions that should be evaluated and matched to determine if the target should be notified.
                    items:
                        type: string
                rule_matching_strategy:
                    type: string
                    description: Whether or not all rules must match, or if only one rule must match.
                    enum:
                        - all
                        - any
            description: Update a Signals email target by ID
        postV1SignalsWebhookTargets:
            required:
                - name
                - url
            type: object
            properties:
                name:
                    type: string
                    description: The webhook target's name.
                description:
                    type: string
                    description: An optional detailed description of the webhook target.
                url:
                    type: string
                    description: The URL that the webhook target will notify.
                signing_key:
                    type: string
                    description: |
                        An optional secret we will provide in the `FH-Signature` header
                        when sending a payload to the webhook target. This key will not be
                        shown in any response once configured.
            description: Create a Signals webhook target.
        patchV1SignalsWebhookTargetsId:
            type: object
            properties:
                name:
                    type: string
                    description: The webhook target's name.
                description:
                    type: string
                    description: An optional detailed description of the webhook target.
                url:
                    type: string
                    description: The URL that the webhook target will notify.
                signing_key:
                    type: string
                    description: |
                        An optional secret we will provide in the `FH-Signature` header
                        when sending a payload to the webhook target. This key will not be
                        shown in any response once configured.
            description: Update a Signals webhook target by ID
        Signals_API_IngestKeyEntity:
            type: object
            properties:
                url:
                    type: string
            description: Signals_API_IngestKeyEntity model
        postV1SignalsDebugger:
            required:
                - expression
                - signals
            type: object
            properties:
                expression:
                    type: string
                    description: CEL expression
                signals:
                    type: array
                    description: List of signals to evaluate rule expression against
                    items:
                        type: object
                        properties:
                            summary:
                                type: string
                            body:
                                type: string
                            level:
                                type: string
                            images:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        src:
                                            type: string
                                        alt:
                                            type: string
                            links:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        href:
                                            type: string
                                        text:
                                            type: string
        postV1Webhooks:
            required:
                - url
            type: object
            properties:
                url:
                    type: string
            description: Create a new webhook
        Webhooks_Entities_WebhookEntity:
            type: object
            properties:
                id:
                    type: string
                url:
                    type: string
                state:
                    type: string
                created_by:
                    "$ref": "#/components/schemas/AuthorEntity"
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
                subscriptions:
                    type: string
            description: Webhooks_Entities_WebhookEntity model
        patchV1WebhooksWebhookId:
            type: object
            properties:
                url:
                    type: string
                state:
                    type: string
                    enum:
                        - active
                        - inactive
            description: Update a specific webhook
        AI_Entities_PreferencesEntity:
            type: object
            properties:
                ai:
                    type: boolean
                description:
                    type: boolean
                followups:
                    type: boolean
                impact:
                    type: boolean
                retros:
                    type: boolean
                similar_incidents:
                    type: boolean
                summaries:
                    type: boolean
                updates:
                    type: boolean
            description: AI_Entities_PreferencesEntity model
    securitySchemes:
        api_key:
            type: apiKey
            name: Authorization
            in: header
x-original-swagger-version: '2.0'
