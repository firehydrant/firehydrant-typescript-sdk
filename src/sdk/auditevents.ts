/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { auditEventsGetAuditEvent } from "../funcs/auditEventsGetAuditEvent.js";
import { auditEventsListAuditEvents } from "../funcs/auditEventsListAuditEvents.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AuditEvents extends ClientSDK {
  /**
   * List audit events
   *
   * @remarks
   * List audit events
   */
  async listAuditEvents(
    request: operations.ListAuditEventsRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(auditEventsListAuditEvents(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a single audit event
   *
   * @remarks
   * Get a single audit event
   */
  async getAuditEvent(
    request: operations.GetAuditEventRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(auditEventsGetAuditEvent(
      this,
      request,
      options,
    ));
  }
}
