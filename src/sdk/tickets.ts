/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ticketsCreate } from "../funcs/ticketsCreate.js";
import { ticketsDelete } from "../funcs/ticketsDelete.js";
import { ticketsList } from "../funcs/ticketsList.js";
import { ticketsUpdate } from "../funcs/ticketsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Tickets extends ClientSDK {
  /**
   * List tickets
   *
   * @remarks
   * List all of the tickets that have been added to the organiation
   */
  async list(
    request: operations.ListTicketsRequest,
    options?: RequestOptions,
  ): Promise<components.TicketingTicketEntity> {
    return unwrapAsync(ticketsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a ticket
   *
   * @remarks
   * Creates a ticket for a project
   */
  async create(
    request: components.PostV1TicketingTickets,
    options?: RequestOptions,
  ): Promise<components.TicketingTicketEntity> {
    return unwrapAsync(ticketsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a ticket
   */
  async delete(
    request: operations.DeleteTicketRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(ticketsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a ticket
   *
   * @remarks
   * Update a ticket's attributes
   */
  async update(
    request: operations.UpdateTicketRequest,
    options?: RequestOptions,
  ): Promise<components.TicketingTicketEntity> {
    return unwrapAsync(ticketsUpdate(
      this,
      request,
      options,
    ));
  }
}
