/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { permissionsListCurrentUserPermissions } from "../funcs/permissionsListCurrentUserPermissions.js";
import { permissionsListPermissions } from "../funcs/permissionsListPermissions.js";
import { permissionsListTeamPermissions } from "../funcs/permissionsListTeamPermissions.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Permissions extends ClientSDK {
  /**
   * List permissions
   *
   * @remarks
   * List all permissions in the organization
   */
  async listPermissions(
    options?: RequestOptions,
  ): Promise<components.PermissionEntityList> {
    return unwrapAsync(permissionsListPermissions(
      this,
      options,
    ));
  }

  /**
   * Get all permissions for the current user
   *
   * @remarks
   * Get all permissions for the current user
   */
  async listCurrentUserPermissions(
    options?: RequestOptions,
  ): Promise<components.PermissionEntityList> {
    return unwrapAsync(permissionsListCurrentUserPermissions(
      this,
      options,
    ));
  }

  /**
   * Get all permissions for a team
   *
   * @remarks
   * Get all permissions for a team
   */
  async listTeamPermissions(
    options?: RequestOptions,
  ): Promise<components.PermissionEntityList> {
    return unwrapAsync(permissionsListTeamPermissions(
      this,
      options,
    ));
  }
}
