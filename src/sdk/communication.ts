/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { communicationCreateStatusUpdateTemplate } from "../funcs/communicationCreateStatusUpdateTemplate.js";
import { communicationDeleteStatusUpdateTemplate } from "../funcs/communicationDeleteStatusUpdateTemplate.js";
import { communicationGetStatusUpdateTemplate } from "../funcs/communicationGetStatusUpdateTemplate.js";
import { communicationListStatusUpdateTemplates } from "../funcs/communicationListStatusUpdateTemplates.js";
import { communicationUpdateStatusUpdateTemplate } from "../funcs/communicationUpdateStatusUpdateTemplate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Communication extends ClientSDK {
  /**
   * List status update templates
   *
   * @remarks
   * List all status update templates for your organization
   */
  async listStatusUpdateTemplates(
    request: operations.ListStatusUpdateTemplatesRequest,
    options?: RequestOptions,
  ): Promise<components.StatusUpdateTemplateEntity> {
    return unwrapAsync(communicationListStatusUpdateTemplates(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a status update template
   *
   * @remarks
   * Create a status update template for your organization
   */
  async createStatusUpdateTemplate(
    request: components.CreateStatusUpdateTemplate,
    options?: RequestOptions,
  ): Promise<components.StatusUpdateTemplateEntity> {
    return unwrapAsync(communicationCreateStatusUpdateTemplate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a status update template
   *
   * @remarks
   * Get a single status update template by ID
   */
  async getStatusUpdateTemplate(
    request: operations.GetStatusUpdateTemplateRequest,
    options?: RequestOptions,
  ): Promise<components.StatusUpdateTemplateEntity> {
    return unwrapAsync(communicationGetStatusUpdateTemplate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a status update template
   *
   * @remarks
   * Delete a single status update template
   */
  async deleteStatusUpdateTemplate(
    request: operations.DeleteStatusUpdateTemplateRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(communicationDeleteStatusUpdateTemplate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a status update template
   *
   * @remarks
   * Update a single status update template
   */
  async updateStatusUpdateTemplate(
    request: operations.UpdateStatusUpdateTemplateRequest,
    options?: RequestOptions,
  ): Promise<components.StatusUpdateTemplateEntity> {
    return unwrapAsync(communicationUpdateStatusUpdateTemplate(
      this,
      request,
      options,
    ));
  }
}
