/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { servicesCatalogsIngest } from "../funcs/servicesCatalogsIngest.js";
import { servicesCatalogsRefresh } from "../funcs/servicesCatalogsRefresh.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Catalogs extends ClientSDK {
  /**
   * Ingest service catalog data
   *
   * @remarks
   * Accepts catalog data in the configured format and asyncronously processes the data to incorporate changes into service catalog.
   */
  async ingest(
    request: operations.IngestCatalogDataRequest,
    options?: RequestOptions,
  ): Promise<components.ImportsImportEntity> {
    return unwrapAsync(servicesCatalogsIngest(
      this,
      request,
      options,
    ));
  }

  /**
   * Refresh a service catalog
   *
   * @remarks
   * Schedules an async task to re-import catalog info and update catalog data accordingly.
   */
  async refresh(
    request: operations.RefreshCatalogRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(servicesCatalogsRefresh(
      this,
      request,
      options,
    ));
  }
}
