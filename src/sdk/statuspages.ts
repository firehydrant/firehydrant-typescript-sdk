/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { statusPagesCreateEmailSubscriber } from "../funcs/statusPagesCreateEmailSubscriber.js";
import { statusPagesCreateNuncComponentGroup } from "../funcs/statusPagesCreateNuncComponentGroup.js";
import { statusPagesCreateNuncConnection } from "../funcs/statusPagesCreateNuncConnection.js";
import { statusPagesCreateNuncLink } from "../funcs/statusPagesCreateNuncLink.js";
import { statusPagesCreateNuncSubscription } from "../funcs/statusPagesCreateNuncSubscription.js";
import { statusPagesDeleteEmailSubscriber } from "../funcs/statusPagesDeleteEmailSubscriber.js";
import { statusPagesDeleteIncidentStatusPage } from "../funcs/statusPagesDeleteIncidentStatusPage.js";
import { statusPagesDeleteNuncComponentGroup } from "../funcs/statusPagesDeleteNuncComponentGroup.js";
import { statusPagesDeleteNuncConnection } from "../funcs/statusPagesDeleteNuncConnection.js";
import { statusPagesDeleteNuncImage } from "../funcs/statusPagesDeleteNuncImage.js";
import { statusPagesDeleteNuncLink } from "../funcs/statusPagesDeleteNuncLink.js";
import { statusPagesDeleteNuncSubscription } from "../funcs/statusPagesDeleteNuncSubscription.js";
import { statusPagesGetNuncConnection } from "../funcs/statusPagesGetNuncConnection.js";
import { statusPagesListEmailSubscribers } from "../funcs/statusPagesListEmailSubscribers.js";
import { statusPagesListNuncConnections } from "../funcs/statusPagesListNuncConnections.js";
import { statusPagesUpdateNuncComponentGroup } from "../funcs/statusPagesUpdateNuncComponentGroup.js";
import { statusPagesUpdateNuncConnection } from "../funcs/statusPagesUpdateNuncConnection.js";
import { statusPagesUpdateNuncImage } from "../funcs/statusPagesUpdateNuncImage.js";
import { statusPagesUpdateNuncLink } from "../funcs/statusPagesUpdateNuncLink.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class StatusPages extends ClientSDK {
  /**
   * Remove a status page from an incident
   *
   * @remarks
   * Remove a status page incident attached to an incident
   */
  async deleteIncidentStatusPage(
    request: operations.DeleteIncidentStatusPageRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(statusPagesDeleteIncidentStatusPage(
      this,
      request,
      options,
    ));
  }

  /**
   * List status pages
   *
   * @remarks
   * Lists the information displayed as part of your FireHydrant hosted status pages.
   */
  async listNuncConnections(
    options?: RequestOptions,
  ): Promise<components.NuncConnectionEntityPaginated> {
    return unwrapAsync(statusPagesListNuncConnections(
      this,
      options,
    ));
  }

  /**
   * Create a status page
   *
   * @remarks
   * Create a new FireHydrant hosted status page for customer facing statuses.
   */
  async createNuncConnection(
    request: operations.CreateNuncConnectionRequest,
    options?: RequestOptions,
  ): Promise<components.NuncConnectionEntity> {
    return unwrapAsync(statusPagesCreateNuncConnection(
      this,
      request,
      options,
    ));
  }

  /**
   * List status page subscribers
   *
   * @remarks
   * Retrieves the list of subscribers for a status page.
   */
  async listEmailSubscribers(
    request: operations.ListEmailSubscribersRequest,
    options?: RequestOptions,
  ): Promise<components.NuncEmailSubscribersEntity> {
    return unwrapAsync(statusPagesListEmailSubscribers(
      this,
      request,
      options,
    ));
  }

  /**
   * Add subscribers to a status page
   *
   * @remarks
   * Subscribes a comma-separated string of emails to status page updates
   */
  async createEmailSubscriber(
    request: operations.CreateEmailSubscriberRequest,
    options?: RequestOptions,
  ): Promise<components.NuncEmailSubscribersEntity> {
    return unwrapAsync(statusPagesCreateEmailSubscriber(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove subscribers from a status page
   *
   * @remarks
   * Unsubscribes one or more status page subscribers.
   */
  async deleteEmailSubscriber(
    request: operations.DeleteEmailSubscriberRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(statusPagesDeleteEmailSubscriber(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a status page
   *
   * @remarks
   * Retrieve the information displayed as part of your FireHydrant hosted status page.
   */
  async getNuncConnection(
    request: operations.GetNuncConnectionRequest,
    options?: RequestOptions,
  ): Promise<components.NuncConnectionEntity> {
    return unwrapAsync(statusPagesGetNuncConnection(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a status page
   *
   * @remarks
   * Update your company's information and other components in the specified FireHydrant hosted status page.
   */
  async updateNuncConnection(
    request: operations.UpdateNuncConnectionRequest,
    options?: RequestOptions,
  ): Promise<components.NuncConnectionEntity> {
    return unwrapAsync(statusPagesUpdateNuncConnection(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a status page
   *
   * @remarks
   * Delete a FireHydrant hosted status page, stopping updates of your incidents to it.
   */
  async deleteNuncConnection(
    request: operations.DeleteNuncConnectionRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(statusPagesDeleteNuncConnection(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a status page component group
   *
   * @remarks
   * Delete a component group displayed on a FireHydrant status page
   */
  async deleteNuncComponentGroup(
    request: operations.DeleteNuncComponentGroupRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(statusPagesDeleteNuncComponentGroup(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a status page component group
   *
   * @remarks
   * Update a component group to be displayed on a FireHydrant status page
   */
  async updateNuncComponentGroup(
    request: operations.UpdateNuncComponentGroupRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(statusPagesUpdateNuncComponentGroup(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a component group for a status page
   *
   * @remarks
   * Add a component group to be displayed on a FireHydrant status page
   */
  async createNuncComponentGroup(
    request: operations.CreateNuncComponentGroupRequest,
    options?: RequestOptions,
  ): Promise<components.NuncConnectionEntity> {
    return unwrapAsync(statusPagesCreateNuncComponentGroup(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a status page link
   *
   * @remarks
   * Delete a link displayed on a FireHydrant status page
   */
  async deleteNuncLink(
    request: operations.DeleteNuncLinkRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(statusPagesDeleteNuncLink(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a status page link
   *
   * @remarks
   * Update a link to be displayed on a FireHydrant status page
   */
  async updateNuncLink(
    request: operations.UpdateNuncLinkRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(statusPagesUpdateNuncLink(
      this,
      request,
      options,
    ));
  }

  /**
   * Add link to a status page
   *
   * @remarks
   * Add a link to be displayed on a FireHydrant status page
   */
  async createNuncLink(
    request: operations.CreateNuncLinkRequest,
    options?: RequestOptions,
  ): Promise<components.NuncConnectionEntity> {
    return unwrapAsync(statusPagesCreateNuncLink(
      this,
      request,
      options,
    ));
  }

  /**
   * Upload an image for a status page
   *
   * @remarks
   * Add or replace an image attached to a FireHydrant status page
   */
  async updateNuncImage(
    request: operations.UpdateNuncImageRequest,
    options?: RequestOptions,
  ): Promise<components.NuncConnectionEntity> {
    return unwrapAsync(statusPagesUpdateNuncImage(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete an image from a status page
   *
   * @remarks
   * Delete an image attached to a FireHydrant status page
   */
  async deleteNuncImage(
    request: operations.DeleteNuncImageRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(statusPagesDeleteNuncImage(
      this,
      request,
      options,
    ));
  }

  /**
   * Unsubscribe from status page notifications
   *
   * @remarks
   * Unsubscribe from status page updates
   */
  async deleteNuncSubscription(
    request: operations.DeleteNuncSubscriptionRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(statusPagesDeleteNuncSubscription(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a status page subscription
   *
   * @remarks
   * Subscribe to status page updates
   */
  async createNuncSubscription(
    request: components.CreateNuncSubscription,
    options?: RequestOptions,
  ): Promise<components.NuncNuncSubscription> {
    return unwrapAsync(statusPagesCreateNuncSubscription(
      this,
      request,
      options,
    ));
  }
}
