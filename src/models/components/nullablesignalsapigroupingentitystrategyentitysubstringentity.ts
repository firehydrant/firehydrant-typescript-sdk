/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity = {
  fieldName?: string | null | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$inboundSchema:
  z.ZodType<
    NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    field_name: z.nullable(z.string()).optional(),
    value: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "field_name": "fieldName",
    });
  });

/** @internal */
export type NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$Outbound =
  {
    field_name?: string | null | undefined;
    value?: string | null | undefined;
  };

/** @internal */
export const NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$outboundSchema:
  z.ZodType<
    NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$Outbound,
    z.ZodTypeDef,
    NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity
  > = z.object({
    fieldName: z.nullable(z.string()).optional(),
    value: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      fieldName: "field_name",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$ {
  /** @deprecated use `NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$inboundSchema;
  /** @deprecated use `NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$outboundSchema;
  /** @deprecated use `NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$Outbound` instead. */
  export type Outbound =
    NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$Outbound;
}

export function nullableSignalsAPIGroupingEntityStrategyEntitySubstringEntityToJSON(
  nullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity:
    NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity,
): string {
  return JSON.stringify(
    NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$outboundSchema
      .parse(nullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity),
  );
}

export function nullableSignalsAPIGroupingEntityStrategyEntitySubstringEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity' from JSON`,
  );
}
