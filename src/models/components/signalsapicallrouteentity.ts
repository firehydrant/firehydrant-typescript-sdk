/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NullableSignalsAPICallRouteStepEntity,
  NullableSignalsAPICallRouteStepEntity$inboundSchema,
  NullableSignalsAPICallRouteStepEntity$Outbound,
  NullableSignalsAPICallRouteStepEntity$outboundSchema,
} from "./nullablesignalsapicallroutestepentity.js";
import {
  NullableSignalsAPITargetEntity,
  NullableSignalsAPITargetEntity$inboundSchema,
  NullableSignalsAPITargetEntity$Outbound,
  NullableSignalsAPITargetEntity$outboundSchema,
} from "./nullablesignalsapitargetentity.js";

export const SignalsAPICallRouteEntityRoutingMode = {
  RoutingModeTakeMessage: "ROUTING_MODE_TAKE_MESSAGE",
  RoutingModeDirectConnect: "ROUTING_MODE_DIRECT_CONNECT",
} as const;
export type SignalsAPICallRouteEntityRoutingMode = ClosedEnum<
  typeof SignalsAPICallRouteEntityRoutingMode
>;

export const SignalsAPICallRouteEntityConnectMode = {
  ConnectModeConference: "CONNECT_MODE_CONFERENCE",
  ConnectModeDirectDial: "CONNECT_MODE_DIRECT_DIAL",
} as const;
export type SignalsAPICallRouteEntityConnectMode = ClosedEnum<
  typeof SignalsAPICallRouteEntityConnectMode
>;

/**
 * Signals_API_CallRouteEntity model
 */
export type SignalsAPICallRouteEntity = {
  id?: string | null | undefined;
  name?: string | null | undefined;
  description?: string | null | undefined;
  phoneNumber?: string | null | undefined;
  greetingMessage?: string | null | undefined;
  routingMode?: SignalsAPICallRouteEntityRoutingMode | null | undefined;
  connectMode?: SignalsAPICallRouteEntityConnectMode | null | undefined;
  steps?: NullableSignalsAPICallRouteStepEntity | null | undefined;
  target?: NullableSignalsAPITargetEntity | null | undefined;
};

/** @internal */
export const SignalsAPICallRouteEntityRoutingMode$inboundSchema:
  z.ZodNativeEnum<typeof SignalsAPICallRouteEntityRoutingMode> = z.nativeEnum(
    SignalsAPICallRouteEntityRoutingMode,
  );

/** @internal */
export const SignalsAPICallRouteEntityRoutingMode$outboundSchema:
  z.ZodNativeEnum<typeof SignalsAPICallRouteEntityRoutingMode> =
    SignalsAPICallRouteEntityRoutingMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SignalsAPICallRouteEntityRoutingMode$ {
  /** @deprecated use `SignalsAPICallRouteEntityRoutingMode$inboundSchema` instead. */
  export const inboundSchema =
    SignalsAPICallRouteEntityRoutingMode$inboundSchema;
  /** @deprecated use `SignalsAPICallRouteEntityRoutingMode$outboundSchema` instead. */
  export const outboundSchema =
    SignalsAPICallRouteEntityRoutingMode$outboundSchema;
}

/** @internal */
export const SignalsAPICallRouteEntityConnectMode$inboundSchema:
  z.ZodNativeEnum<typeof SignalsAPICallRouteEntityConnectMode> = z.nativeEnum(
    SignalsAPICallRouteEntityConnectMode,
  );

/** @internal */
export const SignalsAPICallRouteEntityConnectMode$outboundSchema:
  z.ZodNativeEnum<typeof SignalsAPICallRouteEntityConnectMode> =
    SignalsAPICallRouteEntityConnectMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SignalsAPICallRouteEntityConnectMode$ {
  /** @deprecated use `SignalsAPICallRouteEntityConnectMode$inboundSchema` instead. */
  export const inboundSchema =
    SignalsAPICallRouteEntityConnectMode$inboundSchema;
  /** @deprecated use `SignalsAPICallRouteEntityConnectMode$outboundSchema` instead. */
  export const outboundSchema =
    SignalsAPICallRouteEntityConnectMode$outboundSchema;
}

/** @internal */
export const SignalsAPICallRouteEntity$inboundSchema: z.ZodType<
  SignalsAPICallRouteEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  phone_number: z.nullable(z.string()).optional(),
  greeting_message: z.nullable(z.string()).optional(),
  routing_mode: z.nullable(SignalsAPICallRouteEntityRoutingMode$inboundSchema)
    .optional(),
  connect_mode: z.nullable(SignalsAPICallRouteEntityConnectMode$inboundSchema)
    .optional(),
  steps: z.nullable(NullableSignalsAPICallRouteStepEntity$inboundSchema)
    .optional(),
  target: z.nullable(NullableSignalsAPITargetEntity$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "phone_number": "phoneNumber",
    "greeting_message": "greetingMessage",
    "routing_mode": "routingMode",
    "connect_mode": "connectMode",
  });
});

/** @internal */
export type SignalsAPICallRouteEntity$Outbound = {
  id?: string | null | undefined;
  name?: string | null | undefined;
  description?: string | null | undefined;
  phone_number?: string | null | undefined;
  greeting_message?: string | null | undefined;
  routing_mode?: string | null | undefined;
  connect_mode?: string | null | undefined;
  steps?: NullableSignalsAPICallRouteStepEntity$Outbound | null | undefined;
  target?: NullableSignalsAPITargetEntity$Outbound | null | undefined;
};

/** @internal */
export const SignalsAPICallRouteEntity$outboundSchema: z.ZodType<
  SignalsAPICallRouteEntity$Outbound,
  z.ZodTypeDef,
  SignalsAPICallRouteEntity
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  phoneNumber: z.nullable(z.string()).optional(),
  greetingMessage: z.nullable(z.string()).optional(),
  routingMode: z.nullable(SignalsAPICallRouteEntityRoutingMode$outboundSchema)
    .optional(),
  connectMode: z.nullable(SignalsAPICallRouteEntityConnectMode$outboundSchema)
    .optional(),
  steps: z.nullable(NullableSignalsAPICallRouteStepEntity$outboundSchema)
    .optional(),
  target: z.nullable(NullableSignalsAPITargetEntity$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    phoneNumber: "phone_number",
    greetingMessage: "greeting_message",
    routingMode: "routing_mode",
    connectMode: "connect_mode",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SignalsAPICallRouteEntity$ {
  /** @deprecated use `SignalsAPICallRouteEntity$inboundSchema` instead. */
  export const inboundSchema = SignalsAPICallRouteEntity$inboundSchema;
  /** @deprecated use `SignalsAPICallRouteEntity$outboundSchema` instead. */
  export const outboundSchema = SignalsAPICallRouteEntity$outboundSchema;
  /** @deprecated use `SignalsAPICallRouteEntity$Outbound` instead. */
  export type Outbound = SignalsAPICallRouteEntity$Outbound;
}

export function signalsAPICallRouteEntityToJSON(
  signalsAPICallRouteEntity: SignalsAPICallRouteEntity,
): string {
  return JSON.stringify(
    SignalsAPICallRouteEntity$outboundSchema.parse(signalsAPICallRouteEntity),
  );
}

export function signalsAPICallRouteEntityFromJSON(
  jsonString: string,
): SafeParseResult<SignalsAPICallRouteEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SignalsAPICallRouteEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SignalsAPICallRouteEntity' from JSON`,
  );
}
