/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * InfrastructureSearchEntity model
 */
export type InfrastructureSearchEntity = {
  type?: string | undefined;
  infrastructure?: string | undefined;
};

/** @internal */
export const InfrastructureSearchEntity$inboundSchema: z.ZodType<
  InfrastructureSearchEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.string().optional(),
  infrastructure: z.string().optional(),
});

/** @internal */
export type InfrastructureSearchEntity$Outbound = {
  type?: string | undefined;
  infrastructure?: string | undefined;
};

/** @internal */
export const InfrastructureSearchEntity$outboundSchema: z.ZodType<
  InfrastructureSearchEntity$Outbound,
  z.ZodTypeDef,
  InfrastructureSearchEntity
> = z.object({
  type: z.string().optional(),
  infrastructure: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InfrastructureSearchEntity$ {
  /** @deprecated use `InfrastructureSearchEntity$inboundSchema` instead. */
  export const inboundSchema = InfrastructureSearchEntity$inboundSchema;
  /** @deprecated use `InfrastructureSearchEntity$outboundSchema` instead. */
  export const outboundSchema = InfrastructureSearchEntity$outboundSchema;
  /** @deprecated use `InfrastructureSearchEntity$Outbound` instead. */
  export type Outbound = InfrastructureSearchEntity$Outbound;
}

export function infrastructureSearchEntityToJSON(
  infrastructureSearchEntity: InfrastructureSearchEntity,
): string {
  return JSON.stringify(
    InfrastructureSearchEntity$outboundSchema.parse(infrastructureSearchEntity),
  );
}

export function infrastructureSearchEntityFromJSON(
  jsonString: string,
): SafeParseResult<InfrastructureSearchEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InfrastructureSearchEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InfrastructureSearchEntity' from JSON`,
  );
}
