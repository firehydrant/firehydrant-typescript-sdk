/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NullableIncidentsConferenceBridgeEntity,
  NullableIncidentsConferenceBridgeEntity$inboundSchema,
  NullableIncidentsConferenceBridgeEntity$Outbound,
  NullableIncidentsConferenceBridgeEntity$outboundSchema,
} from "./nullableincidentsconferencebridgeentity.js";
import {
  NullableRulesRuleEntity,
  NullableRulesRuleEntity$inboundSchema,
  NullableRulesRuleEntity$Outbound,
  NullableRulesRuleEntity$outboundSchema,
} from "./nullablerulesruleentity.js";
import {
  NullableRunbooksExecutionStepExecutionEntity,
  NullableRunbooksExecutionStepExecutionEntity$inboundSchema,
  NullableRunbooksExecutionStepExecutionEntity$Outbound,
  NullableRunbooksExecutionStepExecutionEntity$outboundSchema,
} from "./nullablerunbooksexecutionstepexecutionentity.js";

export type NullableRunbooksExecutionStepEntityConfig = {};

export type NullableRunbooksExecutionStepEntityStepElement = {};

export type NullableRunbooksExecutionStepEntity = {
  id?: string | null | undefined;
  name?: string | null | undefined;
  actionSlug?: string | null | undefined;
  actionType?: string | null | undefined;
  integrationName?: string | null | undefined;
  integrationSlug?: string | null | undefined;
  automatic?: boolean | null | undefined;
  config?: NullableRunbooksExecutionStepEntityConfig | null | undefined;
  stepElements?:
    | Array<NullableRunbooksExecutionStepEntityStepElement>
    | null
    | undefined;
  executable?: boolean | null | undefined;
  repeats?: boolean | null | undefined;
  /**
   * ISO8601 formatted duration string
   */
  repeatsDuration?: string | null | undefined;
  repeatsAt?: Date | null | undefined;
  hasBeenRerun?: boolean | null | undefined;
  hasBeenRetried?: boolean | null | undefined;
  execution?: NullableRunbooksExecutionStepExecutionEntity | null | undefined;
  repeatable?: boolean | null | undefined;
  conferenceBridge?: NullableIncidentsConferenceBridgeEntity | null | undefined;
  rule?: NullableRulesRuleEntity | null | undefined;
};

/** @internal */
export const NullableRunbooksExecutionStepEntityConfig$inboundSchema: z.ZodType<
  NullableRunbooksExecutionStepEntityConfig,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type NullableRunbooksExecutionStepEntityConfig$Outbound = {};

/** @internal */
export const NullableRunbooksExecutionStepEntityConfig$outboundSchema:
  z.ZodType<
    NullableRunbooksExecutionStepEntityConfig$Outbound,
    z.ZodTypeDef,
    NullableRunbooksExecutionStepEntityConfig
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableRunbooksExecutionStepEntityConfig$ {
  /** @deprecated use `NullableRunbooksExecutionStepEntityConfig$inboundSchema` instead. */
  export const inboundSchema =
    NullableRunbooksExecutionStepEntityConfig$inboundSchema;
  /** @deprecated use `NullableRunbooksExecutionStepEntityConfig$outboundSchema` instead. */
  export const outboundSchema =
    NullableRunbooksExecutionStepEntityConfig$outboundSchema;
  /** @deprecated use `NullableRunbooksExecutionStepEntityConfig$Outbound` instead. */
  export type Outbound = NullableRunbooksExecutionStepEntityConfig$Outbound;
}

export function nullableRunbooksExecutionStepEntityConfigToJSON(
  nullableRunbooksExecutionStepEntityConfig:
    NullableRunbooksExecutionStepEntityConfig,
): string {
  return JSON.stringify(
    NullableRunbooksExecutionStepEntityConfig$outboundSchema.parse(
      nullableRunbooksExecutionStepEntityConfig,
    ),
  );
}

export function nullableRunbooksExecutionStepEntityConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableRunbooksExecutionStepEntityConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableRunbooksExecutionStepEntityConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'NullableRunbooksExecutionStepEntityConfig' from JSON`,
  );
}

/** @internal */
export const NullableRunbooksExecutionStepEntityStepElement$inboundSchema:
  z.ZodType<
    NullableRunbooksExecutionStepEntityStepElement,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type NullableRunbooksExecutionStepEntityStepElement$Outbound = {};

/** @internal */
export const NullableRunbooksExecutionStepEntityStepElement$outboundSchema:
  z.ZodType<
    NullableRunbooksExecutionStepEntityStepElement$Outbound,
    z.ZodTypeDef,
    NullableRunbooksExecutionStepEntityStepElement
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableRunbooksExecutionStepEntityStepElement$ {
  /** @deprecated use `NullableRunbooksExecutionStepEntityStepElement$inboundSchema` instead. */
  export const inboundSchema =
    NullableRunbooksExecutionStepEntityStepElement$inboundSchema;
  /** @deprecated use `NullableRunbooksExecutionStepEntityStepElement$outboundSchema` instead. */
  export const outboundSchema =
    NullableRunbooksExecutionStepEntityStepElement$outboundSchema;
  /** @deprecated use `NullableRunbooksExecutionStepEntityStepElement$Outbound` instead. */
  export type Outbound =
    NullableRunbooksExecutionStepEntityStepElement$Outbound;
}

export function nullableRunbooksExecutionStepEntityStepElementToJSON(
  nullableRunbooksExecutionStepEntityStepElement:
    NullableRunbooksExecutionStepEntityStepElement,
): string {
  return JSON.stringify(
    NullableRunbooksExecutionStepEntityStepElement$outboundSchema.parse(
      nullableRunbooksExecutionStepEntityStepElement,
    ),
  );
}

export function nullableRunbooksExecutionStepEntityStepElementFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableRunbooksExecutionStepEntityStepElement,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableRunbooksExecutionStepEntityStepElement$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'NullableRunbooksExecutionStepEntityStepElement' from JSON`,
  );
}

/** @internal */
export const NullableRunbooksExecutionStepEntity$inboundSchema: z.ZodType<
  NullableRunbooksExecutionStepEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  action_slug: z.nullable(z.string()).optional(),
  action_type: z.nullable(z.string()).optional(),
  integration_name: z.nullable(z.string()).optional(),
  integration_slug: z.nullable(z.string()).optional(),
  automatic: z.nullable(z.boolean()).optional(),
  config: z.nullable(
    z.lazy(() => NullableRunbooksExecutionStepEntityConfig$inboundSchema),
  ).optional(),
  step_elements: z.nullable(
    z.array(z.lazy(() =>
      NullableRunbooksExecutionStepEntityStepElement$inboundSchema
    )),
  ).optional(),
  executable: z.nullable(z.boolean()).optional(),
  repeats: z.nullable(z.boolean()).optional(),
  repeats_duration: z.nullable(z.string()).optional(),
  repeats_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  has_been_rerun: z.nullable(z.boolean()).optional(),
  has_been_retried: z.nullable(z.boolean()).optional(),
  execution: z.nullable(
    NullableRunbooksExecutionStepExecutionEntity$inboundSchema,
  ).optional(),
  repeatable: z.nullable(z.boolean()).optional(),
  conference_bridge: z.nullable(
    NullableIncidentsConferenceBridgeEntity$inboundSchema,
  ).optional(),
  rule: z.nullable(NullableRulesRuleEntity$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "action_slug": "actionSlug",
    "action_type": "actionType",
    "integration_name": "integrationName",
    "integration_slug": "integrationSlug",
    "step_elements": "stepElements",
    "repeats_duration": "repeatsDuration",
    "repeats_at": "repeatsAt",
    "has_been_rerun": "hasBeenRerun",
    "has_been_retried": "hasBeenRetried",
    "conference_bridge": "conferenceBridge",
  });
});

/** @internal */
export type NullableRunbooksExecutionStepEntity$Outbound = {
  id?: string | null | undefined;
  name?: string | null | undefined;
  action_slug?: string | null | undefined;
  action_type?: string | null | undefined;
  integration_name?: string | null | undefined;
  integration_slug?: string | null | undefined;
  automatic?: boolean | null | undefined;
  config?:
    | NullableRunbooksExecutionStepEntityConfig$Outbound
    | null
    | undefined;
  step_elements?:
    | Array<NullableRunbooksExecutionStepEntityStepElement$Outbound>
    | null
    | undefined;
  executable?: boolean | null | undefined;
  repeats?: boolean | null | undefined;
  repeats_duration?: string | null | undefined;
  repeats_at?: string | null | undefined;
  has_been_rerun?: boolean | null | undefined;
  has_been_retried?: boolean | null | undefined;
  execution?:
    | NullableRunbooksExecutionStepExecutionEntity$Outbound
    | null
    | undefined;
  repeatable?: boolean | null | undefined;
  conference_bridge?:
    | NullableIncidentsConferenceBridgeEntity$Outbound
    | null
    | undefined;
  rule?: NullableRulesRuleEntity$Outbound | null | undefined;
};

/** @internal */
export const NullableRunbooksExecutionStepEntity$outboundSchema: z.ZodType<
  NullableRunbooksExecutionStepEntity$Outbound,
  z.ZodTypeDef,
  NullableRunbooksExecutionStepEntity
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  actionSlug: z.nullable(z.string()).optional(),
  actionType: z.nullable(z.string()).optional(),
  integrationName: z.nullable(z.string()).optional(),
  integrationSlug: z.nullable(z.string()).optional(),
  automatic: z.nullable(z.boolean()).optional(),
  config: z.nullable(
    z.lazy(() => NullableRunbooksExecutionStepEntityConfig$outboundSchema),
  ).optional(),
  stepElements: z.nullable(
    z.array(z.lazy(() =>
      NullableRunbooksExecutionStepEntityStepElement$outboundSchema
    )),
  ).optional(),
  executable: z.nullable(z.boolean()).optional(),
  repeats: z.nullable(z.boolean()).optional(),
  repeatsDuration: z.nullable(z.string()).optional(),
  repeatsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  hasBeenRerun: z.nullable(z.boolean()).optional(),
  hasBeenRetried: z.nullable(z.boolean()).optional(),
  execution: z.nullable(
    NullableRunbooksExecutionStepExecutionEntity$outboundSchema,
  ).optional(),
  repeatable: z.nullable(z.boolean()).optional(),
  conferenceBridge: z.nullable(
    NullableIncidentsConferenceBridgeEntity$outboundSchema,
  ).optional(),
  rule: z.nullable(NullableRulesRuleEntity$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    actionSlug: "action_slug",
    actionType: "action_type",
    integrationName: "integration_name",
    integrationSlug: "integration_slug",
    stepElements: "step_elements",
    repeatsDuration: "repeats_duration",
    repeatsAt: "repeats_at",
    hasBeenRerun: "has_been_rerun",
    hasBeenRetried: "has_been_retried",
    conferenceBridge: "conference_bridge",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableRunbooksExecutionStepEntity$ {
  /** @deprecated use `NullableRunbooksExecutionStepEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableRunbooksExecutionStepEntity$inboundSchema;
  /** @deprecated use `NullableRunbooksExecutionStepEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableRunbooksExecutionStepEntity$outboundSchema;
  /** @deprecated use `NullableRunbooksExecutionStepEntity$Outbound` instead. */
  export type Outbound = NullableRunbooksExecutionStepEntity$Outbound;
}

export function nullableRunbooksExecutionStepEntityToJSON(
  nullableRunbooksExecutionStepEntity: NullableRunbooksExecutionStepEntity,
): string {
  return JSON.stringify(
    NullableRunbooksExecutionStepEntity$outboundSchema.parse(
      nullableRunbooksExecutionStepEntity,
    ),
  );
}

export function nullableRunbooksExecutionStepEntityFromJSON(
  jsonString: string,
): SafeParseResult<NullableRunbooksExecutionStepEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      NullableRunbooksExecutionStepEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableRunbooksExecutionStepEntity' from JSON`,
  );
}
