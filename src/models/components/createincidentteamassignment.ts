/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Assign a team for this incident
 */
export type CreateIncidentTeamAssignment = {
  /**
   * The team ID to associate to the incident
   */
  teamId: string;
};

/** @internal */
export const CreateIncidentTeamAssignment$inboundSchema: z.ZodType<
  CreateIncidentTeamAssignment,
  z.ZodTypeDef,
  unknown
> = z.object({
  team_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "team_id": "teamId",
  });
});

/** @internal */
export type CreateIncidentTeamAssignment$Outbound = {
  team_id: string;
};

/** @internal */
export const CreateIncidentTeamAssignment$outboundSchema: z.ZodType<
  CreateIncidentTeamAssignment$Outbound,
  z.ZodTypeDef,
  CreateIncidentTeamAssignment
> = z.object({
  teamId: z.string(),
}).transform((v) => {
  return remap$(v, {
    teamId: "team_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateIncidentTeamAssignment$ {
  /** @deprecated use `CreateIncidentTeamAssignment$inboundSchema` instead. */
  export const inboundSchema = CreateIncidentTeamAssignment$inboundSchema;
  /** @deprecated use `CreateIncidentTeamAssignment$outboundSchema` instead. */
  export const outboundSchema = CreateIncidentTeamAssignment$outboundSchema;
  /** @deprecated use `CreateIncidentTeamAssignment$Outbound` instead. */
  export type Outbound = CreateIncidentTeamAssignment$Outbound;
}

export function createIncidentTeamAssignmentToJSON(
  createIncidentTeamAssignment: CreateIncidentTeamAssignment,
): string {
  return JSON.stringify(
    CreateIncidentTeamAssignment$outboundSchema.parse(
      createIncidentTeamAssignment,
    ),
  );
}

export function createIncidentTeamAssignmentFromJSON(
  jsonString: string,
): SafeParseResult<CreateIncidentTeamAssignment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateIncidentTeamAssignment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateIncidentTeamAssignment' from JSON`,
  );
}
