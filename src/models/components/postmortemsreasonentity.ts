/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ConversationsAPIEntitiesReference,
  ConversationsAPIEntitiesReference$inboundSchema,
  ConversationsAPIEntitiesReference$Outbound,
  ConversationsAPIEntitiesReference$outboundSchema,
} from "./conversationsapientitiesreference.js";
import {
  NullableAuthorEntity,
  NullableAuthorEntity$inboundSchema,
  NullableAuthorEntity$Outbound,
  NullableAuthorEntity$outboundSchema,
} from "./nullableauthorentity.js";

/**
 * PostMortems_ReasonEntity model
 */
export type PostMortemsReasonEntity = {
  id?: string | null | undefined;
  summary?: string | null | undefined;
  position?: number | null | undefined;
  createdBy?: NullableAuthorEntity | null | undefined;
  conversations?: Array<ConversationsAPIEntitiesReference> | null | undefined;
};

/** @internal */
export const PostMortemsReasonEntity$inboundSchema: z.ZodType<
  PostMortemsReasonEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  summary: z.nullable(z.string()).optional(),
  position: z.nullable(z.number().int()).optional(),
  created_by: z.nullable(NullableAuthorEntity$inboundSchema).optional(),
  conversations: z.nullable(
    z.array(ConversationsAPIEntitiesReference$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "created_by": "createdBy",
  });
});

/** @internal */
export type PostMortemsReasonEntity$Outbound = {
  id?: string | null | undefined;
  summary?: string | null | undefined;
  position?: number | null | undefined;
  created_by?: NullableAuthorEntity$Outbound | null | undefined;
  conversations?:
    | Array<ConversationsAPIEntitiesReference$Outbound>
    | null
    | undefined;
};

/** @internal */
export const PostMortemsReasonEntity$outboundSchema: z.ZodType<
  PostMortemsReasonEntity$Outbound,
  z.ZodTypeDef,
  PostMortemsReasonEntity
> = z.object({
  id: z.nullable(z.string()).optional(),
  summary: z.nullable(z.string()).optional(),
  position: z.nullable(z.number().int()).optional(),
  createdBy: z.nullable(NullableAuthorEntity$outboundSchema).optional(),
  conversations: z.nullable(
    z.array(ConversationsAPIEntitiesReference$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    createdBy: "created_by",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostMortemsReasonEntity$ {
  /** @deprecated use `PostMortemsReasonEntity$inboundSchema` instead. */
  export const inboundSchema = PostMortemsReasonEntity$inboundSchema;
  /** @deprecated use `PostMortemsReasonEntity$outboundSchema` instead. */
  export const outboundSchema = PostMortemsReasonEntity$outboundSchema;
  /** @deprecated use `PostMortemsReasonEntity$Outbound` instead. */
  export type Outbound = PostMortemsReasonEntity$Outbound;
}

export function postMortemsReasonEntityToJSON(
  postMortemsReasonEntity: PostMortemsReasonEntity,
): string {
  return JSON.stringify(
    PostMortemsReasonEntity$outboundSchema.parse(postMortemsReasonEntity),
  );
}

export function postMortemsReasonEntityFromJSON(
  jsonString: string,
): SafeParseResult<PostMortemsReasonEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostMortemsReasonEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostMortemsReasonEntity' from JSON`,
  );
}
