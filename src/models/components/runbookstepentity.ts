/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NullableEmptyVotesEntity,
  NullableEmptyVotesEntity$inboundSchema,
  NullableEmptyVotesEntity$Outbound,
  NullableEmptyVotesEntity$outboundSchema,
} from "./nullableemptyvotesentity.js";
import {
  NullableRulesRuleEntity,
  NullableRulesRuleEntity$inboundSchema,
  NullableRulesRuleEntity$Outbound,
  NullableRulesRuleEntity$outboundSchema,
} from "./nullablerulesruleentity.js";
import {
  NullableRunbooksActionsEntity,
  NullableRunbooksActionsEntity$inboundSchema,
  NullableRunbooksActionsEntity$Outbound,
  NullableRunbooksActionsEntity$outboundSchema,
} from "./nullablerunbooksactionsentity.js";

/**
 * An unstructured object of key/value pairs describing the config settings for the step.
 */
export type RunbookStepEntityConfig = {};

export type ActionElement = {};

export type RunbookStepEntityStepElement = {};

export type RunbookStepEntity = {
  name?: string | null | undefined;
  actionId?: string | null | undefined;
  stepId?: string | null | undefined;
  /**
   * An unstructured object of key/value pairs describing the config settings for the step.
   */
  config?: RunbookStepEntityConfig | null | undefined;
  /**
   * A list of action elements
   */
  actionElements?: Array<ActionElement> | null | undefined;
  /**
   * A list of step elements
   */
  stepElements?: Array<RunbookStepEntityStepElement> | null | undefined;
  automatic?: boolean | null | undefined;
  delayDuration?: string | null | undefined;
  action?: NullableRunbooksActionsEntity | null | undefined;
  reruns?: boolean | null | undefined;
  repeats?: boolean | null | undefined;
  repeatsDuration?: string | null | undefined;
  votes?: NullableEmptyVotesEntity | null | undefined;
  rule?: NullableRulesRuleEntity | null | undefined;
};

/** @internal */
export const RunbookStepEntityConfig$inboundSchema: z.ZodType<
  RunbookStepEntityConfig,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type RunbookStepEntityConfig$Outbound = {};

/** @internal */
export const RunbookStepEntityConfig$outboundSchema: z.ZodType<
  RunbookStepEntityConfig$Outbound,
  z.ZodTypeDef,
  RunbookStepEntityConfig
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbookStepEntityConfig$ {
  /** @deprecated use `RunbookStepEntityConfig$inboundSchema` instead. */
  export const inboundSchema = RunbookStepEntityConfig$inboundSchema;
  /** @deprecated use `RunbookStepEntityConfig$outboundSchema` instead. */
  export const outboundSchema = RunbookStepEntityConfig$outboundSchema;
  /** @deprecated use `RunbookStepEntityConfig$Outbound` instead. */
  export type Outbound = RunbookStepEntityConfig$Outbound;
}

export function runbookStepEntityConfigToJSON(
  runbookStepEntityConfig: RunbookStepEntityConfig,
): string {
  return JSON.stringify(
    RunbookStepEntityConfig$outboundSchema.parse(runbookStepEntityConfig),
  );
}

export function runbookStepEntityConfigFromJSON(
  jsonString: string,
): SafeParseResult<RunbookStepEntityConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunbookStepEntityConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunbookStepEntityConfig' from JSON`,
  );
}

/** @internal */
export const ActionElement$inboundSchema: z.ZodType<
  ActionElement,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ActionElement$Outbound = {};

/** @internal */
export const ActionElement$outboundSchema: z.ZodType<
  ActionElement$Outbound,
  z.ZodTypeDef,
  ActionElement
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActionElement$ {
  /** @deprecated use `ActionElement$inboundSchema` instead. */
  export const inboundSchema = ActionElement$inboundSchema;
  /** @deprecated use `ActionElement$outboundSchema` instead. */
  export const outboundSchema = ActionElement$outboundSchema;
  /** @deprecated use `ActionElement$Outbound` instead. */
  export type Outbound = ActionElement$Outbound;
}

export function actionElementToJSON(actionElement: ActionElement): string {
  return JSON.stringify(ActionElement$outboundSchema.parse(actionElement));
}

export function actionElementFromJSON(
  jsonString: string,
): SafeParseResult<ActionElement, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ActionElement$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ActionElement' from JSON`,
  );
}

/** @internal */
export const RunbookStepEntityStepElement$inboundSchema: z.ZodType<
  RunbookStepEntityStepElement,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type RunbookStepEntityStepElement$Outbound = {};

/** @internal */
export const RunbookStepEntityStepElement$outboundSchema: z.ZodType<
  RunbookStepEntityStepElement$Outbound,
  z.ZodTypeDef,
  RunbookStepEntityStepElement
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbookStepEntityStepElement$ {
  /** @deprecated use `RunbookStepEntityStepElement$inboundSchema` instead. */
  export const inboundSchema = RunbookStepEntityStepElement$inboundSchema;
  /** @deprecated use `RunbookStepEntityStepElement$outboundSchema` instead. */
  export const outboundSchema = RunbookStepEntityStepElement$outboundSchema;
  /** @deprecated use `RunbookStepEntityStepElement$Outbound` instead. */
  export type Outbound = RunbookStepEntityStepElement$Outbound;
}

export function runbookStepEntityStepElementToJSON(
  runbookStepEntityStepElement: RunbookStepEntityStepElement,
): string {
  return JSON.stringify(
    RunbookStepEntityStepElement$outboundSchema.parse(
      runbookStepEntityStepElement,
    ),
  );
}

export function runbookStepEntityStepElementFromJSON(
  jsonString: string,
): SafeParseResult<RunbookStepEntityStepElement, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunbookStepEntityStepElement$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunbookStepEntityStepElement' from JSON`,
  );
}

/** @internal */
export const RunbookStepEntity$inboundSchema: z.ZodType<
  RunbookStepEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.nullable(z.string()).optional(),
  action_id: z.nullable(z.string()).optional(),
  step_id: z.nullable(z.string()).optional(),
  config: z.nullable(z.lazy(() => RunbookStepEntityConfig$inboundSchema))
    .optional(),
  action_elements: z.nullable(
    z.array(z.lazy(() => ActionElement$inboundSchema)),
  ).optional(),
  step_elements: z.nullable(
    z.array(z.lazy(() => RunbookStepEntityStepElement$inboundSchema)),
  ).optional(),
  automatic: z.nullable(z.boolean()).optional(),
  delay_duration: z.nullable(z.string()).optional(),
  action: z.nullable(NullableRunbooksActionsEntity$inboundSchema).optional(),
  reruns: z.nullable(z.boolean()).optional(),
  repeats: z.nullable(z.boolean()).optional(),
  repeats_duration: z.nullable(z.string()).optional(),
  votes: z.nullable(NullableEmptyVotesEntity$inboundSchema).optional(),
  rule: z.nullable(NullableRulesRuleEntity$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "action_id": "actionId",
    "step_id": "stepId",
    "action_elements": "actionElements",
    "step_elements": "stepElements",
    "delay_duration": "delayDuration",
    "repeats_duration": "repeatsDuration",
  });
});

/** @internal */
export type RunbookStepEntity$Outbound = {
  name?: string | null | undefined;
  action_id?: string | null | undefined;
  step_id?: string | null | undefined;
  config?: RunbookStepEntityConfig$Outbound | null | undefined;
  action_elements?: Array<ActionElement$Outbound> | null | undefined;
  step_elements?:
    | Array<RunbookStepEntityStepElement$Outbound>
    | null
    | undefined;
  automatic?: boolean | null | undefined;
  delay_duration?: string | null | undefined;
  action?: NullableRunbooksActionsEntity$Outbound | null | undefined;
  reruns?: boolean | null | undefined;
  repeats?: boolean | null | undefined;
  repeats_duration?: string | null | undefined;
  votes?: NullableEmptyVotesEntity$Outbound | null | undefined;
  rule?: NullableRulesRuleEntity$Outbound | null | undefined;
};

/** @internal */
export const RunbookStepEntity$outboundSchema: z.ZodType<
  RunbookStepEntity$Outbound,
  z.ZodTypeDef,
  RunbookStepEntity
> = z.object({
  name: z.nullable(z.string()).optional(),
  actionId: z.nullable(z.string()).optional(),
  stepId: z.nullable(z.string()).optional(),
  config: z.nullable(z.lazy(() => RunbookStepEntityConfig$outboundSchema))
    .optional(),
  actionElements: z.nullable(
    z.array(z.lazy(() => ActionElement$outboundSchema)),
  ).optional(),
  stepElements: z.nullable(
    z.array(z.lazy(() => RunbookStepEntityStepElement$outboundSchema)),
  ).optional(),
  automatic: z.nullable(z.boolean()).optional(),
  delayDuration: z.nullable(z.string()).optional(),
  action: z.nullable(NullableRunbooksActionsEntity$outboundSchema).optional(),
  reruns: z.nullable(z.boolean()).optional(),
  repeats: z.nullable(z.boolean()).optional(),
  repeatsDuration: z.nullable(z.string()).optional(),
  votes: z.nullable(NullableEmptyVotesEntity$outboundSchema).optional(),
  rule: z.nullable(NullableRulesRuleEntity$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    actionId: "action_id",
    stepId: "step_id",
    actionElements: "action_elements",
    stepElements: "step_elements",
    delayDuration: "delay_duration",
    repeatsDuration: "repeats_duration",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbookStepEntity$ {
  /** @deprecated use `RunbookStepEntity$inboundSchema` instead. */
  export const inboundSchema = RunbookStepEntity$inboundSchema;
  /** @deprecated use `RunbookStepEntity$outboundSchema` instead. */
  export const outboundSchema = RunbookStepEntity$outboundSchema;
  /** @deprecated use `RunbookStepEntity$Outbound` instead. */
  export type Outbound = RunbookStepEntity$Outbound;
}

export function runbookStepEntityToJSON(
  runbookStepEntity: RunbookStepEntity,
): string {
  return JSON.stringify(
    RunbookStepEntity$outboundSchema.parse(runbookStepEntity),
  );
}

export function runbookStepEntityFromJSON(
  jsonString: string,
): SafeParseResult<RunbookStepEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunbookStepEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunbookStepEntity' from JSON`,
  );
}
