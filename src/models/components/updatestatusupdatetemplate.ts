/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update a single status update template
 */
export type UpdateStatusUpdateTemplate = {
  name?: string | null | undefined;
  body?: string | null | undefined;
};

/** @internal */
export const UpdateStatusUpdateTemplate$inboundSchema: z.ZodType<
  UpdateStatusUpdateTemplate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.nullable(z.string()).optional(),
  body: z.nullable(z.string()).optional(),
});

/** @internal */
export type UpdateStatusUpdateTemplate$Outbound = {
  name?: string | null | undefined;
  body?: string | null | undefined;
};

/** @internal */
export const UpdateStatusUpdateTemplate$outboundSchema: z.ZodType<
  UpdateStatusUpdateTemplate$Outbound,
  z.ZodTypeDef,
  UpdateStatusUpdateTemplate
> = z.object({
  name: z.nullable(z.string()).optional(),
  body: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStatusUpdateTemplate$ {
  /** @deprecated use `UpdateStatusUpdateTemplate$inboundSchema` instead. */
  export const inboundSchema = UpdateStatusUpdateTemplate$inboundSchema;
  /** @deprecated use `UpdateStatusUpdateTemplate$outboundSchema` instead. */
  export const outboundSchema = UpdateStatusUpdateTemplate$outboundSchema;
  /** @deprecated use `UpdateStatusUpdateTemplate$Outbound` instead. */
  export type Outbound = UpdateStatusUpdateTemplate$Outbound;
}

export function updateStatusUpdateTemplateToJSON(
  updateStatusUpdateTemplate: UpdateStatusUpdateTemplate,
): string {
  return JSON.stringify(
    UpdateStatusUpdateTemplate$outboundSchema.parse(updateStatusUpdateTemplate),
  );
}

export function updateStatusUpdateTemplateFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStatusUpdateTemplate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateStatusUpdateTemplate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStatusUpdateTemplate' from JSON`,
  );
}
