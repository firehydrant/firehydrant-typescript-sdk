/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity,
  NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$inboundSchema,
  NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$Outbound,
  NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$outboundSchema,
} from "./nullablesignalsapigroupingentitystrategyentitysubstringentity.js";

export type NullableSignalsAPIGroupingEntityStrategyEntity = {
  substring?:
    | NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity
    | null
    | undefined;
};

/** @internal */
export const NullableSignalsAPIGroupingEntityStrategyEntity$inboundSchema:
  z.ZodType<
    NullableSignalsAPIGroupingEntityStrategyEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    substring: z.nullable(
      NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$inboundSchema,
    ).optional(),
  });

/** @internal */
export type NullableSignalsAPIGroupingEntityStrategyEntity$Outbound = {
  substring?:
    | NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$Outbound
    | null
    | undefined;
};

/** @internal */
export const NullableSignalsAPIGroupingEntityStrategyEntity$outboundSchema:
  z.ZodType<
    NullableSignalsAPIGroupingEntityStrategyEntity$Outbound,
    z.ZodTypeDef,
    NullableSignalsAPIGroupingEntityStrategyEntity
  > = z.object({
    substring: z.nullable(
      NullableSignalsAPIGroupingEntityStrategyEntitySubstringEntity$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableSignalsAPIGroupingEntityStrategyEntity$ {
  /** @deprecated use `NullableSignalsAPIGroupingEntityStrategyEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableSignalsAPIGroupingEntityStrategyEntity$inboundSchema;
  /** @deprecated use `NullableSignalsAPIGroupingEntityStrategyEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableSignalsAPIGroupingEntityStrategyEntity$outboundSchema;
  /** @deprecated use `NullableSignalsAPIGroupingEntityStrategyEntity$Outbound` instead. */
  export type Outbound =
    NullableSignalsAPIGroupingEntityStrategyEntity$Outbound;
}

export function nullableSignalsAPIGroupingEntityStrategyEntityToJSON(
  nullableSignalsAPIGroupingEntityStrategyEntity:
    NullableSignalsAPIGroupingEntityStrategyEntity,
): string {
  return JSON.stringify(
    NullableSignalsAPIGroupingEntityStrategyEntity$outboundSchema.parse(
      nullableSignalsAPIGroupingEntityStrategyEntity,
    ),
  );
}

export function nullableSignalsAPIGroupingEntityStrategyEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableSignalsAPIGroupingEntityStrategyEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableSignalsAPIGroupingEntityStrategyEntity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'NullableSignalsAPIGroupingEntityStrategyEntity' from JSON`,
  );
}
