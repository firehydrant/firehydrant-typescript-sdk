/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RunbooksElementDynamicSelectEntitySelectOptionEntity = {
  label?: string | undefined;
  value?: string | undefined;
};

/** @internal */
export const RunbooksElementDynamicSelectEntitySelectOptionEntity$inboundSchema:
  z.ZodType<
    RunbooksElementDynamicSelectEntitySelectOptionEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    value: z.string().optional(),
  });

/** @internal */
export type RunbooksElementDynamicSelectEntitySelectOptionEntity$Outbound = {
  label?: string | undefined;
  value?: string | undefined;
};

/** @internal */
export const RunbooksElementDynamicSelectEntitySelectOptionEntity$outboundSchema:
  z.ZodType<
    RunbooksElementDynamicSelectEntitySelectOptionEntity$Outbound,
    z.ZodTypeDef,
    RunbooksElementDynamicSelectEntitySelectOptionEntity
  > = z.object({
    label: z.string().optional(),
    value: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbooksElementDynamicSelectEntitySelectOptionEntity$ {
  /** @deprecated use `RunbooksElementDynamicSelectEntitySelectOptionEntity$inboundSchema` instead. */
  export const inboundSchema =
    RunbooksElementDynamicSelectEntitySelectOptionEntity$inboundSchema;
  /** @deprecated use `RunbooksElementDynamicSelectEntitySelectOptionEntity$outboundSchema` instead. */
  export const outboundSchema =
    RunbooksElementDynamicSelectEntitySelectOptionEntity$outboundSchema;
  /** @deprecated use `RunbooksElementDynamicSelectEntitySelectOptionEntity$Outbound` instead. */
  export type Outbound =
    RunbooksElementDynamicSelectEntitySelectOptionEntity$Outbound;
}

export function runbooksElementDynamicSelectEntitySelectOptionEntityToJSON(
  runbooksElementDynamicSelectEntitySelectOptionEntity:
    RunbooksElementDynamicSelectEntitySelectOptionEntity,
): string {
  return JSON.stringify(
    RunbooksElementDynamicSelectEntitySelectOptionEntity$outboundSchema.parse(
      runbooksElementDynamicSelectEntitySelectOptionEntity,
    ),
  );
}

export function runbooksElementDynamicSelectEntitySelectOptionEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  RunbooksElementDynamicSelectEntitySelectOptionEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RunbooksElementDynamicSelectEntitySelectOptionEntity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RunbooksElementDynamicSelectEntitySelectOptionEntity' from JSON`,
  );
}
