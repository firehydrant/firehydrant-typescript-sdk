/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Integrations_ConfluenceCloud_SpaceKeyEntity model
 */
export type IntegrationsConfluenceCloudSpaceKeyEntity = {
  key?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const IntegrationsConfluenceCloudSpaceKeyEntity$inboundSchema: z.ZodType<
  IntegrationsConfluenceCloudSpaceKeyEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/** @internal */
export type IntegrationsConfluenceCloudSpaceKeyEntity$Outbound = {
  key?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const IntegrationsConfluenceCloudSpaceKeyEntity$outboundSchema:
  z.ZodType<
    IntegrationsConfluenceCloudSpaceKeyEntity$Outbound,
    z.ZodTypeDef,
    IntegrationsConfluenceCloudSpaceKeyEntity
  > = z.object({
    key: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IntegrationsConfluenceCloudSpaceKeyEntity$ {
  /** @deprecated use `IntegrationsConfluenceCloudSpaceKeyEntity$inboundSchema` instead. */
  export const inboundSchema =
    IntegrationsConfluenceCloudSpaceKeyEntity$inboundSchema;
  /** @deprecated use `IntegrationsConfluenceCloudSpaceKeyEntity$outboundSchema` instead. */
  export const outboundSchema =
    IntegrationsConfluenceCloudSpaceKeyEntity$outboundSchema;
  /** @deprecated use `IntegrationsConfluenceCloudSpaceKeyEntity$Outbound` instead. */
  export type Outbound = IntegrationsConfluenceCloudSpaceKeyEntity$Outbound;
}

export function integrationsConfluenceCloudSpaceKeyEntityToJSON(
  integrationsConfluenceCloudSpaceKeyEntity:
    IntegrationsConfluenceCloudSpaceKeyEntity,
): string {
  return JSON.stringify(
    IntegrationsConfluenceCloudSpaceKeyEntity$outboundSchema.parse(
      integrationsConfluenceCloudSpaceKeyEntity,
    ),
  );
}

export function integrationsConfluenceCloudSpaceKeyEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  IntegrationsConfluenceCloudSpaceKeyEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      IntegrationsConfluenceCloudSpaceKeyEntity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'IntegrationsConfluenceCloudSpaceKeyEntity' from JSON`,
  );
}
