/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  SeverityMatrixConditionEntity,
  SeverityMatrixConditionEntity$inboundSchema,
  SeverityMatrixConditionEntity$Outbound,
  SeverityMatrixConditionEntity$outboundSchema,
} from "./severitymatrixconditionentity.js";
import {
  SeverityMatrixImpactEntity,
  SeverityMatrixImpactEntity$inboundSchema,
  SeverityMatrixImpactEntity$Outbound,
  SeverityMatrixImpactEntity$outboundSchema,
} from "./severitymatriximpactentity.js";
import {
  SeverityMatrixItemEntity,
  SeverityMatrixItemEntity$inboundSchema,
  SeverityMatrixItemEntity$Outbound,
  SeverityMatrixItemEntity$outboundSchema,
} from "./severitymatrixitementity.js";

/**
 * SeverityMatrix_SeverityMatrixEntity model
 */
export type SeverityMatrixSeverityMatrixEntity = {
  matrix?: Array<SeverityMatrixItemEntity> | null | undefined;
  impacts?: Array<SeverityMatrixImpactEntity> | null | undefined;
  conditions?: Array<SeverityMatrixConditionEntity> | null | undefined;
};

/** @internal */
export const SeverityMatrixSeverityMatrixEntity$inboundSchema: z.ZodType<
  SeverityMatrixSeverityMatrixEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  matrix: z.nullable(z.array(SeverityMatrixItemEntity$inboundSchema))
    .optional(),
  impacts: z.nullable(z.array(SeverityMatrixImpactEntity$inboundSchema))
    .optional(),
  conditions: z.nullable(z.array(SeverityMatrixConditionEntity$inboundSchema))
    .optional(),
});

/** @internal */
export type SeverityMatrixSeverityMatrixEntity$Outbound = {
  matrix?: Array<SeverityMatrixItemEntity$Outbound> | null | undefined;
  impacts?: Array<SeverityMatrixImpactEntity$Outbound> | null | undefined;
  conditions?: Array<SeverityMatrixConditionEntity$Outbound> | null | undefined;
};

/** @internal */
export const SeverityMatrixSeverityMatrixEntity$outboundSchema: z.ZodType<
  SeverityMatrixSeverityMatrixEntity$Outbound,
  z.ZodTypeDef,
  SeverityMatrixSeverityMatrixEntity
> = z.object({
  matrix: z.nullable(z.array(SeverityMatrixItemEntity$outboundSchema))
    .optional(),
  impacts: z.nullable(z.array(SeverityMatrixImpactEntity$outboundSchema))
    .optional(),
  conditions: z.nullable(z.array(SeverityMatrixConditionEntity$outboundSchema))
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SeverityMatrixSeverityMatrixEntity$ {
  /** @deprecated use `SeverityMatrixSeverityMatrixEntity$inboundSchema` instead. */
  export const inboundSchema = SeverityMatrixSeverityMatrixEntity$inboundSchema;
  /** @deprecated use `SeverityMatrixSeverityMatrixEntity$outboundSchema` instead. */
  export const outboundSchema =
    SeverityMatrixSeverityMatrixEntity$outboundSchema;
  /** @deprecated use `SeverityMatrixSeverityMatrixEntity$Outbound` instead. */
  export type Outbound = SeverityMatrixSeverityMatrixEntity$Outbound;
}

export function severityMatrixSeverityMatrixEntityToJSON(
  severityMatrixSeverityMatrixEntity: SeverityMatrixSeverityMatrixEntity,
): string {
  return JSON.stringify(
    SeverityMatrixSeverityMatrixEntity$outboundSchema.parse(
      severityMatrixSeverityMatrixEntity,
    ),
  );
}

export function severityMatrixSeverityMatrixEntityFromJSON(
  jsonString: string,
): SafeParseResult<SeverityMatrixSeverityMatrixEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      SeverityMatrixSeverityMatrixEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SeverityMatrixSeverityMatrixEntity' from JSON`,
  );
}
