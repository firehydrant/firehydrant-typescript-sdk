/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NullableSignalsAPIEscalationPolicyHandoffStepEntity,
  NullableSignalsAPIEscalationPolicyHandoffStepEntity$inboundSchema,
  NullableSignalsAPIEscalationPolicyHandoffStepEntity$Outbound,
  NullableSignalsAPIEscalationPolicyHandoffStepEntity$outboundSchema,
} from "./nullablesignalsapiescalationpolicyhandoffstepentity.js";
import {
  SignalsAPIEscalationPolicyStepEntity,
  SignalsAPIEscalationPolicyStepEntity$inboundSchema,
  SignalsAPIEscalationPolicyStepEntity$Outbound,
  SignalsAPIEscalationPolicyStepEntity$outboundSchema,
} from "./signalsapiescalationpolicystepentity.js";

export type SignalsAPINotificationPriorityPolicyEntity = {
  /**
   * The notification priority this policy handles (HIGH, MEDIUM, or LOW)
   */
  notificationPriority?: string | null | undefined;
  /**
   * Number of repetitions for this priority
   */
  repetitions?: number | null | undefined;
  handoffStep?:
    | NullableSignalsAPIEscalationPolicyHandoffStepEntity
    | null
    | undefined;
  /**
   * Steps for this priority
   */
  steps?: Array<SignalsAPIEscalationPolicyStepEntity> | null | undefined;
};

/** @internal */
export const SignalsAPINotificationPriorityPolicyEntity$inboundSchema:
  z.ZodType<SignalsAPINotificationPriorityPolicyEntity, z.ZodTypeDef, unknown> =
    z.object({
      notification_priority: z.nullable(z.string()).optional(),
      repetitions: z.nullable(z.number().int()).optional(),
      handoff_step: z.nullable(
        NullableSignalsAPIEscalationPolicyHandoffStepEntity$inboundSchema,
      ).optional(),
      steps: z.nullable(
        z.array(SignalsAPIEscalationPolicyStepEntity$inboundSchema),
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "notification_priority": "notificationPriority",
        "handoff_step": "handoffStep",
      });
    });

/** @internal */
export type SignalsAPINotificationPriorityPolicyEntity$Outbound = {
  notification_priority?: string | null | undefined;
  repetitions?: number | null | undefined;
  handoff_step?:
    | NullableSignalsAPIEscalationPolicyHandoffStepEntity$Outbound
    | null
    | undefined;
  steps?:
    | Array<SignalsAPIEscalationPolicyStepEntity$Outbound>
    | null
    | undefined;
};

/** @internal */
export const SignalsAPINotificationPriorityPolicyEntity$outboundSchema:
  z.ZodType<
    SignalsAPINotificationPriorityPolicyEntity$Outbound,
    z.ZodTypeDef,
    SignalsAPINotificationPriorityPolicyEntity
  > = z.object({
    notificationPriority: z.nullable(z.string()).optional(),
    repetitions: z.nullable(z.number().int()).optional(),
    handoffStep: z.nullable(
      NullableSignalsAPIEscalationPolicyHandoffStepEntity$outboundSchema,
    ).optional(),
    steps: z.nullable(
      z.array(SignalsAPIEscalationPolicyStepEntity$outboundSchema),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      notificationPriority: "notification_priority",
      handoffStep: "handoff_step",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SignalsAPINotificationPriorityPolicyEntity$ {
  /** @deprecated use `SignalsAPINotificationPriorityPolicyEntity$inboundSchema` instead. */
  export const inboundSchema =
    SignalsAPINotificationPriorityPolicyEntity$inboundSchema;
  /** @deprecated use `SignalsAPINotificationPriorityPolicyEntity$outboundSchema` instead. */
  export const outboundSchema =
    SignalsAPINotificationPriorityPolicyEntity$outboundSchema;
  /** @deprecated use `SignalsAPINotificationPriorityPolicyEntity$Outbound` instead. */
  export type Outbound = SignalsAPINotificationPriorityPolicyEntity$Outbound;
}

export function signalsAPINotificationPriorityPolicyEntityToJSON(
  signalsAPINotificationPriorityPolicyEntity:
    SignalsAPINotificationPriorityPolicyEntity,
): string {
  return JSON.stringify(
    SignalsAPINotificationPriorityPolicyEntity$outboundSchema.parse(
      signalsAPINotificationPriorityPolicyEntity,
    ),
  );
}

export function signalsAPINotificationPriorityPolicyEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  SignalsAPINotificationPriorityPolicyEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      SignalsAPINotificationPriorityPolicyEntity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'SignalsAPINotificationPriorityPolicyEntity' from JSON`,
  );
}
