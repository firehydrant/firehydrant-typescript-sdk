/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableTaskListItemEntity = {
  summary?: string | null | undefined;
  description?: string | null | undefined;
};

/** @internal */
export const NullableTaskListItemEntity$inboundSchema: z.ZodType<
  NullableTaskListItemEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  summary: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
});

/** @internal */
export type NullableTaskListItemEntity$Outbound = {
  summary?: string | null | undefined;
  description?: string | null | undefined;
};

/** @internal */
export const NullableTaskListItemEntity$outboundSchema: z.ZodType<
  NullableTaskListItemEntity$Outbound,
  z.ZodTypeDef,
  NullableTaskListItemEntity
> = z.object({
  summary: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableTaskListItemEntity$ {
  /** @deprecated use `NullableTaskListItemEntity$inboundSchema` instead. */
  export const inboundSchema = NullableTaskListItemEntity$inboundSchema;
  /** @deprecated use `NullableTaskListItemEntity$outboundSchema` instead. */
  export const outboundSchema = NullableTaskListItemEntity$outboundSchema;
  /** @deprecated use `NullableTaskListItemEntity$Outbound` instead. */
  export type Outbound = NullableTaskListItemEntity$Outbound;
}

export function nullableTaskListItemEntityToJSON(
  nullableTaskListItemEntity: NullableTaskListItemEntity,
): string {
  return JSON.stringify(
    NullableTaskListItemEntity$outboundSchema.parse(nullableTaskListItemEntity),
  );
}

export function nullableTaskListItemEntityFromJSON(
  jsonString: string,
): SafeParseResult<NullableTaskListItemEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NullableTaskListItemEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableTaskListItemEntity' from JSON`,
  );
}
