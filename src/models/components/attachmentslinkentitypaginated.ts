/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AttachmentsLinkEntity,
  AttachmentsLinkEntity$inboundSchema,
  AttachmentsLinkEntity$Outbound,
  AttachmentsLinkEntity$outboundSchema,
} from "./attachmentslinkentity.js";
import {
  NullablePaginationEntity,
  NullablePaginationEntity$inboundSchema,
  NullablePaginationEntity$Outbound,
  NullablePaginationEntity$outboundSchema,
} from "./nullablepaginationentity.js";

/**
 * Attachments_LinkEntityPaginated model
 */
export type AttachmentsLinkEntityPaginated = {
  data?: Array<AttachmentsLinkEntity> | null | undefined;
  pagination?: NullablePaginationEntity | null | undefined;
};

/** @internal */
export const AttachmentsLinkEntityPaginated$inboundSchema: z.ZodType<
  AttachmentsLinkEntityPaginated,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.nullable(z.array(AttachmentsLinkEntity$inboundSchema)).optional(),
  pagination: z.nullable(NullablePaginationEntity$inboundSchema).optional(),
});

/** @internal */
export type AttachmentsLinkEntityPaginated$Outbound = {
  data?: Array<AttachmentsLinkEntity$Outbound> | null | undefined;
  pagination?: NullablePaginationEntity$Outbound | null | undefined;
};

/** @internal */
export const AttachmentsLinkEntityPaginated$outboundSchema: z.ZodType<
  AttachmentsLinkEntityPaginated$Outbound,
  z.ZodTypeDef,
  AttachmentsLinkEntityPaginated
> = z.object({
  data: z.nullable(z.array(AttachmentsLinkEntity$outboundSchema)).optional(),
  pagination: z.nullable(NullablePaginationEntity$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AttachmentsLinkEntityPaginated$ {
  /** @deprecated use `AttachmentsLinkEntityPaginated$inboundSchema` instead. */
  export const inboundSchema = AttachmentsLinkEntityPaginated$inboundSchema;
  /** @deprecated use `AttachmentsLinkEntityPaginated$outboundSchema` instead. */
  export const outboundSchema = AttachmentsLinkEntityPaginated$outboundSchema;
  /** @deprecated use `AttachmentsLinkEntityPaginated$Outbound` instead. */
  export type Outbound = AttachmentsLinkEntityPaginated$Outbound;
}

export function attachmentsLinkEntityPaginatedToJSON(
  attachmentsLinkEntityPaginated: AttachmentsLinkEntityPaginated,
): string {
  return JSON.stringify(
    AttachmentsLinkEntityPaginated$outboundSchema.parse(
      attachmentsLinkEntityPaginated,
    ),
  );
}

export function attachmentsLinkEntityPaginatedFromJSON(
  jsonString: string,
): SafeParseResult<AttachmentsLinkEntityPaginated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AttachmentsLinkEntityPaginated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AttachmentsLinkEntityPaginated' from JSON`,
  );
}
