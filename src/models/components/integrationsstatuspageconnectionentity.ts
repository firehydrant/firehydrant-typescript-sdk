/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  IntegrationsStatuspageConditionEntity,
  IntegrationsStatuspageConditionEntity$inboundSchema,
  IntegrationsStatuspageConditionEntity$Outbound,
  IntegrationsStatuspageConditionEntity$outboundSchema,
} from "./integrationsstatuspageconditionentity.js";
import {
  IntegrationsStatuspageMilestoneMappingEntity,
  IntegrationsStatuspageMilestoneMappingEntity$inboundSchema,
  IntegrationsStatuspageMilestoneMappingEntity$Outbound,
  IntegrationsStatuspageMilestoneMappingEntity$outboundSchema,
} from "./integrationsstatuspagemilestonemappingentity.js";
import {
  IntegrationsStatuspageSeverityEntity,
  IntegrationsStatuspageSeverityEntity$inboundSchema,
  IntegrationsStatuspageSeverityEntity$Outbound,
  IntegrationsStatuspageSeverityEntity$outboundSchema,
} from "./integrationsstatuspageseverityentity.js";

/**
 * Integrations_Statuspage_ConnectionEntity model
 */
export type IntegrationsStatuspageConnectionEntity = {
  id?: string | null | undefined;
  pageName?: string | null | undefined;
  pageId?: string | null | undefined;
  conditions?: Array<IntegrationsStatuspageConditionEntity> | null | undefined;
  severities?: Array<IntegrationsStatuspageSeverityEntity> | null | undefined;
  milestoneMappings?:
    | Array<IntegrationsStatuspageMilestoneMappingEntity>
    | null
    | undefined;
};

/** @internal */
export const IntegrationsStatuspageConnectionEntity$inboundSchema: z.ZodType<
  IntegrationsStatuspageConnectionEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  page_name: z.nullable(z.string()).optional(),
  page_id: z.nullable(z.string()).optional(),
  conditions: z.nullable(
    z.array(IntegrationsStatuspageConditionEntity$inboundSchema),
  ).optional(),
  severities: z.nullable(
    z.array(IntegrationsStatuspageSeverityEntity$inboundSchema),
  ).optional(),
  milestone_mappings: z.nullable(
    z.array(IntegrationsStatuspageMilestoneMappingEntity$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "page_name": "pageName",
    "page_id": "pageId",
    "milestone_mappings": "milestoneMappings",
  });
});

/** @internal */
export type IntegrationsStatuspageConnectionEntity$Outbound = {
  id?: string | null | undefined;
  page_name?: string | null | undefined;
  page_id?: string | null | undefined;
  conditions?:
    | Array<IntegrationsStatuspageConditionEntity$Outbound>
    | null
    | undefined;
  severities?:
    | Array<IntegrationsStatuspageSeverityEntity$Outbound>
    | null
    | undefined;
  milestone_mappings?:
    | Array<IntegrationsStatuspageMilestoneMappingEntity$Outbound>
    | null
    | undefined;
};

/** @internal */
export const IntegrationsStatuspageConnectionEntity$outboundSchema: z.ZodType<
  IntegrationsStatuspageConnectionEntity$Outbound,
  z.ZodTypeDef,
  IntegrationsStatuspageConnectionEntity
> = z.object({
  id: z.nullable(z.string()).optional(),
  pageName: z.nullable(z.string()).optional(),
  pageId: z.nullable(z.string()).optional(),
  conditions: z.nullable(
    z.array(IntegrationsStatuspageConditionEntity$outboundSchema),
  ).optional(),
  severities: z.nullable(
    z.array(IntegrationsStatuspageSeverityEntity$outboundSchema),
  ).optional(),
  milestoneMappings: z.nullable(
    z.array(IntegrationsStatuspageMilestoneMappingEntity$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    pageName: "page_name",
    pageId: "page_id",
    milestoneMappings: "milestone_mappings",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IntegrationsStatuspageConnectionEntity$ {
  /** @deprecated use `IntegrationsStatuspageConnectionEntity$inboundSchema` instead. */
  export const inboundSchema =
    IntegrationsStatuspageConnectionEntity$inboundSchema;
  /** @deprecated use `IntegrationsStatuspageConnectionEntity$outboundSchema` instead. */
  export const outboundSchema =
    IntegrationsStatuspageConnectionEntity$outboundSchema;
  /** @deprecated use `IntegrationsStatuspageConnectionEntity$Outbound` instead. */
  export type Outbound = IntegrationsStatuspageConnectionEntity$Outbound;
}

export function integrationsStatuspageConnectionEntityToJSON(
  integrationsStatuspageConnectionEntity:
    IntegrationsStatuspageConnectionEntity,
): string {
  return JSON.stringify(
    IntegrationsStatuspageConnectionEntity$outboundSchema.parse(
      integrationsStatuspageConnectionEntity,
    ),
  );
}

export function integrationsStatuspageConnectionEntityFromJSON(
  jsonString: string,
): SafeParseResult<IntegrationsStatuspageConnectionEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      IntegrationsStatuspageConnectionEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IntegrationsStatuspageConnectionEntity' from JSON`,
  );
}
