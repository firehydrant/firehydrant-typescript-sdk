/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NullablePaginationEntity,
  NullablePaginationEntity$inboundSchema,
  NullablePaginationEntity$Outbound,
  NullablePaginationEntity$outboundSchema,
} from "./nullablepaginationentity.js";
import {
  PublicApiv1RoleEntity,
  PublicApiv1RoleEntity$inboundSchema,
  PublicApiv1RoleEntity$Outbound,
  PublicApiv1RoleEntity$outboundSchema,
} from "./publicapiv1roleentity.js";

/**
 * RoleEntityPaginated model
 */
export type RoleEntityPaginated = {
  data?: Array<PublicApiv1RoleEntity> | null | undefined;
  pagination?: NullablePaginationEntity | null | undefined;
};

/** @internal */
export const RoleEntityPaginated$inboundSchema: z.ZodType<
  RoleEntityPaginated,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.nullable(z.array(PublicApiv1RoleEntity$inboundSchema)).optional(),
  pagination: z.nullable(NullablePaginationEntity$inboundSchema).optional(),
});

/** @internal */
export type RoleEntityPaginated$Outbound = {
  data?: Array<PublicApiv1RoleEntity$Outbound> | null | undefined;
  pagination?: NullablePaginationEntity$Outbound | null | undefined;
};

/** @internal */
export const RoleEntityPaginated$outboundSchema: z.ZodType<
  RoleEntityPaginated$Outbound,
  z.ZodTypeDef,
  RoleEntityPaginated
> = z.object({
  data: z.nullable(z.array(PublicApiv1RoleEntity$outboundSchema)).optional(),
  pagination: z.nullable(NullablePaginationEntity$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RoleEntityPaginated$ {
  /** @deprecated use `RoleEntityPaginated$inboundSchema` instead. */
  export const inboundSchema = RoleEntityPaginated$inboundSchema;
  /** @deprecated use `RoleEntityPaginated$outboundSchema` instead. */
  export const outboundSchema = RoleEntityPaginated$outboundSchema;
  /** @deprecated use `RoleEntityPaginated$Outbound` instead. */
  export type Outbound = RoleEntityPaginated$Outbound;
}

export function roleEntityPaginatedToJSON(
  roleEntityPaginated: RoleEntityPaginated,
): string {
  return JSON.stringify(
    RoleEntityPaginated$outboundSchema.parse(roleEntityPaginated),
  );
}

export function roleEntityPaginatedFromJSON(
  jsonString: string,
): SafeParseResult<RoleEntityPaginated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RoleEntityPaginated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RoleEntityPaginated' from JSON`,
  );
}
