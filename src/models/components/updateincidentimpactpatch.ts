/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateIncidentImpactPatchImpact = {
  id: string;
  conditionId: string;
};

export type UpdateIncidentImpactPatchStatusPage = {
  id: string;
  integrationSlug: string;
};

/**
 * Allows updating an incident's impacted infrastructure, with the option to
 *
 * @remarks
 * move the incident into a different milestone and provide a note to update
 * the incident timeline and any attached status pages. If this method is
 * requested with the PUT verb, impacts will be completely replaced with the
 * information in the request body, even if not provided (effectively clearing
 * all impacts). If this method is requested with the PATCH verb, the provided
 * impacts will be added or updated, but no impacts will be removed.
 */
export type UpdateIncidentImpactPatch = {
  note?: string | null | undefined;
  milestone?: string | null | undefined;
  impact?: Array<UpdateIncidentImpactPatchImpact> | null | undefined;
  statusPages?: Array<UpdateIncidentImpactPatchStatusPage> | null | undefined;
};

/** @internal */
export const UpdateIncidentImpactPatchImpact$inboundSchema: z.ZodType<
  UpdateIncidentImpactPatchImpact,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  condition_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "condition_id": "conditionId",
  });
});

/** @internal */
export type UpdateIncidentImpactPatchImpact$Outbound = {
  id: string;
  condition_id: string;
};

/** @internal */
export const UpdateIncidentImpactPatchImpact$outboundSchema: z.ZodType<
  UpdateIncidentImpactPatchImpact$Outbound,
  z.ZodTypeDef,
  UpdateIncidentImpactPatchImpact
> = z.object({
  id: z.string(),
  conditionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    conditionId: "condition_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentImpactPatchImpact$ {
  /** @deprecated use `UpdateIncidentImpactPatchImpact$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentImpactPatchImpact$inboundSchema;
  /** @deprecated use `UpdateIncidentImpactPatchImpact$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentImpactPatchImpact$outboundSchema;
  /** @deprecated use `UpdateIncidentImpactPatchImpact$Outbound` instead. */
  export type Outbound = UpdateIncidentImpactPatchImpact$Outbound;
}

export function updateIncidentImpactPatchImpactToJSON(
  updateIncidentImpactPatchImpact: UpdateIncidentImpactPatchImpact,
): string {
  return JSON.stringify(
    UpdateIncidentImpactPatchImpact$outboundSchema.parse(
      updateIncidentImpactPatchImpact,
    ),
  );
}

export function updateIncidentImpactPatchImpactFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentImpactPatchImpact, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentImpactPatchImpact$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentImpactPatchImpact' from JSON`,
  );
}

/** @internal */
export const UpdateIncidentImpactPatchStatusPage$inboundSchema: z.ZodType<
  UpdateIncidentImpactPatchStatusPage,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  integration_slug: z.string(),
}).transform((v) => {
  return remap$(v, {
    "integration_slug": "integrationSlug",
  });
});

/** @internal */
export type UpdateIncidentImpactPatchStatusPage$Outbound = {
  id: string;
  integration_slug: string;
};

/** @internal */
export const UpdateIncidentImpactPatchStatusPage$outboundSchema: z.ZodType<
  UpdateIncidentImpactPatchStatusPage$Outbound,
  z.ZodTypeDef,
  UpdateIncidentImpactPatchStatusPage
> = z.object({
  id: z.string(),
  integrationSlug: z.string(),
}).transform((v) => {
  return remap$(v, {
    integrationSlug: "integration_slug",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentImpactPatchStatusPage$ {
  /** @deprecated use `UpdateIncidentImpactPatchStatusPage$inboundSchema` instead. */
  export const inboundSchema =
    UpdateIncidentImpactPatchStatusPage$inboundSchema;
  /** @deprecated use `UpdateIncidentImpactPatchStatusPage$outboundSchema` instead. */
  export const outboundSchema =
    UpdateIncidentImpactPatchStatusPage$outboundSchema;
  /** @deprecated use `UpdateIncidentImpactPatchStatusPage$Outbound` instead. */
  export type Outbound = UpdateIncidentImpactPatchStatusPage$Outbound;
}

export function updateIncidentImpactPatchStatusPageToJSON(
  updateIncidentImpactPatchStatusPage: UpdateIncidentImpactPatchStatusPage,
): string {
  return JSON.stringify(
    UpdateIncidentImpactPatchStatusPage$outboundSchema.parse(
      updateIncidentImpactPatchStatusPage,
    ),
  );
}

export function updateIncidentImpactPatchStatusPageFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentImpactPatchStatusPage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateIncidentImpactPatchStatusPage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentImpactPatchStatusPage' from JSON`,
  );
}

/** @internal */
export const UpdateIncidentImpactPatch$inboundSchema: z.ZodType<
  UpdateIncidentImpactPatch,
  z.ZodTypeDef,
  unknown
> = z.object({
  note: z.nullable(z.string()).optional(),
  milestone: z.nullable(z.string()).optional(),
  impact: z.nullable(
    z.array(z.lazy(() => UpdateIncidentImpactPatchImpact$inboundSchema)),
  ).optional(),
  status_pages: z.nullable(
    z.array(z.lazy(() => UpdateIncidentImpactPatchStatusPage$inboundSchema)),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "status_pages": "statusPages",
  });
});

/** @internal */
export type UpdateIncidentImpactPatch$Outbound = {
  note?: string | null | undefined;
  milestone?: string | null | undefined;
  impact?: Array<UpdateIncidentImpactPatchImpact$Outbound> | null | undefined;
  status_pages?:
    | Array<UpdateIncidentImpactPatchStatusPage$Outbound>
    | null
    | undefined;
};

/** @internal */
export const UpdateIncidentImpactPatch$outboundSchema: z.ZodType<
  UpdateIncidentImpactPatch$Outbound,
  z.ZodTypeDef,
  UpdateIncidentImpactPatch
> = z.object({
  note: z.nullable(z.string()).optional(),
  milestone: z.nullable(z.string()).optional(),
  impact: z.nullable(
    z.array(z.lazy(() => UpdateIncidentImpactPatchImpact$outboundSchema)),
  ).optional(),
  statusPages: z.nullable(
    z.array(z.lazy(() => UpdateIncidentImpactPatchStatusPage$outboundSchema)),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    statusPages: "status_pages",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentImpactPatch$ {
  /** @deprecated use `UpdateIncidentImpactPatch$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentImpactPatch$inboundSchema;
  /** @deprecated use `UpdateIncidentImpactPatch$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentImpactPatch$outboundSchema;
  /** @deprecated use `UpdateIncidentImpactPatch$Outbound` instead. */
  export type Outbound = UpdateIncidentImpactPatch$Outbound;
}

export function updateIncidentImpactPatchToJSON(
  updateIncidentImpactPatch: UpdateIncidentImpactPatch,
): string {
  return JSON.stringify(
    UpdateIncidentImpactPatch$outboundSchema.parse(updateIncidentImpactPatch),
  );
}

export function updateIncidentImpactPatchFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentImpactPatch, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentImpactPatch$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentImpactPatch' from JSON`,
  );
}
