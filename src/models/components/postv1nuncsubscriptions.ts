/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Subscribe to status page updates
 */
export type PostV1NuncSubscriptions = {
  email: string;
};

/** @internal */
export const PostV1NuncSubscriptions$inboundSchema: z.ZodType<
  PostV1NuncSubscriptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string(),
});

/** @internal */
export type PostV1NuncSubscriptions$Outbound = {
  email: string;
};

/** @internal */
export const PostV1NuncSubscriptions$outboundSchema: z.ZodType<
  PostV1NuncSubscriptions$Outbound,
  z.ZodTypeDef,
  PostV1NuncSubscriptions
> = z.object({
  email: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1NuncSubscriptions$ {
  /** @deprecated use `PostV1NuncSubscriptions$inboundSchema` instead. */
  export const inboundSchema = PostV1NuncSubscriptions$inboundSchema;
  /** @deprecated use `PostV1NuncSubscriptions$outboundSchema` instead. */
  export const outboundSchema = PostV1NuncSubscriptions$outboundSchema;
  /** @deprecated use `PostV1NuncSubscriptions$Outbound` instead. */
  export type Outbound = PostV1NuncSubscriptions$Outbound;
}

export function postV1NuncSubscriptionsToJSON(
  postV1NuncSubscriptions: PostV1NuncSubscriptions,
): string {
  return JSON.stringify(
    PostV1NuncSubscriptions$outboundSchema.parse(postV1NuncSubscriptions),
  );
}

export function postV1NuncSubscriptionsFromJSON(
  jsonString: string,
): SafeParseResult<PostV1NuncSubscriptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV1NuncSubscriptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV1NuncSubscriptions' from JSON`,
  );
}
