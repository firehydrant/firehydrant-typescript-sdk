/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity = {
  /**
   * The ID of the group
   */
  groupedId?: number | null | undefined;
  /**
   * The name of the group
   */
  groupedName?: string | null | undefined;
  /**
   * The total number of opened alerts
   */
  totalOpenedAlerts?: number | null | undefined;
  /**
   * The total number of acknowledged alerts
   */
  totalAckedAlerts?: number | null | undefined;
  /**
   * The total number of incidents
   */
  totalIncidents?: number | null | undefined;
  /**
   * The percentage of acknowledged alerts
   */
  ackedPercentage?: number | null | undefined;
  /**
   * The percentage of alerts that have incidents
   */
  incidentsPercentage?: number | null | undefined;
};

/** @internal */
export const NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$inboundSchema:
  z.ZodType<
    NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    grouped_id: z.nullable(z.number().int()).optional(),
    grouped_name: z.nullable(z.string()).optional(),
    total_opened_alerts: z.nullable(z.number().int()).optional(),
    total_acked_alerts: z.nullable(z.number().int()).optional(),
    total_incidents: z.nullable(z.number().int()).optional(),
    acked_percentage: z.nullable(z.number()).optional(),
    incidents_percentage: z.nullable(z.number()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "grouped_id": "groupedId",
      "grouped_name": "groupedName",
      "total_opened_alerts": "totalOpenedAlerts",
      "total_acked_alerts": "totalAckedAlerts",
      "total_incidents": "totalIncidents",
      "acked_percentage": "ackedPercentage",
      "incidents_percentage": "incidentsPercentage",
    });
  });

/** @internal */
export type NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$Outbound =
  {
    grouped_id?: number | null | undefined;
    grouped_name?: string | null | undefined;
    total_opened_alerts?: number | null | undefined;
    total_acked_alerts?: number | null | undefined;
    total_incidents?: number | null | undefined;
    acked_percentage?: number | null | undefined;
    incidents_percentage?: number | null | undefined;
  };

/** @internal */
export const NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$outboundSchema:
  z.ZodType<
    NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$Outbound,
    z.ZodTypeDef,
    NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity
  > = z.object({
    groupedId: z.nullable(z.number().int()).optional(),
    groupedName: z.nullable(z.string()).optional(),
    totalOpenedAlerts: z.nullable(z.number().int()).optional(),
    totalAckedAlerts: z.nullable(z.number().int()).optional(),
    totalIncidents: z.nullable(z.number().int()).optional(),
    ackedPercentage: z.nullable(z.number()).optional(),
    incidentsPercentage: z.nullable(z.number()).optional(),
  }).transform((v) => {
    return remap$(v, {
      groupedId: "grouped_id",
      groupedName: "grouped_name",
      totalOpenedAlerts: "total_opened_alerts",
      totalAckedAlerts: "total_acked_alerts",
      totalIncidents: "total_incidents",
      ackedPercentage: "acked_percentage",
      incidentsPercentage: "incidents_percentage",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$ {
  /** @deprecated use `NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$inboundSchema;
  /** @deprecated use `NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$outboundSchema;
  /** @deprecated use `NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$Outbound` instead. */
  export type Outbound =
    NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$Outbound;
}

export function nullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntityToJSON(
  nullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity:
    NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity,
): string {
  return JSON.stringify(
    NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$outboundSchema
      .parse(nullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity),
  );
}

export function nullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'NullableSignalsAPIAnalyticsGroupedMetricsEntityMetricEntity' from JSON`,
  );
}
