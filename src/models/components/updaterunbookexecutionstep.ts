/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Updates a runbook step execution, especially for changing the state of a step execution.
 */
export type UpdateRunbookExecutionStep = {
  state: string;
  scheduleFor?: Date | null | undefined;
  /**
   * Data for execution of this step
   */
  data?: { [k: string]: any } | null | undefined;
  repeatsAt?: Date | null | undefined;
};

/** @internal */
export const UpdateRunbookExecutionStep$inboundSchema: z.ZodType<
  UpdateRunbookExecutionStep,
  z.ZodTypeDef,
  unknown
> = z.object({
  state: z.string(),
  schedule_for: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  data: z.nullable(z.record(z.any())).optional(),
  repeats_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "schedule_for": "scheduleFor",
    "repeats_at": "repeatsAt",
  });
});

/** @internal */
export type UpdateRunbookExecutionStep$Outbound = {
  state: string;
  schedule_for?: string | null | undefined;
  data?: { [k: string]: any } | null | undefined;
  repeats_at?: string | null | undefined;
};

/** @internal */
export const UpdateRunbookExecutionStep$outboundSchema: z.ZodType<
  UpdateRunbookExecutionStep$Outbound,
  z.ZodTypeDef,
  UpdateRunbookExecutionStep
> = z.object({
  state: z.string(),
  scheduleFor: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  data: z.nullable(z.record(z.any())).optional(),
  repeatsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
}).transform((v) => {
  return remap$(v, {
    scheduleFor: "schedule_for",
    repeatsAt: "repeats_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateRunbookExecutionStep$ {
  /** @deprecated use `UpdateRunbookExecutionStep$inboundSchema` instead. */
  export const inboundSchema = UpdateRunbookExecutionStep$inboundSchema;
  /** @deprecated use `UpdateRunbookExecutionStep$outboundSchema` instead. */
  export const outboundSchema = UpdateRunbookExecutionStep$outboundSchema;
  /** @deprecated use `UpdateRunbookExecutionStep$Outbound` instead. */
  export type Outbound = UpdateRunbookExecutionStep$Outbound;
}

export function updateRunbookExecutionStepToJSON(
  updateRunbookExecutionStep: UpdateRunbookExecutionStep,
): string {
  return JSON.stringify(
    UpdateRunbookExecutionStep$outboundSchema.parse(updateRunbookExecutionStep),
  );
}

export function updateRunbookExecutionStepFromJSON(
  jsonString: string,
): SafeParseResult<UpdateRunbookExecutionStep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateRunbookExecutionStep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateRunbookExecutionStep' from JSON`,
  );
}
