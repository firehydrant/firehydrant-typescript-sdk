/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Updates the body of a note
 */
export type UpdateIncidentNote = {
  body: string;
};

/** @internal */
export const UpdateIncidentNote$inboundSchema: z.ZodType<
  UpdateIncidentNote,
  z.ZodTypeDef,
  unknown
> = z.object({
  body: z.string(),
});

/** @internal */
export type UpdateIncidentNote$Outbound = {
  body: string;
};

/** @internal */
export const UpdateIncidentNote$outboundSchema: z.ZodType<
  UpdateIncidentNote$Outbound,
  z.ZodTypeDef,
  UpdateIncidentNote
> = z.object({
  body: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentNote$ {
  /** @deprecated use `UpdateIncidentNote$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentNote$inboundSchema;
  /** @deprecated use `UpdateIncidentNote$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentNote$outboundSchema;
  /** @deprecated use `UpdateIncidentNote$Outbound` instead. */
  export type Outbound = UpdateIncidentNote$Outbound;
}

export function updateIncidentNoteToJSON(
  updateIncidentNote: UpdateIncidentNote,
): string {
  return JSON.stringify(
    UpdateIncidentNote$outboundSchema.parse(updateIncidentNote),
  );
}

export function updateIncidentNoteFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentNote, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentNote$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentNote' from JSON`,
  );
}
