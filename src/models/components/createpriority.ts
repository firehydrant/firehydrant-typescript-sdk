/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Create a new priority
 */
export type CreatePriority = {
  slug: string;
  description?: string | null | undefined;
  default?: boolean | null | undefined;
};

/** @internal */
export const CreatePriority$inboundSchema: z.ZodType<
  CreatePriority,
  z.ZodTypeDef,
  unknown
> = z.object({
  slug: z.string(),
  description: z.nullable(z.string()).optional(),
  default: z.nullable(z.boolean()).optional(),
});

/** @internal */
export type CreatePriority$Outbound = {
  slug: string;
  description?: string | null | undefined;
  default?: boolean | null | undefined;
};

/** @internal */
export const CreatePriority$outboundSchema: z.ZodType<
  CreatePriority$Outbound,
  z.ZodTypeDef,
  CreatePriority
> = z.object({
  slug: z.string(),
  description: z.nullable(z.string()).optional(),
  default: z.nullable(z.boolean()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePriority$ {
  /** @deprecated use `CreatePriority$inboundSchema` instead. */
  export const inboundSchema = CreatePriority$inboundSchema;
  /** @deprecated use `CreatePriority$outboundSchema` instead. */
  export const outboundSchema = CreatePriority$outboundSchema;
  /** @deprecated use `CreatePriority$Outbound` instead. */
  export type Outbound = CreatePriority$Outbound;
}

export function createPriorityToJSON(createPriority: CreatePriority): string {
  return JSON.stringify(CreatePriority$outboundSchema.parse(createPriority));
}

export function createPriorityFromJSON(
  jsonString: string,
): SafeParseResult<CreatePriority, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreatePriority$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreatePriority' from JSON`,
  );
}
