/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ChangeTypeEntity,
  ChangeTypeEntity$inboundSchema,
  ChangeTypeEntity$Outbound,
  ChangeTypeEntity$outboundSchema,
} from "./changetypeentity.js";
import {
  PaginationEntity,
  PaginationEntity$inboundSchema,
  PaginationEntity$Outbound,
  PaginationEntity$outboundSchema,
} from "./paginationentity.js";

/**
 * ChangeTypeEntityPaginated model
 */
export type ChangeTypeEntityPaginated = {
  data?: Array<ChangeTypeEntity> | undefined;
  pagination?: PaginationEntity | undefined;
};

/** @internal */
export const ChangeTypeEntityPaginated$inboundSchema: z.ZodType<
  ChangeTypeEntityPaginated,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(ChangeTypeEntity$inboundSchema).optional(),
  pagination: PaginationEntity$inboundSchema.optional(),
});

/** @internal */
export type ChangeTypeEntityPaginated$Outbound = {
  data?: Array<ChangeTypeEntity$Outbound> | undefined;
  pagination?: PaginationEntity$Outbound | undefined;
};

/** @internal */
export const ChangeTypeEntityPaginated$outboundSchema: z.ZodType<
  ChangeTypeEntityPaginated$Outbound,
  z.ZodTypeDef,
  ChangeTypeEntityPaginated
> = z.object({
  data: z.array(ChangeTypeEntity$outboundSchema).optional(),
  pagination: PaginationEntity$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChangeTypeEntityPaginated$ {
  /** @deprecated use `ChangeTypeEntityPaginated$inboundSchema` instead. */
  export const inboundSchema = ChangeTypeEntityPaginated$inboundSchema;
  /** @deprecated use `ChangeTypeEntityPaginated$outboundSchema` instead. */
  export const outboundSchema = ChangeTypeEntityPaginated$outboundSchema;
  /** @deprecated use `ChangeTypeEntityPaginated$Outbound` instead. */
  export type Outbound = ChangeTypeEntityPaginated$Outbound;
}

export function changeTypeEntityPaginatedToJSON(
  changeTypeEntityPaginated: ChangeTypeEntityPaginated,
): string {
  return JSON.stringify(
    ChangeTypeEntityPaginated$outboundSchema.parse(changeTypeEntityPaginated),
  );
}

export function changeTypeEntityPaginatedFromJSON(
  jsonString: string,
): SafeParseResult<ChangeTypeEntityPaginated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChangeTypeEntityPaginated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChangeTypeEntityPaginated' from JSON`,
  );
}
