/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  IntegrationsConnectionEntity,
  IntegrationsConnectionEntity$inboundSchema,
  IntegrationsConnectionEntity$Outbound,
  IntegrationsConnectionEntity$outboundSchema,
} from "./integrationsconnectionentity.js";
import {
  NullablePaginationEntity,
  NullablePaginationEntity$inboundSchema,
  NullablePaginationEntity$Outbound,
  NullablePaginationEntity$outboundSchema,
} from "./nullablepaginationentity.js";

/**
 * Integrations_ConnectionEntityPaginated model
 */
export type IntegrationsConnectionEntityPaginated = {
  data?: Array<IntegrationsConnectionEntity> | null | undefined;
  pagination?: NullablePaginationEntity | null | undefined;
};

/** @internal */
export const IntegrationsConnectionEntityPaginated$inboundSchema: z.ZodType<
  IntegrationsConnectionEntityPaginated,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.nullable(z.array(IntegrationsConnectionEntity$inboundSchema))
    .optional(),
  pagination: z.nullable(NullablePaginationEntity$inboundSchema).optional(),
});

/** @internal */
export type IntegrationsConnectionEntityPaginated$Outbound = {
  data?: Array<IntegrationsConnectionEntity$Outbound> | null | undefined;
  pagination?: NullablePaginationEntity$Outbound | null | undefined;
};

/** @internal */
export const IntegrationsConnectionEntityPaginated$outboundSchema: z.ZodType<
  IntegrationsConnectionEntityPaginated$Outbound,
  z.ZodTypeDef,
  IntegrationsConnectionEntityPaginated
> = z.object({
  data: z.nullable(z.array(IntegrationsConnectionEntity$outboundSchema))
    .optional(),
  pagination: z.nullable(NullablePaginationEntity$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IntegrationsConnectionEntityPaginated$ {
  /** @deprecated use `IntegrationsConnectionEntityPaginated$inboundSchema` instead. */
  export const inboundSchema =
    IntegrationsConnectionEntityPaginated$inboundSchema;
  /** @deprecated use `IntegrationsConnectionEntityPaginated$outboundSchema` instead. */
  export const outboundSchema =
    IntegrationsConnectionEntityPaginated$outboundSchema;
  /** @deprecated use `IntegrationsConnectionEntityPaginated$Outbound` instead. */
  export type Outbound = IntegrationsConnectionEntityPaginated$Outbound;
}

export function integrationsConnectionEntityPaginatedToJSON(
  integrationsConnectionEntityPaginated: IntegrationsConnectionEntityPaginated,
): string {
  return JSON.stringify(
    IntegrationsConnectionEntityPaginated$outboundSchema.parse(
      integrationsConnectionEntityPaginated,
    ),
  );
}

export function integrationsConnectionEntityPaginatedFromJSON(
  jsonString: string,
): SafeParseResult<IntegrationsConnectionEntityPaginated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      IntegrationsConnectionEntityPaginated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IntegrationsConnectionEntityPaginated' from JSON`,
  );
}
