/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update an existing generic chat message on an incident.
 */
export type UpdateIncidentChatMessage = {
  body: string;
};

/** @internal */
export const UpdateIncidentChatMessage$inboundSchema: z.ZodType<
  UpdateIncidentChatMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  body: z.string(),
});

/** @internal */
export type UpdateIncidentChatMessage$Outbound = {
  body: string;
};

/** @internal */
export const UpdateIncidentChatMessage$outboundSchema: z.ZodType<
  UpdateIncidentChatMessage$Outbound,
  z.ZodTypeDef,
  UpdateIncidentChatMessage
> = z.object({
  body: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentChatMessage$ {
  /** @deprecated use `UpdateIncidentChatMessage$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentChatMessage$inboundSchema;
  /** @deprecated use `UpdateIncidentChatMessage$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentChatMessage$outboundSchema;
  /** @deprecated use `UpdateIncidentChatMessage$Outbound` instead. */
  export type Outbound = UpdateIncidentChatMessage$Outbound;
}

export function updateIncidentChatMessageToJSON(
  updateIncidentChatMessage: UpdateIncidentChatMessage,
): string {
  return JSON.stringify(
    UpdateIncidentChatMessage$outboundSchema.parse(updateIncidentChatMessage),
  );
}

export function updateIncidentChatMessageFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentChatMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentChatMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentChatMessage' from JSON`,
  );
}
