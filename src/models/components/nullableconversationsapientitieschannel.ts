/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableConversationsAPIEntitiesChannel = {
  name?: string | null | undefined;
};

/** @internal */
export const NullableConversationsAPIEntitiesChannel$inboundSchema: z.ZodType<
  NullableConversationsAPIEntitiesChannel,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.nullable(z.string()).optional(),
});

/** @internal */
export type NullableConversationsAPIEntitiesChannel$Outbound = {
  name?: string | null | undefined;
};

/** @internal */
export const NullableConversationsAPIEntitiesChannel$outboundSchema: z.ZodType<
  NullableConversationsAPIEntitiesChannel$Outbound,
  z.ZodTypeDef,
  NullableConversationsAPIEntitiesChannel
> = z.object({
  name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableConversationsAPIEntitiesChannel$ {
  /** @deprecated use `NullableConversationsAPIEntitiesChannel$inboundSchema` instead. */
  export const inboundSchema =
    NullableConversationsAPIEntitiesChannel$inboundSchema;
  /** @deprecated use `NullableConversationsAPIEntitiesChannel$outboundSchema` instead. */
  export const outboundSchema =
    NullableConversationsAPIEntitiesChannel$outboundSchema;
  /** @deprecated use `NullableConversationsAPIEntitiesChannel$Outbound` instead. */
  export type Outbound = NullableConversationsAPIEntitiesChannel$Outbound;
}

export function nullableConversationsAPIEntitiesChannelToJSON(
  nullableConversationsAPIEntitiesChannel:
    NullableConversationsAPIEntitiesChannel,
): string {
  return JSON.stringify(
    NullableConversationsAPIEntitiesChannel$outboundSchema.parse(
      nullableConversationsAPIEntitiesChannel,
    ),
  );
}

export function nullableConversationsAPIEntitiesChannelFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableConversationsAPIEntitiesChannel,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableConversationsAPIEntitiesChannel$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'NullableConversationsAPIEntitiesChannel' from JSON`,
  );
}
