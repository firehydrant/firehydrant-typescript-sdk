/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateTaskListTaskListItem = {
  /**
   * A summary of the task
   */
  summary: string;
  /**
   * A long-form description for the task if additional context is helpful
   */
  description?: string | null | undefined;
};

/**
 * Updates a task list's attributes and task list items
 */
export type UpdateTaskList = {
  name?: string | null | undefined;
  description?: string | null | undefined;
  taskListItems?: Array<UpdateTaskListTaskListItem> | null | undefined;
};

/** @internal */
export const UpdateTaskListTaskListItem$inboundSchema: z.ZodType<
  UpdateTaskListTaskListItem,
  z.ZodTypeDef,
  unknown
> = z.object({
  summary: z.string(),
  description: z.nullable(z.string()).optional(),
});

/** @internal */
export type UpdateTaskListTaskListItem$Outbound = {
  summary: string;
  description?: string | null | undefined;
};

/** @internal */
export const UpdateTaskListTaskListItem$outboundSchema: z.ZodType<
  UpdateTaskListTaskListItem$Outbound,
  z.ZodTypeDef,
  UpdateTaskListTaskListItem
> = z.object({
  summary: z.string(),
  description: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTaskListTaskListItem$ {
  /** @deprecated use `UpdateTaskListTaskListItem$inboundSchema` instead. */
  export const inboundSchema = UpdateTaskListTaskListItem$inboundSchema;
  /** @deprecated use `UpdateTaskListTaskListItem$outboundSchema` instead. */
  export const outboundSchema = UpdateTaskListTaskListItem$outboundSchema;
  /** @deprecated use `UpdateTaskListTaskListItem$Outbound` instead. */
  export type Outbound = UpdateTaskListTaskListItem$Outbound;
}

export function updateTaskListTaskListItemToJSON(
  updateTaskListTaskListItem: UpdateTaskListTaskListItem,
): string {
  return JSON.stringify(
    UpdateTaskListTaskListItem$outboundSchema.parse(updateTaskListTaskListItem),
  );
}

export function updateTaskListTaskListItemFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTaskListTaskListItem, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTaskListTaskListItem$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTaskListTaskListItem' from JSON`,
  );
}

/** @internal */
export const UpdateTaskList$inboundSchema: z.ZodType<
  UpdateTaskList,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  task_list_items: z.nullable(
    z.array(z.lazy(() => UpdateTaskListTaskListItem$inboundSchema)),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "task_list_items": "taskListItems",
  });
});

/** @internal */
export type UpdateTaskList$Outbound = {
  name?: string | null | undefined;
  description?: string | null | undefined;
  task_list_items?:
    | Array<UpdateTaskListTaskListItem$Outbound>
    | null
    | undefined;
};

/** @internal */
export const UpdateTaskList$outboundSchema: z.ZodType<
  UpdateTaskList$Outbound,
  z.ZodTypeDef,
  UpdateTaskList
> = z.object({
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  taskListItems: z.nullable(
    z.array(z.lazy(() => UpdateTaskListTaskListItem$outboundSchema)),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    taskListItems: "task_list_items",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTaskList$ {
  /** @deprecated use `UpdateTaskList$inboundSchema` instead. */
  export const inboundSchema = UpdateTaskList$inboundSchema;
  /** @deprecated use `UpdateTaskList$outboundSchema` instead. */
  export const outboundSchema = UpdateTaskList$outboundSchema;
  /** @deprecated use `UpdateTaskList$Outbound` instead. */
  export type Outbound = UpdateTaskList$Outbound;
}

export function updateTaskListToJSON(updateTaskList: UpdateTaskList): string {
  return JSON.stringify(UpdateTaskList$outboundSchema.parse(updateTaskList));
}

export function updateTaskListFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTaskList, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTaskList$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTaskList' from JSON`,
  );
}
