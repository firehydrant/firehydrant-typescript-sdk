/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type IntegrationsStatuspageSeverityEntity = {
  severitySlug?: string | undefined;
  remoteStatus?: string | undefined;
};

/** @internal */
export const IntegrationsStatuspageSeverityEntity$inboundSchema: z.ZodType<
  IntegrationsStatuspageSeverityEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  severity_slug: z.string().optional(),
  remote_status: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "severity_slug": "severitySlug",
    "remote_status": "remoteStatus",
  });
});

/** @internal */
export type IntegrationsStatuspageSeverityEntity$Outbound = {
  severity_slug?: string | undefined;
  remote_status?: string | undefined;
};

/** @internal */
export const IntegrationsStatuspageSeverityEntity$outboundSchema: z.ZodType<
  IntegrationsStatuspageSeverityEntity$Outbound,
  z.ZodTypeDef,
  IntegrationsStatuspageSeverityEntity
> = z.object({
  severitySlug: z.string().optional(),
  remoteStatus: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    severitySlug: "severity_slug",
    remoteStatus: "remote_status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IntegrationsStatuspageSeverityEntity$ {
  /** @deprecated use `IntegrationsStatuspageSeverityEntity$inboundSchema` instead. */
  export const inboundSchema =
    IntegrationsStatuspageSeverityEntity$inboundSchema;
  /** @deprecated use `IntegrationsStatuspageSeverityEntity$outboundSchema` instead. */
  export const outboundSchema =
    IntegrationsStatuspageSeverityEntity$outboundSchema;
  /** @deprecated use `IntegrationsStatuspageSeverityEntity$Outbound` instead. */
  export type Outbound = IntegrationsStatuspageSeverityEntity$Outbound;
}

export function integrationsStatuspageSeverityEntityToJSON(
  integrationsStatuspageSeverityEntity: IntegrationsStatuspageSeverityEntity,
): string {
  return JSON.stringify(
    IntegrationsStatuspageSeverityEntity$outboundSchema.parse(
      integrationsStatuspageSeverityEntity,
    ),
  );
}

export function integrationsStatuspageSeverityEntityFromJSON(
  jsonString: string,
): SafeParseResult<IntegrationsStatuspageSeverityEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      IntegrationsStatuspageSeverityEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IntegrationsStatuspageSeverityEntity' from JSON`,
  );
}
