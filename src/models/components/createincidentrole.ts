/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Create a new incident role
 */
export type CreateIncidentRole = {
  name: string;
  summary: string;
  description?: string | null | undefined;
};

/** @internal */
export const CreateIncidentRole$inboundSchema: z.ZodType<
  CreateIncidentRole,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  summary: z.string(),
  description: z.nullable(z.string()).optional(),
});

/** @internal */
export type CreateIncidentRole$Outbound = {
  name: string;
  summary: string;
  description?: string | null | undefined;
};

/** @internal */
export const CreateIncidentRole$outboundSchema: z.ZodType<
  CreateIncidentRole$Outbound,
  z.ZodTypeDef,
  CreateIncidentRole
> = z.object({
  name: z.string(),
  summary: z.string(),
  description: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateIncidentRole$ {
  /** @deprecated use `CreateIncidentRole$inboundSchema` instead. */
  export const inboundSchema = CreateIncidentRole$inboundSchema;
  /** @deprecated use `CreateIncidentRole$outboundSchema` instead. */
  export const outboundSchema = CreateIncidentRole$outboundSchema;
  /** @deprecated use `CreateIncidentRole$Outbound` instead. */
  export type Outbound = CreateIncidentRole$Outbound;
}

export function createIncidentRoleToJSON(
  createIncidentRole: CreateIncidentRole,
): string {
  return JSON.stringify(
    CreateIncidentRole$outboundSchema.parse(createIncidentRole),
  );
}

export function createIncidentRoleFromJSON(
  jsonString: string,
): SafeParseResult<CreateIncidentRole, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateIncidentRole$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateIncidentRole' from JSON`,
  );
}
