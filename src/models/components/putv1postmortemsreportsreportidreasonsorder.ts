/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Reorder a contributing factor
 */
export type PutV1PostMortemsReportsReportIdReasonsOrder = {
  oldPosition: number;
  newPosition: number;
};

/** @internal */
export const PutV1PostMortemsReportsReportIdReasonsOrder$inboundSchema:
  z.ZodType<
    PutV1PostMortemsReportsReportIdReasonsOrder,
    z.ZodTypeDef,
    unknown
  > = z.object({
    old_position: z.number().int(),
    new_position: z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      "old_position": "oldPosition",
      "new_position": "newPosition",
    });
  });

/** @internal */
export type PutV1PostMortemsReportsReportIdReasonsOrder$Outbound = {
  old_position: number;
  new_position: number;
};

/** @internal */
export const PutV1PostMortemsReportsReportIdReasonsOrder$outboundSchema:
  z.ZodType<
    PutV1PostMortemsReportsReportIdReasonsOrder$Outbound,
    z.ZodTypeDef,
    PutV1PostMortemsReportsReportIdReasonsOrder
  > = z.object({
    oldPosition: z.number().int(),
    newPosition: z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      oldPosition: "old_position",
      newPosition: "new_position",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1PostMortemsReportsReportIdReasonsOrder$ {
  /** @deprecated use `PutV1PostMortemsReportsReportIdReasonsOrder$inboundSchema` instead. */
  export const inboundSchema =
    PutV1PostMortemsReportsReportIdReasonsOrder$inboundSchema;
  /** @deprecated use `PutV1PostMortemsReportsReportIdReasonsOrder$outboundSchema` instead. */
  export const outboundSchema =
    PutV1PostMortemsReportsReportIdReasonsOrder$outboundSchema;
  /** @deprecated use `PutV1PostMortemsReportsReportIdReasonsOrder$Outbound` instead. */
  export type Outbound = PutV1PostMortemsReportsReportIdReasonsOrder$Outbound;
}

export function putV1PostMortemsReportsReportIdReasonsOrderToJSON(
  putV1PostMortemsReportsReportIdReasonsOrder:
    PutV1PostMortemsReportsReportIdReasonsOrder,
): string {
  return JSON.stringify(
    PutV1PostMortemsReportsReportIdReasonsOrder$outboundSchema.parse(
      putV1PostMortemsReportsReportIdReasonsOrder,
    ),
  );
}

export function putV1PostMortemsReportsReportIdReasonsOrderFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV1PostMortemsReportsReportIdReasonsOrder,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV1PostMortemsReportsReportIdReasonsOrder$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutV1PostMortemsReportsReportIdReasonsOrder' from JSON`,
  );
}
