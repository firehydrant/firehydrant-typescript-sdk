/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type TaskListItemEntity = {
  summary?: string | undefined;
  description?: string | undefined;
};

/** @internal */
export const TaskListItemEntity$inboundSchema: z.ZodType<
  TaskListItemEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  summary: z.string().optional(),
  description: z.string().optional(),
});

/** @internal */
export type TaskListItemEntity$Outbound = {
  summary?: string | undefined;
  description?: string | undefined;
};

/** @internal */
export const TaskListItemEntity$outboundSchema: z.ZodType<
  TaskListItemEntity$Outbound,
  z.ZodTypeDef,
  TaskListItemEntity
> = z.object({
  summary: z.string().optional(),
  description: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskListItemEntity$ {
  /** @deprecated use `TaskListItemEntity$inboundSchema` instead. */
  export const inboundSchema = TaskListItemEntity$inboundSchema;
  /** @deprecated use `TaskListItemEntity$outboundSchema` instead. */
  export const outboundSchema = TaskListItemEntity$outboundSchema;
  /** @deprecated use `TaskListItemEntity$Outbound` instead. */
  export type Outbound = TaskListItemEntity$Outbound;
}

export function taskListItemEntityToJSON(
  taskListItemEntity: TaskListItemEntity,
): string {
  return JSON.stringify(
    TaskListItemEntity$outboundSchema.parse(taskListItemEntity),
  );
}

export function taskListItemEntityFromJSON(
  jsonString: string,
): SafeParseResult<TaskListItemEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TaskListItemEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TaskListItemEntity' from JSON`,
  );
}
