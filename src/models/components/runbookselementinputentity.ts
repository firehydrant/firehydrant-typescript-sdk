/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RunbooksElementInputEntity = {
  label?: string | undefined;
  placeholder?: string | undefined;
  defaultValue?: string | undefined;
  required?: boolean | undefined;
};

/** @internal */
export const RunbooksElementInputEntity$inboundSchema: z.ZodType<
  RunbooksElementInputEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  default_value: z.string().optional(),
  required: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    "default_value": "defaultValue",
  });
});

/** @internal */
export type RunbooksElementInputEntity$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  default_value?: string | undefined;
  required?: boolean | undefined;
};

/** @internal */
export const RunbooksElementInputEntity$outboundSchema: z.ZodType<
  RunbooksElementInputEntity$Outbound,
  z.ZodTypeDef,
  RunbooksElementInputEntity
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  defaultValue: z.string().optional(),
  required: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    defaultValue: "default_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbooksElementInputEntity$ {
  /** @deprecated use `RunbooksElementInputEntity$inboundSchema` instead. */
  export const inboundSchema = RunbooksElementInputEntity$inboundSchema;
  /** @deprecated use `RunbooksElementInputEntity$outboundSchema` instead. */
  export const outboundSchema = RunbooksElementInputEntity$outboundSchema;
  /** @deprecated use `RunbooksElementInputEntity$Outbound` instead. */
  export type Outbound = RunbooksElementInputEntity$Outbound;
}

export function runbooksElementInputEntityToJSON(
  runbooksElementInputEntity: RunbooksElementInputEntity,
): string {
  return JSON.stringify(
    RunbooksElementInputEntity$outboundSchema.parse(runbooksElementInputEntity),
  );
}

export function runbooksElementInputEntityFromJSON(
  jsonString: string,
): SafeParseResult<RunbooksElementInputEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunbooksElementInputEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunbooksElementInputEntity' from JSON`,
  );
}
