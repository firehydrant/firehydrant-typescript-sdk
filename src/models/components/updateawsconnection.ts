/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update the AWS connection with the provided data.
 */
export type UpdateAwsConnection = {
  awsAccountId?: string | null | undefined;
  targetArn?: string | null | undefined;
  connectionStatus?: string | null | undefined;
};

/** @internal */
export const UpdateAwsConnection$inboundSchema: z.ZodType<
  UpdateAwsConnection,
  z.ZodTypeDef,
  unknown
> = z.object({
  aws_account_id: z.nullable(z.string()).optional(),
  target_arn: z.nullable(z.string()).optional(),
  connection_status: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "aws_account_id": "awsAccountId",
    "target_arn": "targetArn",
    "connection_status": "connectionStatus",
  });
});

/** @internal */
export type UpdateAwsConnection$Outbound = {
  aws_account_id?: string | null | undefined;
  target_arn?: string | null | undefined;
  connection_status?: string | null | undefined;
};

/** @internal */
export const UpdateAwsConnection$outboundSchema: z.ZodType<
  UpdateAwsConnection$Outbound,
  z.ZodTypeDef,
  UpdateAwsConnection
> = z.object({
  awsAccountId: z.nullable(z.string()).optional(),
  targetArn: z.nullable(z.string()).optional(),
  connectionStatus: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    awsAccountId: "aws_account_id",
    targetArn: "target_arn",
    connectionStatus: "connection_status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAwsConnection$ {
  /** @deprecated use `UpdateAwsConnection$inboundSchema` instead. */
  export const inboundSchema = UpdateAwsConnection$inboundSchema;
  /** @deprecated use `UpdateAwsConnection$outboundSchema` instead. */
  export const outboundSchema = UpdateAwsConnection$outboundSchema;
  /** @deprecated use `UpdateAwsConnection$Outbound` instead. */
  export type Outbound = UpdateAwsConnection$Outbound;
}

export function updateAwsConnectionToJSON(
  updateAwsConnection: UpdateAwsConnection,
): string {
  return JSON.stringify(
    UpdateAwsConnection$outboundSchema.parse(updateAwsConnection),
  );
}

export function updateAwsConnectionFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAwsConnection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateAwsConnection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAwsConnection' from JSON`,
  );
}
