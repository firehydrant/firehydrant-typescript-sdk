/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update a ticket's attributes
 */
export type PatchV1TicketingTicketsTicketId = {
  summary?: string | undefined;
  description?: string | undefined;
  state?: string | undefined;
  type?: string | undefined;
  priorityId?: string | undefined;
  /**
   * List of tags for the ticket
   */
  tagList?: Array<string> | undefined;
};

/** @internal */
export const PatchV1TicketingTicketsTicketId$inboundSchema: z.ZodType<
  PatchV1TicketingTicketsTicketId,
  z.ZodTypeDef,
  unknown
> = z.object({
  summary: z.string().optional(),
  description: z.string().optional(),
  state: z.string().optional(),
  type: z.string().optional(),
  priority_id: z.string().optional(),
  tag_list: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "priority_id": "priorityId",
    "tag_list": "tagList",
  });
});

/** @internal */
export type PatchV1TicketingTicketsTicketId$Outbound = {
  summary?: string | undefined;
  description?: string | undefined;
  state?: string | undefined;
  type?: string | undefined;
  priority_id?: string | undefined;
  tag_list?: Array<string> | undefined;
};

/** @internal */
export const PatchV1TicketingTicketsTicketId$outboundSchema: z.ZodType<
  PatchV1TicketingTicketsTicketId$Outbound,
  z.ZodTypeDef,
  PatchV1TicketingTicketsTicketId
> = z.object({
  summary: z.string().optional(),
  description: z.string().optional(),
  state: z.string().optional(),
  type: z.string().optional(),
  priorityId: z.string().optional(),
  tagList: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    priorityId: "priority_id",
    tagList: "tag_list",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1TicketingTicketsTicketId$ {
  /** @deprecated use `PatchV1TicketingTicketsTicketId$inboundSchema` instead. */
  export const inboundSchema = PatchV1TicketingTicketsTicketId$inboundSchema;
  /** @deprecated use `PatchV1TicketingTicketsTicketId$outboundSchema` instead. */
  export const outboundSchema = PatchV1TicketingTicketsTicketId$outboundSchema;
  /** @deprecated use `PatchV1TicketingTicketsTicketId$Outbound` instead. */
  export type Outbound = PatchV1TicketingTicketsTicketId$Outbound;
}

export function patchV1TicketingTicketsTicketIdToJSON(
  patchV1TicketingTicketsTicketId: PatchV1TicketingTicketsTicketId,
): string {
  return JSON.stringify(
    PatchV1TicketingTicketsTicketId$outboundSchema.parse(
      patchV1TicketingTicketsTicketId,
    ),
  );
}

export function patchV1TicketingTicketsTicketIdFromJSON(
  jsonString: string,
): SafeParseResult<PatchV1TicketingTicketsTicketId, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchV1TicketingTicketsTicketId$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchV1TicketingTicketsTicketId' from JSON`,
  );
}
