/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Add a new contributing factor to an incident
 */
export type PostV1PostMortemsReportsReportIdReasons = {
  summary: string;
};

/** @internal */
export const PostV1PostMortemsReportsReportIdReasons$inboundSchema: z.ZodType<
  PostV1PostMortemsReportsReportIdReasons,
  z.ZodTypeDef,
  unknown
> = z.object({
  summary: z.string(),
});

/** @internal */
export type PostV1PostMortemsReportsReportIdReasons$Outbound = {
  summary: string;
};

/** @internal */
export const PostV1PostMortemsReportsReportIdReasons$outboundSchema: z.ZodType<
  PostV1PostMortemsReportsReportIdReasons$Outbound,
  z.ZodTypeDef,
  PostV1PostMortemsReportsReportIdReasons
> = z.object({
  summary: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1PostMortemsReportsReportIdReasons$ {
  /** @deprecated use `PostV1PostMortemsReportsReportIdReasons$inboundSchema` instead. */
  export const inboundSchema =
    PostV1PostMortemsReportsReportIdReasons$inboundSchema;
  /** @deprecated use `PostV1PostMortemsReportsReportIdReasons$outboundSchema` instead. */
  export const outboundSchema =
    PostV1PostMortemsReportsReportIdReasons$outboundSchema;
  /** @deprecated use `PostV1PostMortemsReportsReportIdReasons$Outbound` instead. */
  export type Outbound = PostV1PostMortemsReportsReportIdReasons$Outbound;
}

export function postV1PostMortemsReportsReportIdReasonsToJSON(
  postV1PostMortemsReportsReportIdReasons:
    PostV1PostMortemsReportsReportIdReasons,
): string {
  return JSON.stringify(
    PostV1PostMortemsReportsReportIdReasons$outboundSchema.parse(
      postV1PostMortemsReportsReportIdReasons,
    ),
  );
}

export function postV1PostMortemsReportsReportIdReasonsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV1PostMortemsReportsReportIdReasons,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV1PostMortemsReportsReportIdReasons$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV1PostMortemsReportsReportIdReasons' from JSON`,
  );
}
