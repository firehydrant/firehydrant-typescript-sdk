/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update an identity for the change entry
 */
export type UpdateChangeIdentity = {
  type: string;
  value: string;
};

/** @internal */
export const UpdateChangeIdentity$inboundSchema: z.ZodType<
  UpdateChangeIdentity,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.string(),
  value: z.string(),
});

/** @internal */
export type UpdateChangeIdentity$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const UpdateChangeIdentity$outboundSchema: z.ZodType<
  UpdateChangeIdentity$Outbound,
  z.ZodTypeDef,
  UpdateChangeIdentity
> = z.object({
  type: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateChangeIdentity$ {
  /** @deprecated use `UpdateChangeIdentity$inboundSchema` instead. */
  export const inboundSchema = UpdateChangeIdentity$inboundSchema;
  /** @deprecated use `UpdateChangeIdentity$outboundSchema` instead. */
  export const outboundSchema = UpdateChangeIdentity$outboundSchema;
  /** @deprecated use `UpdateChangeIdentity$Outbound` instead. */
  export type Outbound = UpdateChangeIdentity$Outbound;
}

export function updateChangeIdentityToJSON(
  updateChangeIdentity: UpdateChangeIdentity,
): string {
  return JSON.stringify(
    UpdateChangeIdentity$outboundSchema.parse(updateChangeIdentity),
  );
}

export function updateChangeIdentityFromJSON(
  jsonString: string,
): SafeParseResult<UpdateChangeIdentity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateChangeIdentity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateChangeIdentity' from JSON`,
  );
}
