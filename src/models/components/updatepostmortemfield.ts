/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update a field value on a post mortem report
 */
export type UpdatePostMortemField = {
  value: string;
};

/** @internal */
export const UpdatePostMortemField$inboundSchema: z.ZodType<
  UpdatePostMortemField,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type UpdatePostMortemField$Outbound = {
  value: string;
};

/** @internal */
export const UpdatePostMortemField$outboundSchema: z.ZodType<
  UpdatePostMortemField$Outbound,
  z.ZodTypeDef,
  UpdatePostMortemField
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePostMortemField$ {
  /** @deprecated use `UpdatePostMortemField$inboundSchema` instead. */
  export const inboundSchema = UpdatePostMortemField$inboundSchema;
  /** @deprecated use `UpdatePostMortemField$outboundSchema` instead. */
  export const outboundSchema = UpdatePostMortemField$outboundSchema;
  /** @deprecated use `UpdatePostMortemField$Outbound` instead. */
  export type Outbound = UpdatePostMortemField$Outbound;
}

export function updatePostMortemFieldToJSON(
  updatePostMortemField: UpdatePostMortemField,
): string {
  return JSON.stringify(
    UpdatePostMortemField$outboundSchema.parse(updatePostMortemField),
  );
}

export function updatePostMortemFieldFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePostMortemField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePostMortemField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePostMortemField' from JSON`,
  );
}
