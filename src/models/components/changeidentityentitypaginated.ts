/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ChangeIdentityEntity,
  ChangeIdentityEntity$inboundSchema,
  ChangeIdentityEntity$Outbound,
  ChangeIdentityEntity$outboundSchema,
} from "./changeidentityentity.js";
import {
  PaginationEntity,
  PaginationEntity$inboundSchema,
  PaginationEntity$Outbound,
  PaginationEntity$outboundSchema,
} from "./paginationentity.js";

/**
 * ChangeIdentityEntityPaginated model
 */
export type ChangeIdentityEntityPaginated = {
  data?: Array<ChangeIdentityEntity> | undefined;
  pagination?: PaginationEntity | undefined;
};

/** @internal */
export const ChangeIdentityEntityPaginated$inboundSchema: z.ZodType<
  ChangeIdentityEntityPaginated,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(ChangeIdentityEntity$inboundSchema).optional(),
  pagination: PaginationEntity$inboundSchema.optional(),
});

/** @internal */
export type ChangeIdentityEntityPaginated$Outbound = {
  data?: Array<ChangeIdentityEntity$Outbound> | undefined;
  pagination?: PaginationEntity$Outbound | undefined;
};

/** @internal */
export const ChangeIdentityEntityPaginated$outboundSchema: z.ZodType<
  ChangeIdentityEntityPaginated$Outbound,
  z.ZodTypeDef,
  ChangeIdentityEntityPaginated
> = z.object({
  data: z.array(ChangeIdentityEntity$outboundSchema).optional(),
  pagination: PaginationEntity$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChangeIdentityEntityPaginated$ {
  /** @deprecated use `ChangeIdentityEntityPaginated$inboundSchema` instead. */
  export const inboundSchema = ChangeIdentityEntityPaginated$inboundSchema;
  /** @deprecated use `ChangeIdentityEntityPaginated$outboundSchema` instead. */
  export const outboundSchema = ChangeIdentityEntityPaginated$outboundSchema;
  /** @deprecated use `ChangeIdentityEntityPaginated$Outbound` instead. */
  export type Outbound = ChangeIdentityEntityPaginated$Outbound;
}

export function changeIdentityEntityPaginatedToJSON(
  changeIdentityEntityPaginated: ChangeIdentityEntityPaginated,
): string {
  return JSON.stringify(
    ChangeIdentityEntityPaginated$outboundSchema.parse(
      changeIdentityEntityPaginated,
    ),
  );
}

export function changeIdentityEntityPaginatedFromJSON(
  jsonString: string,
): SafeParseResult<ChangeIdentityEntityPaginated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChangeIdentityEntityPaginated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChangeIdentityEntityPaginated' from JSON`,
  );
}
