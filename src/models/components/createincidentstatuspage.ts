/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Add a status page to an incident.
 */
export type CreateIncidentStatusPage = {
  integrationSlug: string;
  integrationId: string;
  title?: string | null | undefined;
};

/** @internal */
export const CreateIncidentStatusPage$inboundSchema: z.ZodType<
  CreateIncidentStatusPage,
  z.ZodTypeDef,
  unknown
> = z.object({
  integration_slug: z.string(),
  integration_id: z.string(),
  title: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "integration_slug": "integrationSlug",
    "integration_id": "integrationId",
  });
});

/** @internal */
export type CreateIncidentStatusPage$Outbound = {
  integration_slug: string;
  integration_id: string;
  title?: string | null | undefined;
};

/** @internal */
export const CreateIncidentStatusPage$outboundSchema: z.ZodType<
  CreateIncidentStatusPage$Outbound,
  z.ZodTypeDef,
  CreateIncidentStatusPage
> = z.object({
  integrationSlug: z.string(),
  integrationId: z.string(),
  title: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    integrationSlug: "integration_slug",
    integrationId: "integration_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateIncidentStatusPage$ {
  /** @deprecated use `CreateIncidentStatusPage$inboundSchema` instead. */
  export const inboundSchema = CreateIncidentStatusPage$inboundSchema;
  /** @deprecated use `CreateIncidentStatusPage$outboundSchema` instead. */
  export const outboundSchema = CreateIncidentStatusPage$outboundSchema;
  /** @deprecated use `CreateIncidentStatusPage$Outbound` instead. */
  export type Outbound = CreateIncidentStatusPage$Outbound;
}

export function createIncidentStatusPageToJSON(
  createIncidentStatusPage: CreateIncidentStatusPage,
): string {
  return JSON.stringify(
    CreateIncidentStatusPage$outboundSchema.parse(createIncidentStatusPage),
  );
}

export function createIncidentStatusPageFromJSON(
  jsonString: string,
): SafeParseResult<CreateIncidentStatusPage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateIncidentStatusPage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateIncidentStatusPage' from JSON`,
  );
}
