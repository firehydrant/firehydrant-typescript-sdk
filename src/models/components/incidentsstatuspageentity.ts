/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  IntegrationEntity,
  IntegrationEntity$inboundSchema,
  IntegrationEntity$Outbound,
  IntegrationEntity$outboundSchema,
} from "./integrationentity.js";

/**
 * Incidents_StatusPageEntity model
 */
export type IncidentsStatusPageEntity = {
  id?: string | undefined;
  url?: string | undefined;
  externalId?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  integration?: IntegrationEntity | undefined;
};

/** @internal */
export const IncidentsStatusPageEntity$inboundSchema: z.ZodType<
  IncidentsStatusPageEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  url: z.string().optional(),
  external_id: z.string().optional(),
  name: z.string().optional(),
  display_name: z.string().optional(),
  integration: IntegrationEntity$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "external_id": "externalId",
    "display_name": "displayName",
  });
});

/** @internal */
export type IncidentsStatusPageEntity$Outbound = {
  id?: string | undefined;
  url?: string | undefined;
  external_id?: string | undefined;
  name?: string | undefined;
  display_name?: string | undefined;
  integration?: IntegrationEntity$Outbound | undefined;
};

/** @internal */
export const IncidentsStatusPageEntity$outboundSchema: z.ZodType<
  IncidentsStatusPageEntity$Outbound,
  z.ZodTypeDef,
  IncidentsStatusPageEntity
> = z.object({
  id: z.string().optional(),
  url: z.string().optional(),
  externalId: z.string().optional(),
  name: z.string().optional(),
  displayName: z.string().optional(),
  integration: IntegrationEntity$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    externalId: "external_id",
    displayName: "display_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IncidentsStatusPageEntity$ {
  /** @deprecated use `IncidentsStatusPageEntity$inboundSchema` instead. */
  export const inboundSchema = IncidentsStatusPageEntity$inboundSchema;
  /** @deprecated use `IncidentsStatusPageEntity$outboundSchema` instead. */
  export const outboundSchema = IncidentsStatusPageEntity$outboundSchema;
  /** @deprecated use `IncidentsStatusPageEntity$Outbound` instead. */
  export type Outbound = IncidentsStatusPageEntity$Outbound;
}

export function incidentsStatusPageEntityToJSON(
  incidentsStatusPageEntity: IncidentsStatusPageEntity,
): string {
  return JSON.stringify(
    IncidentsStatusPageEntity$outboundSchema.parse(incidentsStatusPageEntity),
  );
}

export function incidentsStatusPageEntityFromJSON(
  jsonString: string,
): SafeParseResult<IncidentsStatusPageEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IncidentsStatusPageEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IncidentsStatusPageEntity' from JSON`,
  );
}
