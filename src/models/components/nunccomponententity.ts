/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NuncComponentEntity = {
  infrastructureType?: string | undefined;
  infrastructureId?: string | undefined;
  label?: string | undefined;
  position?: number | undefined;
  componentGroupId?: string | undefined;
};

/** @internal */
export const NuncComponentEntity$inboundSchema: z.ZodType<
  NuncComponentEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  infrastructure_type: z.string().optional(),
  infrastructure_id: z.string().optional(),
  label: z.string().optional(),
  position: z.number().int().optional(),
  component_group_id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "infrastructure_type": "infrastructureType",
    "infrastructure_id": "infrastructureId",
    "component_group_id": "componentGroupId",
  });
});

/** @internal */
export type NuncComponentEntity$Outbound = {
  infrastructure_type?: string | undefined;
  infrastructure_id?: string | undefined;
  label?: string | undefined;
  position?: number | undefined;
  component_group_id?: string | undefined;
};

/** @internal */
export const NuncComponentEntity$outboundSchema: z.ZodType<
  NuncComponentEntity$Outbound,
  z.ZodTypeDef,
  NuncComponentEntity
> = z.object({
  infrastructureType: z.string().optional(),
  infrastructureId: z.string().optional(),
  label: z.string().optional(),
  position: z.number().int().optional(),
  componentGroupId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    infrastructureType: "infrastructure_type",
    infrastructureId: "infrastructure_id",
    componentGroupId: "component_group_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NuncComponentEntity$ {
  /** @deprecated use `NuncComponentEntity$inboundSchema` instead. */
  export const inboundSchema = NuncComponentEntity$inboundSchema;
  /** @deprecated use `NuncComponentEntity$outboundSchema` instead. */
  export const outboundSchema = NuncComponentEntity$outboundSchema;
  /** @deprecated use `NuncComponentEntity$Outbound` instead. */
  export type Outbound = NuncComponentEntity$Outbound;
}

export function nuncComponentEntityToJSON(
  nuncComponentEntity: NuncComponentEntity,
): string {
  return JSON.stringify(
    NuncComponentEntity$outboundSchema.parse(nuncComponentEntity),
  );
}

export function nuncComponentEntityFromJSON(
  jsonString: string,
): SafeParseResult<NuncComponentEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NuncComponentEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NuncComponentEntity' from JSON`,
  );
}
