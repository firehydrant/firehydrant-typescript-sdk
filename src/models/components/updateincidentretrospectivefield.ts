/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update retrospective field value
 */
export type UpdateIncidentRetrospectiveField = {
  /**
   * The ID of the dynamic input field to update.
   */
  dynamicInputFieldId?: string | null | undefined;
  /**
   * The value to set for the field.
   */
  value: number;
};

/** @internal */
export const UpdateIncidentRetrospectiveField$inboundSchema: z.ZodType<
  UpdateIncidentRetrospectiveField,
  z.ZodTypeDef,
  unknown
> = z.object({
  dynamic_input_field_id: z.nullable(z.string()).optional(),
  value: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "dynamic_input_field_id": "dynamicInputFieldId",
  });
});

/** @internal */
export type UpdateIncidentRetrospectiveField$Outbound = {
  dynamic_input_field_id?: string | null | undefined;
  value: number;
};

/** @internal */
export const UpdateIncidentRetrospectiveField$outboundSchema: z.ZodType<
  UpdateIncidentRetrospectiveField$Outbound,
  z.ZodTypeDef,
  UpdateIncidentRetrospectiveField
> = z.object({
  dynamicInputFieldId: z.nullable(z.string()).optional(),
  value: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    dynamicInputFieldId: "dynamic_input_field_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentRetrospectiveField$ {
  /** @deprecated use `UpdateIncidentRetrospectiveField$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentRetrospectiveField$inboundSchema;
  /** @deprecated use `UpdateIncidentRetrospectiveField$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentRetrospectiveField$outboundSchema;
  /** @deprecated use `UpdateIncidentRetrospectiveField$Outbound` instead. */
  export type Outbound = UpdateIncidentRetrospectiveField$Outbound;
}

export function updateIncidentRetrospectiveFieldToJSON(
  updateIncidentRetrospectiveField: UpdateIncidentRetrospectiveField,
): string {
  return JSON.stringify(
    UpdateIncidentRetrospectiveField$outboundSchema.parse(
      updateIncidentRetrospectiveField,
    ),
  );
}

export function updateIncidentRetrospectiveFieldFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentRetrospectiveField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentRetrospectiveField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentRetrospectiveField' from JSON`,
  );
}
