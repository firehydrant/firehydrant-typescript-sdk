/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update a specific priority
 */
export type PatchV1PrioritiesPrioritySlug = {
  slug?: string | undefined;
  description?: string | undefined;
  default?: boolean | undefined;
};

/** @internal */
export const PatchV1PrioritiesPrioritySlug$inboundSchema: z.ZodType<
  PatchV1PrioritiesPrioritySlug,
  z.ZodTypeDef,
  unknown
> = z.object({
  slug: z.string().optional(),
  description: z.string().optional(),
  default: z.boolean().optional(),
});

/** @internal */
export type PatchV1PrioritiesPrioritySlug$Outbound = {
  slug?: string | undefined;
  description?: string | undefined;
  default?: boolean | undefined;
};

/** @internal */
export const PatchV1PrioritiesPrioritySlug$outboundSchema: z.ZodType<
  PatchV1PrioritiesPrioritySlug$Outbound,
  z.ZodTypeDef,
  PatchV1PrioritiesPrioritySlug
> = z.object({
  slug: z.string().optional(),
  description: z.string().optional(),
  default: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1PrioritiesPrioritySlug$ {
  /** @deprecated use `PatchV1PrioritiesPrioritySlug$inboundSchema` instead. */
  export const inboundSchema = PatchV1PrioritiesPrioritySlug$inboundSchema;
  /** @deprecated use `PatchV1PrioritiesPrioritySlug$outboundSchema` instead. */
  export const outboundSchema = PatchV1PrioritiesPrioritySlug$outboundSchema;
  /** @deprecated use `PatchV1PrioritiesPrioritySlug$Outbound` instead. */
  export type Outbound = PatchV1PrioritiesPrioritySlug$Outbound;
}

export function patchV1PrioritiesPrioritySlugToJSON(
  patchV1PrioritiesPrioritySlug: PatchV1PrioritiesPrioritySlug,
): string {
  return JSON.stringify(
    PatchV1PrioritiesPrioritySlug$outboundSchema.parse(
      patchV1PrioritiesPrioritySlug,
    ),
  );
}

export function patchV1PrioritiesPrioritySlugFromJSON(
  jsonString: string,
): SafeParseResult<PatchV1PrioritiesPrioritySlug, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchV1PrioritiesPrioritySlug$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchV1PrioritiesPrioritySlug' from JSON`,
  );
}
