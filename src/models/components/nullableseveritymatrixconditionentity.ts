/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * SeverityMatrix_ConditionEntity model
 */
export type NullableSeverityMatrixConditionEntity = {
  id?: string | null | undefined;
  name?: string | null | undefined;
  /**
   * Position is used to determine ordering of conditions in API responses and dropdowns. The condition with the lowest position (typically 0) will be considered the Default Condition
   */
  position?: number | null | undefined;
};

/** @internal */
export const NullableSeverityMatrixConditionEntity$inboundSchema: z.ZodType<
  NullableSeverityMatrixConditionEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  position: z.nullable(z.number().int()).optional(),
});

/** @internal */
export type NullableSeverityMatrixConditionEntity$Outbound = {
  id?: string | null | undefined;
  name?: string | null | undefined;
  position?: number | null | undefined;
};

/** @internal */
export const NullableSeverityMatrixConditionEntity$outboundSchema: z.ZodType<
  NullableSeverityMatrixConditionEntity$Outbound,
  z.ZodTypeDef,
  NullableSeverityMatrixConditionEntity
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  position: z.nullable(z.number().int()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableSeverityMatrixConditionEntity$ {
  /** @deprecated use `NullableSeverityMatrixConditionEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableSeverityMatrixConditionEntity$inboundSchema;
  /** @deprecated use `NullableSeverityMatrixConditionEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableSeverityMatrixConditionEntity$outboundSchema;
  /** @deprecated use `NullableSeverityMatrixConditionEntity$Outbound` instead. */
  export type Outbound = NullableSeverityMatrixConditionEntity$Outbound;
}

export function nullableSeverityMatrixConditionEntityToJSON(
  nullableSeverityMatrixConditionEntity: NullableSeverityMatrixConditionEntity,
): string {
  return JSON.stringify(
    NullableSeverityMatrixConditionEntity$outboundSchema.parse(
      nullableSeverityMatrixConditionEntity,
    ),
  );
}

export function nullableSeverityMatrixConditionEntityFromJSON(
  jsonString: string,
): SafeParseResult<NullableSeverityMatrixConditionEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      NullableSeverityMatrixConditionEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableSeverityMatrixConditionEntity' from JSON`,
  );
}
