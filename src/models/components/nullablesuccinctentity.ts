/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableSuccinctEntity = {
  id?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const NullableSuccinctEntity$inboundSchema: z.ZodType<
  NullableSuccinctEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/** @internal */
export type NullableSuccinctEntity$Outbound = {
  id?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const NullableSuccinctEntity$outboundSchema: z.ZodType<
  NullableSuccinctEntity$Outbound,
  z.ZodTypeDef,
  NullableSuccinctEntity
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableSuccinctEntity$ {
  /** @deprecated use `NullableSuccinctEntity$inboundSchema` instead. */
  export const inboundSchema = NullableSuccinctEntity$inboundSchema;
  /** @deprecated use `NullableSuccinctEntity$outboundSchema` instead. */
  export const outboundSchema = NullableSuccinctEntity$outboundSchema;
  /** @deprecated use `NullableSuccinctEntity$Outbound` instead. */
  export type Outbound = NullableSuccinctEntity$Outbound;
}

export function nullableSuccinctEntityToJSON(
  nullableSuccinctEntity: NullableSuccinctEntity,
): string {
  return JSON.stringify(
    NullableSuccinctEntity$outboundSchema.parse(nullableSuccinctEntity),
  );
}

export function nullableSuccinctEntityFromJSON(
  jsonString: string,
): SafeParseResult<NullableSuccinctEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NullableSuccinctEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableSuccinctEntity' from JSON`,
  );
}
