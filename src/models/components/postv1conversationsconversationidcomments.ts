/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * ALPHA - Creates a comment for a project
 */
export type PostV1ConversationsConversationIdComments = {
  /**
   * Text body of comment
   */
  body: string;
};

/** @internal */
export const PostV1ConversationsConversationIdComments$inboundSchema: z.ZodType<
  PostV1ConversationsConversationIdComments,
  z.ZodTypeDef,
  unknown
> = z.object({
  body: z.string(),
});

/** @internal */
export type PostV1ConversationsConversationIdComments$Outbound = {
  body: string;
};

/** @internal */
export const PostV1ConversationsConversationIdComments$outboundSchema:
  z.ZodType<
    PostV1ConversationsConversationIdComments$Outbound,
    z.ZodTypeDef,
    PostV1ConversationsConversationIdComments
  > = z.object({
    body: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1ConversationsConversationIdComments$ {
  /** @deprecated use `PostV1ConversationsConversationIdComments$inboundSchema` instead. */
  export const inboundSchema =
    PostV1ConversationsConversationIdComments$inboundSchema;
  /** @deprecated use `PostV1ConversationsConversationIdComments$outboundSchema` instead. */
  export const outboundSchema =
    PostV1ConversationsConversationIdComments$outboundSchema;
  /** @deprecated use `PostV1ConversationsConversationIdComments$Outbound` instead. */
  export type Outbound = PostV1ConversationsConversationIdComments$Outbound;
}

export function postV1ConversationsConversationIdCommentsToJSON(
  postV1ConversationsConversationIdComments:
    PostV1ConversationsConversationIdComments,
): string {
  return JSON.stringify(
    PostV1ConversationsConversationIdComments$outboundSchema.parse(
      postV1ConversationsConversationIdComments,
    ),
  );
}

export function postV1ConversationsConversationIdCommentsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV1ConversationsConversationIdComments,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV1ConversationsConversationIdComments$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV1ConversationsConversationIdComments' from JSON`,
  );
}
