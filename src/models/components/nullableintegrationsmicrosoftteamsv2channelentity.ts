/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NullableIncidentEntity,
  NullableIncidentEntity$inboundSchema,
  NullableIncidentEntity$Outbound,
  NullableIncidentEntity$outboundSchema,
} from "./nullableincidententity.js";

export type NullableIntegrationsMicrosoftTeamsV2ChannelEntity = {
  id?: string | null | undefined;
  channelId?: string | null | undefined;
  channelName?: string | null | undefined;
  msTeamId?: string | null | undefined;
  teamName?: string | null | undefined;
  channelUrl?: string | null | undefined;
  status?: string | null | undefined;
  incident?: NullableIncidentEntity | null | undefined;
};

/** @internal */
export const NullableIntegrationsMicrosoftTeamsV2ChannelEntity$inboundSchema:
  z.ZodType<
    NullableIntegrationsMicrosoftTeamsV2ChannelEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    channel_id: z.nullable(z.string()).optional(),
    channel_name: z.nullable(z.string()).optional(),
    ms_team_id: z.nullable(z.string()).optional(),
    team_name: z.nullable(z.string()).optional(),
    channel_url: z.nullable(z.string()).optional(),
    status: z.nullable(z.string()).optional(),
    incident: z.nullable(NullableIncidentEntity$inboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      "channel_id": "channelId",
      "channel_name": "channelName",
      "ms_team_id": "msTeamId",
      "team_name": "teamName",
      "channel_url": "channelUrl",
    });
  });

/** @internal */
export type NullableIntegrationsMicrosoftTeamsV2ChannelEntity$Outbound = {
  id?: string | null | undefined;
  channel_id?: string | null | undefined;
  channel_name?: string | null | undefined;
  ms_team_id?: string | null | undefined;
  team_name?: string | null | undefined;
  channel_url?: string | null | undefined;
  status?: string | null | undefined;
  incident?: NullableIncidentEntity$Outbound | null | undefined;
};

/** @internal */
export const NullableIntegrationsMicrosoftTeamsV2ChannelEntity$outboundSchema:
  z.ZodType<
    NullableIntegrationsMicrosoftTeamsV2ChannelEntity$Outbound,
    z.ZodTypeDef,
    NullableIntegrationsMicrosoftTeamsV2ChannelEntity
  > = z.object({
    id: z.nullable(z.string()).optional(),
    channelId: z.nullable(z.string()).optional(),
    channelName: z.nullable(z.string()).optional(),
    msTeamId: z.nullable(z.string()).optional(),
    teamName: z.nullable(z.string()).optional(),
    channelUrl: z.nullable(z.string()).optional(),
    status: z.nullable(z.string()).optional(),
    incident: z.nullable(NullableIncidentEntity$outboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      channelId: "channel_id",
      channelName: "channel_name",
      msTeamId: "ms_team_id",
      teamName: "team_name",
      channelUrl: "channel_url",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableIntegrationsMicrosoftTeamsV2ChannelEntity$ {
  /** @deprecated use `NullableIntegrationsMicrosoftTeamsV2ChannelEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableIntegrationsMicrosoftTeamsV2ChannelEntity$inboundSchema;
  /** @deprecated use `NullableIntegrationsMicrosoftTeamsV2ChannelEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableIntegrationsMicrosoftTeamsV2ChannelEntity$outboundSchema;
  /** @deprecated use `NullableIntegrationsMicrosoftTeamsV2ChannelEntity$Outbound` instead. */
  export type Outbound =
    NullableIntegrationsMicrosoftTeamsV2ChannelEntity$Outbound;
}

export function nullableIntegrationsMicrosoftTeamsV2ChannelEntityToJSON(
  nullableIntegrationsMicrosoftTeamsV2ChannelEntity:
    NullableIntegrationsMicrosoftTeamsV2ChannelEntity,
): string {
  return JSON.stringify(
    NullableIntegrationsMicrosoftTeamsV2ChannelEntity$outboundSchema.parse(
      nullableIntegrationsMicrosoftTeamsV2ChannelEntity,
    ),
  );
}

export function nullableIntegrationsMicrosoftTeamsV2ChannelEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableIntegrationsMicrosoftTeamsV2ChannelEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableIntegrationsMicrosoftTeamsV2ChannelEntity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'NullableIntegrationsMicrosoftTeamsV2ChannelEntity' from JSON`,
  );
}
