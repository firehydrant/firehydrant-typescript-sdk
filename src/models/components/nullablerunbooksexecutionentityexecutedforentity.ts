/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableRunbooksExecutionEntityExecutedForEntity = {
  id?: string | null | undefined;
  type?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const NullableRunbooksExecutionEntityExecutedForEntity$inboundSchema:
  z.ZodType<
    NullableRunbooksExecutionEntityExecutedForEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
  });

/** @internal */
export type NullableRunbooksExecutionEntityExecutedForEntity$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const NullableRunbooksExecutionEntityExecutedForEntity$outboundSchema:
  z.ZodType<
    NullableRunbooksExecutionEntityExecutedForEntity$Outbound,
    z.ZodTypeDef,
    NullableRunbooksExecutionEntityExecutedForEntity
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableRunbooksExecutionEntityExecutedForEntity$ {
  /** @deprecated use `NullableRunbooksExecutionEntityExecutedForEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableRunbooksExecutionEntityExecutedForEntity$inboundSchema;
  /** @deprecated use `NullableRunbooksExecutionEntityExecutedForEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableRunbooksExecutionEntityExecutedForEntity$outboundSchema;
  /** @deprecated use `NullableRunbooksExecutionEntityExecutedForEntity$Outbound` instead. */
  export type Outbound =
    NullableRunbooksExecutionEntityExecutedForEntity$Outbound;
}

export function nullableRunbooksExecutionEntityExecutedForEntityToJSON(
  nullableRunbooksExecutionEntityExecutedForEntity:
    NullableRunbooksExecutionEntityExecutedForEntity,
): string {
  return JSON.stringify(
    NullableRunbooksExecutionEntityExecutedForEntity$outboundSchema.parse(
      nullableRunbooksExecutionEntityExecutedForEntity,
    ),
  );
}

export function nullableRunbooksExecutionEntityExecutedForEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableRunbooksExecutionEntityExecutedForEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableRunbooksExecutionEntityExecutedForEntity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'NullableRunbooksExecutionEntityExecutedForEntity' from JSON`,
  );
}
