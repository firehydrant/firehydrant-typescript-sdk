/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity = {
  /**
   * The time bucket
   */
  bucket?: string | null | undefined;
  /**
   * The total number of alerts
   */
  totalAlerts?: number | null | undefined;
  /**
   * The number of alerts marked as noise
   */
  noisyAlerts?: number | null | undefined;
  /**
   * The percentage of alerts that are noise
   */
  percentage?: number | null | undefined;
};

/** @internal */
export const NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$inboundSchema:
  z.ZodType<
    NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    bucket: z.nullable(z.string()).optional(),
    total_alerts: z.nullable(z.number().int()).optional(),
    noisy_alerts: z.nullable(z.number().int()).optional(),
    percentage: z.nullable(z.number()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "total_alerts": "totalAlerts",
      "noisy_alerts": "noisyAlerts",
    });
  });

/** @internal */
export type NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$Outbound =
  {
    bucket?: string | null | undefined;
    total_alerts?: number | null | undefined;
    noisy_alerts?: number | null | undefined;
    percentage?: number | null | undefined;
  };

/** @internal */
export const NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$outboundSchema:
  z.ZodType<
    NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$Outbound,
    z.ZodTypeDef,
    NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity
  > = z.object({
    bucket: z.nullable(z.string()).optional(),
    totalAlerts: z.nullable(z.number().int()).optional(),
    noisyAlerts: z.nullable(z.number().int()).optional(),
    percentage: z.nullable(z.number()).optional(),
  }).transform((v) => {
    return remap$(v, {
      totalAlerts: "total_alerts",
      noisyAlerts: "noisy_alerts",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$ {
  /** @deprecated use `NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$inboundSchema;
  /** @deprecated use `NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$outboundSchema;
  /** @deprecated use `NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$Outbound` instead. */
  export type Outbound =
    NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$Outbound;
}

export function nullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntityToJSON(
  nullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity:
    NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity,
): string {
  return JSON.stringify(
    NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$outboundSchema
      .parse(nullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity),
  );
}

export function nullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'NullableSignalsAPIAnalyticsNoiseMetricsEntityMetricEntity' from JSON`,
  );
}
