/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Integrations_Statuspage_PageEntity model
 */
export type IntegrationsStatuspagePageEntity = {
  id?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const IntegrationsStatuspagePageEntity$inboundSchema: z.ZodType<
  IntegrationsStatuspagePageEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/** @internal */
export type IntegrationsStatuspagePageEntity$Outbound = {
  id?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const IntegrationsStatuspagePageEntity$outboundSchema: z.ZodType<
  IntegrationsStatuspagePageEntity$Outbound,
  z.ZodTypeDef,
  IntegrationsStatuspagePageEntity
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IntegrationsStatuspagePageEntity$ {
  /** @deprecated use `IntegrationsStatuspagePageEntity$inboundSchema` instead. */
  export const inboundSchema = IntegrationsStatuspagePageEntity$inboundSchema;
  /** @deprecated use `IntegrationsStatuspagePageEntity$outboundSchema` instead. */
  export const outboundSchema = IntegrationsStatuspagePageEntity$outboundSchema;
  /** @deprecated use `IntegrationsStatuspagePageEntity$Outbound` instead. */
  export type Outbound = IntegrationsStatuspagePageEntity$Outbound;
}

export function integrationsStatuspagePageEntityToJSON(
  integrationsStatuspagePageEntity: IntegrationsStatuspagePageEntity,
): string {
  return JSON.stringify(
    IntegrationsStatuspagePageEntity$outboundSchema.parse(
      integrationsStatuspagePageEntity,
    ),
  );
}

export function integrationsStatuspagePageEntityFromJSON(
  jsonString: string,
): SafeParseResult<IntegrationsStatuspagePageEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IntegrationsStatuspagePageEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IntegrationsStatuspagePageEntity' from JSON`,
  );
}
