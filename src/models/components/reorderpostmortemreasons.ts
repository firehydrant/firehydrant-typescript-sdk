/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update the order of contributing factors in a retrospective report
 */
export type ReorderPostMortemReasons = {
  oldPosition: number;
  newPosition: number;
};

/** @internal */
export const ReorderPostMortemReasons$inboundSchema: z.ZodType<
  ReorderPostMortemReasons,
  z.ZodTypeDef,
  unknown
> = z.object({
  old_position: z.number().int(),
  new_position: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "old_position": "oldPosition",
    "new_position": "newPosition",
  });
});

/** @internal */
export type ReorderPostMortemReasons$Outbound = {
  old_position: number;
  new_position: number;
};

/** @internal */
export const ReorderPostMortemReasons$outboundSchema: z.ZodType<
  ReorderPostMortemReasons$Outbound,
  z.ZodTypeDef,
  ReorderPostMortemReasons
> = z.object({
  oldPosition: z.number().int(),
  newPosition: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    oldPosition: "old_position",
    newPosition: "new_position",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReorderPostMortemReasons$ {
  /** @deprecated use `ReorderPostMortemReasons$inboundSchema` instead. */
  export const inboundSchema = ReorderPostMortemReasons$inboundSchema;
  /** @deprecated use `ReorderPostMortemReasons$outboundSchema` instead. */
  export const outboundSchema = ReorderPostMortemReasons$outboundSchema;
  /** @deprecated use `ReorderPostMortemReasons$Outbound` instead. */
  export type Outbound = ReorderPostMortemReasons$Outbound;
}

export function reorderPostMortemReasonsToJSON(
  reorderPostMortemReasons: ReorderPostMortemReasons,
): string {
  return JSON.stringify(
    ReorderPostMortemReasons$outboundSchema.parse(reorderPostMortemReasons),
  );
}

export function reorderPostMortemReasonsFromJSON(
  jsonString: string,
): SafeParseResult<ReorderPostMortemReasons, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ReorderPostMortemReasons$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReorderPostMortemReasons' from JSON`,
  );
}
