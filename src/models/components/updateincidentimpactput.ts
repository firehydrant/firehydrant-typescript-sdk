/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateIncidentImpactPutImpact = {
  id: string;
  conditionId: string;
};

export type UpdateIncidentImpactPutStatusPage = {
  id: string;
  integrationSlug: string;
};

/**
 * Allows updating an incident's impacted infrastructure, with the option to
 *
 * @remarks
 * move the incident into a different milestone and provide a note to update
 * the incident timeline and any attached status pages. If this method is
 * requested with the PUT verb, impacts will be completely replaced with the
 * information in the request body, even if not provided (effectively clearing
 * all impacts). If this method is requested with the PATCH verb, the provided
 * impacts will be added or updated, but no impacts will be removed.
 */
export type UpdateIncidentImpactPut = {
  note?: string | null | undefined;
  milestone?: string | null | undefined;
  impact?: Array<UpdateIncidentImpactPutImpact> | null | undefined;
  statusPages?: Array<UpdateIncidentImpactPutStatusPage> | null | undefined;
};

/** @internal */
export const UpdateIncidentImpactPutImpact$inboundSchema: z.ZodType<
  UpdateIncidentImpactPutImpact,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  condition_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "condition_id": "conditionId",
  });
});

/** @internal */
export type UpdateIncidentImpactPutImpact$Outbound = {
  id: string;
  condition_id: string;
};

/** @internal */
export const UpdateIncidentImpactPutImpact$outboundSchema: z.ZodType<
  UpdateIncidentImpactPutImpact$Outbound,
  z.ZodTypeDef,
  UpdateIncidentImpactPutImpact
> = z.object({
  id: z.string(),
  conditionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    conditionId: "condition_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentImpactPutImpact$ {
  /** @deprecated use `UpdateIncidentImpactPutImpact$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentImpactPutImpact$inboundSchema;
  /** @deprecated use `UpdateIncidentImpactPutImpact$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentImpactPutImpact$outboundSchema;
  /** @deprecated use `UpdateIncidentImpactPutImpact$Outbound` instead. */
  export type Outbound = UpdateIncidentImpactPutImpact$Outbound;
}

export function updateIncidentImpactPutImpactToJSON(
  updateIncidentImpactPutImpact: UpdateIncidentImpactPutImpact,
): string {
  return JSON.stringify(
    UpdateIncidentImpactPutImpact$outboundSchema.parse(
      updateIncidentImpactPutImpact,
    ),
  );
}

export function updateIncidentImpactPutImpactFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentImpactPutImpact, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentImpactPutImpact$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentImpactPutImpact' from JSON`,
  );
}

/** @internal */
export const UpdateIncidentImpactPutStatusPage$inboundSchema: z.ZodType<
  UpdateIncidentImpactPutStatusPage,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  integration_slug: z.string(),
}).transform((v) => {
  return remap$(v, {
    "integration_slug": "integrationSlug",
  });
});

/** @internal */
export type UpdateIncidentImpactPutStatusPage$Outbound = {
  id: string;
  integration_slug: string;
};

/** @internal */
export const UpdateIncidentImpactPutStatusPage$outboundSchema: z.ZodType<
  UpdateIncidentImpactPutStatusPage$Outbound,
  z.ZodTypeDef,
  UpdateIncidentImpactPutStatusPage
> = z.object({
  id: z.string(),
  integrationSlug: z.string(),
}).transform((v) => {
  return remap$(v, {
    integrationSlug: "integration_slug",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentImpactPutStatusPage$ {
  /** @deprecated use `UpdateIncidentImpactPutStatusPage$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentImpactPutStatusPage$inboundSchema;
  /** @deprecated use `UpdateIncidentImpactPutStatusPage$outboundSchema` instead. */
  export const outboundSchema =
    UpdateIncidentImpactPutStatusPage$outboundSchema;
  /** @deprecated use `UpdateIncidentImpactPutStatusPage$Outbound` instead. */
  export type Outbound = UpdateIncidentImpactPutStatusPage$Outbound;
}

export function updateIncidentImpactPutStatusPageToJSON(
  updateIncidentImpactPutStatusPage: UpdateIncidentImpactPutStatusPage,
): string {
  return JSON.stringify(
    UpdateIncidentImpactPutStatusPage$outboundSchema.parse(
      updateIncidentImpactPutStatusPage,
    ),
  );
}

export function updateIncidentImpactPutStatusPageFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentImpactPutStatusPage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentImpactPutStatusPage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentImpactPutStatusPage' from JSON`,
  );
}

/** @internal */
export const UpdateIncidentImpactPut$inboundSchema: z.ZodType<
  UpdateIncidentImpactPut,
  z.ZodTypeDef,
  unknown
> = z.object({
  note: z.nullable(z.string()).optional(),
  milestone: z.nullable(z.string()).optional(),
  impact: z.nullable(
    z.array(z.lazy(() => UpdateIncidentImpactPutImpact$inboundSchema)),
  ).optional(),
  status_pages: z.nullable(
    z.array(z.lazy(() => UpdateIncidentImpactPutStatusPage$inboundSchema)),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "status_pages": "statusPages",
  });
});

/** @internal */
export type UpdateIncidentImpactPut$Outbound = {
  note?: string | null | undefined;
  milestone?: string | null | undefined;
  impact?: Array<UpdateIncidentImpactPutImpact$Outbound> | null | undefined;
  status_pages?:
    | Array<UpdateIncidentImpactPutStatusPage$Outbound>
    | null
    | undefined;
};

/** @internal */
export const UpdateIncidentImpactPut$outboundSchema: z.ZodType<
  UpdateIncidentImpactPut$Outbound,
  z.ZodTypeDef,
  UpdateIncidentImpactPut
> = z.object({
  note: z.nullable(z.string()).optional(),
  milestone: z.nullable(z.string()).optional(),
  impact: z.nullable(
    z.array(z.lazy(() => UpdateIncidentImpactPutImpact$outboundSchema)),
  ).optional(),
  statusPages: z.nullable(
    z.array(z.lazy(() => UpdateIncidentImpactPutStatusPage$outboundSchema)),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    statusPages: "status_pages",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentImpactPut$ {
  /** @deprecated use `UpdateIncidentImpactPut$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentImpactPut$inboundSchema;
  /** @deprecated use `UpdateIncidentImpactPut$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentImpactPut$outboundSchema;
  /** @deprecated use `UpdateIncidentImpactPut$Outbound` instead. */
  export type Outbound = UpdateIncidentImpactPut$Outbound;
}

export function updateIncidentImpactPutToJSON(
  updateIncidentImpactPut: UpdateIncidentImpactPut,
): string {
  return JSON.stringify(
    UpdateIncidentImpactPut$outboundSchema.parse(updateIncidentImpactPut),
  );
}

export function updateIncidentImpactPutFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentImpactPut, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentImpactPut$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentImpactPut' from JSON`,
  );
}
