/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Creates a response for a checklist item
 */
export type PostV1ServicesServiceIdChecklistResponseChecklistId = {
  checkId: string;
  /**
   * Status of the check. 'true' if it's complete, 'false' if incomplete, or blank if not yet interacted with
   */
  status: boolean;
};

/** @internal */
export const PostV1ServicesServiceIdChecklistResponseChecklistId$inboundSchema:
  z.ZodType<
    PostV1ServicesServiceIdChecklistResponseChecklistId,
    z.ZodTypeDef,
    unknown
  > = z.object({
    check_id: z.string(),
    status: z.boolean(),
  }).transform((v) => {
    return remap$(v, {
      "check_id": "checkId",
    });
  });

/** @internal */
export type PostV1ServicesServiceIdChecklistResponseChecklistId$Outbound = {
  check_id: string;
  status: boolean;
};

/** @internal */
export const PostV1ServicesServiceIdChecklistResponseChecklistId$outboundSchema:
  z.ZodType<
    PostV1ServicesServiceIdChecklistResponseChecklistId$Outbound,
    z.ZodTypeDef,
    PostV1ServicesServiceIdChecklistResponseChecklistId
  > = z.object({
    checkId: z.string(),
    status: z.boolean(),
  }).transform((v) => {
    return remap$(v, {
      checkId: "check_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1ServicesServiceIdChecklistResponseChecklistId$ {
  /** @deprecated use `PostV1ServicesServiceIdChecklistResponseChecklistId$inboundSchema` instead. */
  export const inboundSchema =
    PostV1ServicesServiceIdChecklistResponseChecklistId$inboundSchema;
  /** @deprecated use `PostV1ServicesServiceIdChecklistResponseChecklistId$outboundSchema` instead. */
  export const outboundSchema =
    PostV1ServicesServiceIdChecklistResponseChecklistId$outboundSchema;
  /** @deprecated use `PostV1ServicesServiceIdChecklistResponseChecklistId$Outbound` instead. */
  export type Outbound =
    PostV1ServicesServiceIdChecklistResponseChecklistId$Outbound;
}

export function postV1ServicesServiceIdChecklistResponseChecklistIdToJSON(
  postV1ServicesServiceIdChecklistResponseChecklistId:
    PostV1ServicesServiceIdChecklistResponseChecklistId,
): string {
  return JSON.stringify(
    PostV1ServicesServiceIdChecklistResponseChecklistId$outboundSchema.parse(
      postV1ServicesServiceIdChecklistResponseChecklistId,
    ),
  );
}

export function postV1ServicesServiceIdChecklistResponseChecklistIdFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV1ServicesServiceIdChecklistResponseChecklistId,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV1ServicesServiceIdChecklistResponseChecklistId$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV1ServicesServiceIdChecklistResponseChecklistId' from JSON`,
  );
}
