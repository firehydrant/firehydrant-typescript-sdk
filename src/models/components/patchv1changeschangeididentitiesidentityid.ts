/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update an identity
 */
export type PatchV1ChangesChangeIdIdentitiesIdentityId = {
  type: string;
  value: string;
};

/** @internal */
export const PatchV1ChangesChangeIdIdentitiesIdentityId$inboundSchema:
  z.ZodType<PatchV1ChangesChangeIdIdentitiesIdentityId, z.ZodTypeDef, unknown> =
    z.object({
      type: z.string(),
      value: z.string(),
    });

/** @internal */
export type PatchV1ChangesChangeIdIdentitiesIdentityId$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const PatchV1ChangesChangeIdIdentitiesIdentityId$outboundSchema:
  z.ZodType<
    PatchV1ChangesChangeIdIdentitiesIdentityId$Outbound,
    z.ZodTypeDef,
    PatchV1ChangesChangeIdIdentitiesIdentityId
  > = z.object({
    type: z.string(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1ChangesChangeIdIdentitiesIdentityId$ {
  /** @deprecated use `PatchV1ChangesChangeIdIdentitiesIdentityId$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1ChangesChangeIdIdentitiesIdentityId$inboundSchema;
  /** @deprecated use `PatchV1ChangesChangeIdIdentitiesIdentityId$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1ChangesChangeIdIdentitiesIdentityId$outboundSchema;
  /** @deprecated use `PatchV1ChangesChangeIdIdentitiesIdentityId$Outbound` instead. */
  export type Outbound = PatchV1ChangesChangeIdIdentitiesIdentityId$Outbound;
}

export function patchV1ChangesChangeIdIdentitiesIdentityIdToJSON(
  patchV1ChangesChangeIdIdentitiesIdentityId:
    PatchV1ChangesChangeIdIdentitiesIdentityId,
): string {
  return JSON.stringify(
    PatchV1ChangesChangeIdIdentitiesIdentityId$outboundSchema.parse(
      patchV1ChangesChangeIdIdentitiesIdentityId,
    ),
  );
}

export function patchV1ChangesChangeIdIdentitiesIdentityIdFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV1ChangesChangeIdIdentitiesIdentityId,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV1ChangesChangeIdIdentitiesIdentityId$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV1ChangesChangeIdIdentitiesIdentityId' from JSON`,
  );
}
