/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NullableSignalsAPITargetEntity,
  NullableSignalsAPITargetEntity$inboundSchema,
  NullableSignalsAPITargetEntity$Outbound,
  NullableSignalsAPITargetEntity$outboundSchema,
} from "./nullablesignalsapitargetentity.js";
import {
  NullableSuccinctEntity,
  NullableSuccinctEntity$inboundSchema,
  NullableSuccinctEntity$Outbound,
  NullableSuccinctEntity$outboundSchema,
} from "./nullablesuccinctentity.js";

export type NullableSignalsAPICallRouteStepEntity = {
  target?: NullableSignalsAPITargetEntity | null | undefined;
  position?: number | null | undefined;
  timeout?: string | null | undefined;
  onCallRotation?: NullableSuccinctEntity | null | undefined;
};

/** @internal */
export const NullableSignalsAPICallRouteStepEntity$inboundSchema: z.ZodType<
  NullableSignalsAPICallRouteStepEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  target: z.nullable(NullableSignalsAPITargetEntity$inboundSchema).optional(),
  position: z.nullable(z.number().int()).optional(),
  timeout: z.nullable(z.string()).optional(),
  on_call_rotation: z.nullable(NullableSuccinctEntity$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "on_call_rotation": "onCallRotation",
  });
});

/** @internal */
export type NullableSignalsAPICallRouteStepEntity$Outbound = {
  target?: NullableSignalsAPITargetEntity$Outbound | null | undefined;
  position?: number | null | undefined;
  timeout?: string | null | undefined;
  on_call_rotation?: NullableSuccinctEntity$Outbound | null | undefined;
};

/** @internal */
export const NullableSignalsAPICallRouteStepEntity$outboundSchema: z.ZodType<
  NullableSignalsAPICallRouteStepEntity$Outbound,
  z.ZodTypeDef,
  NullableSignalsAPICallRouteStepEntity
> = z.object({
  target: z.nullable(NullableSignalsAPITargetEntity$outboundSchema).optional(),
  position: z.nullable(z.number().int()).optional(),
  timeout: z.nullable(z.string()).optional(),
  onCallRotation: z.nullable(NullableSuccinctEntity$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    onCallRotation: "on_call_rotation",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableSignalsAPICallRouteStepEntity$ {
  /** @deprecated use `NullableSignalsAPICallRouteStepEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableSignalsAPICallRouteStepEntity$inboundSchema;
  /** @deprecated use `NullableSignalsAPICallRouteStepEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableSignalsAPICallRouteStepEntity$outboundSchema;
  /** @deprecated use `NullableSignalsAPICallRouteStepEntity$Outbound` instead. */
  export type Outbound = NullableSignalsAPICallRouteStepEntity$Outbound;
}

export function nullableSignalsAPICallRouteStepEntityToJSON(
  nullableSignalsAPICallRouteStepEntity: NullableSignalsAPICallRouteStepEntity,
): string {
  return JSON.stringify(
    NullableSignalsAPICallRouteStepEntity$outboundSchema.parse(
      nullableSignalsAPICallRouteStepEntity,
    ),
  );
}

export function nullableSignalsAPICallRouteStepEntityFromJSON(
  jsonString: string,
): SafeParseResult<NullableSignalsAPICallRouteStepEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      NullableSignalsAPICallRouteStepEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableSignalsAPICallRouteStepEntity' from JSON`,
  );
}
