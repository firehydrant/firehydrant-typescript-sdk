/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Create a reaction on a comment
 */
export type CreateCommentReaction = {
  /**
   * CLDR short name of Unicode emojis
   */
  reaction: string;
};

/** @internal */
export const CreateCommentReaction$inboundSchema: z.ZodType<
  CreateCommentReaction,
  z.ZodTypeDef,
  unknown
> = z.object({
  reaction: z.string(),
});

/** @internal */
export type CreateCommentReaction$Outbound = {
  reaction: string;
};

/** @internal */
export const CreateCommentReaction$outboundSchema: z.ZodType<
  CreateCommentReaction$Outbound,
  z.ZodTypeDef,
  CreateCommentReaction
> = z.object({
  reaction: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCommentReaction$ {
  /** @deprecated use `CreateCommentReaction$inboundSchema` instead. */
  export const inboundSchema = CreateCommentReaction$inboundSchema;
  /** @deprecated use `CreateCommentReaction$outboundSchema` instead. */
  export const outboundSchema = CreateCommentReaction$outboundSchema;
  /** @deprecated use `CreateCommentReaction$Outbound` instead. */
  export type Outbound = CreateCommentReaction$Outbound;
}

export function createCommentReactionToJSON(
  createCommentReaction: CreateCommentReaction,
): string {
  return JSON.stringify(
    CreateCommentReaction$outboundSchema.parse(createCommentReaction),
  );
}

export function createCommentReactionFromJSON(
  jsonString: string,
): SafeParseResult<CreateCommentReaction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateCommentReaction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCommentReaction' from JSON`,
  );
}
