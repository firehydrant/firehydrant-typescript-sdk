/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableMetricsMetricsEntitySortEntity = {
  field?: string | null | undefined;
  direction?: string | null | undefined;
  limit?: number | null | undefined;
};

/** @internal */
export const NullableMetricsMetricsEntitySortEntity$inboundSchema: z.ZodType<
  NullableMetricsMetricsEntitySortEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  field: z.nullable(z.string()).optional(),
  direction: z.nullable(z.string()).optional(),
  limit: z.nullable(z.number().int()).optional(),
});

/** @internal */
export type NullableMetricsMetricsEntitySortEntity$Outbound = {
  field?: string | null | undefined;
  direction?: string | null | undefined;
  limit?: number | null | undefined;
};

/** @internal */
export const NullableMetricsMetricsEntitySortEntity$outboundSchema: z.ZodType<
  NullableMetricsMetricsEntitySortEntity$Outbound,
  z.ZodTypeDef,
  NullableMetricsMetricsEntitySortEntity
> = z.object({
  field: z.nullable(z.string()).optional(),
  direction: z.nullable(z.string()).optional(),
  limit: z.nullable(z.number().int()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableMetricsMetricsEntitySortEntity$ {
  /** @deprecated use `NullableMetricsMetricsEntitySortEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableMetricsMetricsEntitySortEntity$inboundSchema;
  /** @deprecated use `NullableMetricsMetricsEntitySortEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableMetricsMetricsEntitySortEntity$outboundSchema;
  /** @deprecated use `NullableMetricsMetricsEntitySortEntity$Outbound` instead. */
  export type Outbound = NullableMetricsMetricsEntitySortEntity$Outbound;
}

export function nullableMetricsMetricsEntitySortEntityToJSON(
  nullableMetricsMetricsEntitySortEntity:
    NullableMetricsMetricsEntitySortEntity,
): string {
  return JSON.stringify(
    NullableMetricsMetricsEntitySortEntity$outboundSchema.parse(
      nullableMetricsMetricsEntitySortEntity,
    ),
  );
}

export function nullableMetricsMetricsEntitySortEntityFromJSON(
  jsonString: string,
): SafeParseResult<NullableMetricsMetricsEntitySortEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      NullableMetricsMetricsEntitySortEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableMetricsMetricsEntitySortEntity' from JSON`,
  );
}
