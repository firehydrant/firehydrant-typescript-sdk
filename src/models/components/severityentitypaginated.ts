/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PaginationEntity,
  PaginationEntity$inboundSchema,
  PaginationEntity$Outbound,
  PaginationEntity$outboundSchema,
} from "./paginationentity.js";
import {
  SeverityEntity,
  SeverityEntity$inboundSchema,
  SeverityEntity$Outbound,
  SeverityEntity$outboundSchema,
} from "./severityentity.js";

/**
 * SeverityEntityPaginated model
 */
export type SeverityEntityPaginated = {
  data?: Array<SeverityEntity> | undefined;
  pagination?: PaginationEntity | undefined;
};

/** @internal */
export const SeverityEntityPaginated$inboundSchema: z.ZodType<
  SeverityEntityPaginated,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(SeverityEntity$inboundSchema).optional(),
  pagination: PaginationEntity$inboundSchema.optional(),
});

/** @internal */
export type SeverityEntityPaginated$Outbound = {
  data?: Array<SeverityEntity$Outbound> | undefined;
  pagination?: PaginationEntity$Outbound | undefined;
};

/** @internal */
export const SeverityEntityPaginated$outboundSchema: z.ZodType<
  SeverityEntityPaginated$Outbound,
  z.ZodTypeDef,
  SeverityEntityPaginated
> = z.object({
  data: z.array(SeverityEntity$outboundSchema).optional(),
  pagination: PaginationEntity$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SeverityEntityPaginated$ {
  /** @deprecated use `SeverityEntityPaginated$inboundSchema` instead. */
  export const inboundSchema = SeverityEntityPaginated$inboundSchema;
  /** @deprecated use `SeverityEntityPaginated$outboundSchema` instead. */
  export const outboundSchema = SeverityEntityPaginated$outboundSchema;
  /** @deprecated use `SeverityEntityPaginated$Outbound` instead. */
  export type Outbound = SeverityEntityPaginated$Outbound;
}

export function severityEntityPaginatedToJSON(
  severityEntityPaginated: SeverityEntityPaginated,
): string {
  return JSON.stringify(
    SeverityEntityPaginated$outboundSchema.parse(severityEntityPaginated),
  );
}

export function severityEntityPaginatedFromJSON(
  jsonString: string,
): SafeParseResult<SeverityEntityPaginated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SeverityEntityPaginated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SeverityEntityPaginated' from JSON`,
  );
}
