/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableNuncComponentGroupEntity = {
  id?: string | null | undefined;
  componentGroupId?: string | null | undefined;
  name?: string | null | undefined;
  position?: number | null | undefined;
};

/** @internal */
export const NullableNuncComponentGroupEntity$inboundSchema: z.ZodType<
  NullableNuncComponentGroupEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  component_group_id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  position: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "component_group_id": "componentGroupId",
  });
});

/** @internal */
export type NullableNuncComponentGroupEntity$Outbound = {
  id?: string | null | undefined;
  component_group_id?: string | null | undefined;
  name?: string | null | undefined;
  position?: number | null | undefined;
};

/** @internal */
export const NullableNuncComponentGroupEntity$outboundSchema: z.ZodType<
  NullableNuncComponentGroupEntity$Outbound,
  z.ZodTypeDef,
  NullableNuncComponentGroupEntity
> = z.object({
  id: z.nullable(z.string()).optional(),
  componentGroupId: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  position: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    componentGroupId: "component_group_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableNuncComponentGroupEntity$ {
  /** @deprecated use `NullableNuncComponentGroupEntity$inboundSchema` instead. */
  export const inboundSchema = NullableNuncComponentGroupEntity$inboundSchema;
  /** @deprecated use `NullableNuncComponentGroupEntity$outboundSchema` instead. */
  export const outboundSchema = NullableNuncComponentGroupEntity$outboundSchema;
  /** @deprecated use `NullableNuncComponentGroupEntity$Outbound` instead. */
  export type Outbound = NullableNuncComponentGroupEntity$Outbound;
}

export function nullableNuncComponentGroupEntityToJSON(
  nullableNuncComponentGroupEntity: NullableNuncComponentGroupEntity,
): string {
  return JSON.stringify(
    NullableNuncComponentGroupEntity$outboundSchema.parse(
      nullableNuncComponentGroupEntity,
    ),
  );
}

export function nullableNuncComponentGroupEntityFromJSON(
  jsonString: string,
): SafeParseResult<NullableNuncComponentGroupEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NullableNuncComponentGroupEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableNuncComponentGroupEntity' from JSON`,
  );
}
