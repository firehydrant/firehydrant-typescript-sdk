/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Routing mode for the call route
 */
export const CreateTeamCallRouteRoutingMode = {
  RoutingModeTakeMessage: "ROUTING_MODE_TAKE_MESSAGE",
  RoutingModeDirectConnect: "ROUTING_MODE_DIRECT_CONNECT",
} as const;
/**
 * Routing mode for the call route
 */
export type CreateTeamCallRouteRoutingMode = ClosedEnum<
  typeof CreateTeamCallRouteRoutingMode
>;

/**
 * Connect mode for the call route
 */
export const CreateTeamCallRouteConnectMode = {
  ConnectModeConference: "CONNECT_MODE_CONFERENCE",
  ConnectModeDirectDial: "CONNECT_MODE_DIRECT_DIAL",
} as const;
/**
 * Connect mode for the call route
 */
export type CreateTeamCallRouteConnectMode = ClosedEnum<
  typeof CreateTeamCallRouteConnectMode
>;

/**
 * Type of target
 */
export const CreateTeamCallRouteTargetType = {
  User: "User",
  OnCallSchedule: "OnCallSchedule",
} as const;
/**
 * Type of target
 */
export type CreateTeamCallRouteTargetType = ClosedEnum<
  typeof CreateTeamCallRouteTargetType
>;

export type CreateTeamCallRouteStep = {
  /**
   * Type of target
   */
  targetType: CreateTeamCallRouteTargetType;
  /**
   * ID of the target
   */
  targetId: string;
  /**
   * Timeout in seconds for the step
   */
  timeout: string;
};

/**
 * Target for the call route (required unless connect_mode is direct_dial)
 */
export type CreateTeamCallRouteTarget = {
  /**
   * Type of target
   */
  type: string;
  /**
   * ID of the target
   */
  id: string;
};

/**
 * Create a call route for a team
 */
export type CreateTeamCallRoute = {
  /**
   * Name of the call route
   */
  name: string;
  /**
   * Phone number to route calls to
   */
  phoneNumber: string;
  /**
   * Routing mode for the call route
   */
  routingMode: CreateTeamCallRouteRoutingMode;
  /**
   * Connect mode for the call route
   */
  connectMode?: CreateTeamCallRouteConnectMode | null | undefined;
  /**
   * Description of the call route
   */
  description?: string | null | undefined;
  /**
   * Greeting message for the call route
   */
  greetingMessage?: string | null | undefined;
  /**
   * Steps for the call route
   */
  steps?: Array<CreateTeamCallRouteStep> | null | undefined;
  /**
   * Target for the call route (required unless connect_mode is direct_dial)
   */
  target?: CreateTeamCallRouteTarget | null | undefined;
};

/** @internal */
export const CreateTeamCallRouteRoutingMode$inboundSchema: z.ZodNativeEnum<
  typeof CreateTeamCallRouteRoutingMode
> = z.nativeEnum(CreateTeamCallRouteRoutingMode);

/** @internal */
export const CreateTeamCallRouteRoutingMode$outboundSchema: z.ZodNativeEnum<
  typeof CreateTeamCallRouteRoutingMode
> = CreateTeamCallRouteRoutingMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTeamCallRouteRoutingMode$ {
  /** @deprecated use `CreateTeamCallRouteRoutingMode$inboundSchema` instead. */
  export const inboundSchema = CreateTeamCallRouteRoutingMode$inboundSchema;
  /** @deprecated use `CreateTeamCallRouteRoutingMode$outboundSchema` instead. */
  export const outboundSchema = CreateTeamCallRouteRoutingMode$outboundSchema;
}

/** @internal */
export const CreateTeamCallRouteConnectMode$inboundSchema: z.ZodNativeEnum<
  typeof CreateTeamCallRouteConnectMode
> = z.nativeEnum(CreateTeamCallRouteConnectMode);

/** @internal */
export const CreateTeamCallRouteConnectMode$outboundSchema: z.ZodNativeEnum<
  typeof CreateTeamCallRouteConnectMode
> = CreateTeamCallRouteConnectMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTeamCallRouteConnectMode$ {
  /** @deprecated use `CreateTeamCallRouteConnectMode$inboundSchema` instead. */
  export const inboundSchema = CreateTeamCallRouteConnectMode$inboundSchema;
  /** @deprecated use `CreateTeamCallRouteConnectMode$outboundSchema` instead. */
  export const outboundSchema = CreateTeamCallRouteConnectMode$outboundSchema;
}

/** @internal */
export const CreateTeamCallRouteTargetType$inboundSchema: z.ZodNativeEnum<
  typeof CreateTeamCallRouteTargetType
> = z.nativeEnum(CreateTeamCallRouteTargetType);

/** @internal */
export const CreateTeamCallRouteTargetType$outboundSchema: z.ZodNativeEnum<
  typeof CreateTeamCallRouteTargetType
> = CreateTeamCallRouteTargetType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTeamCallRouteTargetType$ {
  /** @deprecated use `CreateTeamCallRouteTargetType$inboundSchema` instead. */
  export const inboundSchema = CreateTeamCallRouteTargetType$inboundSchema;
  /** @deprecated use `CreateTeamCallRouteTargetType$outboundSchema` instead. */
  export const outboundSchema = CreateTeamCallRouteTargetType$outboundSchema;
}

/** @internal */
export const CreateTeamCallRouteStep$inboundSchema: z.ZodType<
  CreateTeamCallRouteStep,
  z.ZodTypeDef,
  unknown
> = z.object({
  target_type: CreateTeamCallRouteTargetType$inboundSchema,
  target_id: z.string(),
  timeout: z.string(),
}).transform((v) => {
  return remap$(v, {
    "target_type": "targetType",
    "target_id": "targetId",
  });
});

/** @internal */
export type CreateTeamCallRouteStep$Outbound = {
  target_type: string;
  target_id: string;
  timeout: string;
};

/** @internal */
export const CreateTeamCallRouteStep$outboundSchema: z.ZodType<
  CreateTeamCallRouteStep$Outbound,
  z.ZodTypeDef,
  CreateTeamCallRouteStep
> = z.object({
  targetType: CreateTeamCallRouteTargetType$outboundSchema,
  targetId: z.string(),
  timeout: z.string(),
}).transform((v) => {
  return remap$(v, {
    targetType: "target_type",
    targetId: "target_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTeamCallRouteStep$ {
  /** @deprecated use `CreateTeamCallRouteStep$inboundSchema` instead. */
  export const inboundSchema = CreateTeamCallRouteStep$inboundSchema;
  /** @deprecated use `CreateTeamCallRouteStep$outboundSchema` instead. */
  export const outboundSchema = CreateTeamCallRouteStep$outboundSchema;
  /** @deprecated use `CreateTeamCallRouteStep$Outbound` instead. */
  export type Outbound = CreateTeamCallRouteStep$Outbound;
}

export function createTeamCallRouteStepToJSON(
  createTeamCallRouteStep: CreateTeamCallRouteStep,
): string {
  return JSON.stringify(
    CreateTeamCallRouteStep$outboundSchema.parse(createTeamCallRouteStep),
  );
}

export function createTeamCallRouteStepFromJSON(
  jsonString: string,
): SafeParseResult<CreateTeamCallRouteStep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTeamCallRouteStep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTeamCallRouteStep' from JSON`,
  );
}

/** @internal */
export const CreateTeamCallRouteTarget$inboundSchema: z.ZodType<
  CreateTeamCallRouteTarget,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.string(),
  id: z.string(),
});

/** @internal */
export type CreateTeamCallRouteTarget$Outbound = {
  type: string;
  id: string;
};

/** @internal */
export const CreateTeamCallRouteTarget$outboundSchema: z.ZodType<
  CreateTeamCallRouteTarget$Outbound,
  z.ZodTypeDef,
  CreateTeamCallRouteTarget
> = z.object({
  type: z.string(),
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTeamCallRouteTarget$ {
  /** @deprecated use `CreateTeamCallRouteTarget$inboundSchema` instead. */
  export const inboundSchema = CreateTeamCallRouteTarget$inboundSchema;
  /** @deprecated use `CreateTeamCallRouteTarget$outboundSchema` instead. */
  export const outboundSchema = CreateTeamCallRouteTarget$outboundSchema;
  /** @deprecated use `CreateTeamCallRouteTarget$Outbound` instead. */
  export type Outbound = CreateTeamCallRouteTarget$Outbound;
}

export function createTeamCallRouteTargetToJSON(
  createTeamCallRouteTarget: CreateTeamCallRouteTarget,
): string {
  return JSON.stringify(
    CreateTeamCallRouteTarget$outboundSchema.parse(createTeamCallRouteTarget),
  );
}

export function createTeamCallRouteTargetFromJSON(
  jsonString: string,
): SafeParseResult<CreateTeamCallRouteTarget, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTeamCallRouteTarget$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTeamCallRouteTarget' from JSON`,
  );
}

/** @internal */
export const CreateTeamCallRoute$inboundSchema: z.ZodType<
  CreateTeamCallRoute,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  phone_number: z.string(),
  routing_mode: CreateTeamCallRouteRoutingMode$inboundSchema,
  connect_mode: z.nullable(CreateTeamCallRouteConnectMode$inboundSchema)
    .optional(),
  description: z.nullable(z.string()).optional(),
  greeting_message: z.nullable(z.string()).optional(),
  steps: z.nullable(
    z.array(z.lazy(() => CreateTeamCallRouteStep$inboundSchema)),
  ).optional(),
  target: z.nullable(z.lazy(() => CreateTeamCallRouteTarget$inboundSchema))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "phone_number": "phoneNumber",
    "routing_mode": "routingMode",
    "connect_mode": "connectMode",
    "greeting_message": "greetingMessage",
  });
});

/** @internal */
export type CreateTeamCallRoute$Outbound = {
  name: string;
  phone_number: string;
  routing_mode: string;
  connect_mode?: string | null | undefined;
  description?: string | null | undefined;
  greeting_message?: string | null | undefined;
  steps?: Array<CreateTeamCallRouteStep$Outbound> | null | undefined;
  target?: CreateTeamCallRouteTarget$Outbound | null | undefined;
};

/** @internal */
export const CreateTeamCallRoute$outboundSchema: z.ZodType<
  CreateTeamCallRoute$Outbound,
  z.ZodTypeDef,
  CreateTeamCallRoute
> = z.object({
  name: z.string(),
  phoneNumber: z.string(),
  routingMode: CreateTeamCallRouteRoutingMode$outboundSchema,
  connectMode: z.nullable(CreateTeamCallRouteConnectMode$outboundSchema)
    .optional(),
  description: z.nullable(z.string()).optional(),
  greetingMessage: z.nullable(z.string()).optional(),
  steps: z.nullable(
    z.array(z.lazy(() => CreateTeamCallRouteStep$outboundSchema)),
  ).optional(),
  target: z.nullable(z.lazy(() => CreateTeamCallRouteTarget$outboundSchema))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    phoneNumber: "phone_number",
    routingMode: "routing_mode",
    connectMode: "connect_mode",
    greetingMessage: "greeting_message",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTeamCallRoute$ {
  /** @deprecated use `CreateTeamCallRoute$inboundSchema` instead. */
  export const inboundSchema = CreateTeamCallRoute$inboundSchema;
  /** @deprecated use `CreateTeamCallRoute$outboundSchema` instead. */
  export const outboundSchema = CreateTeamCallRoute$outboundSchema;
  /** @deprecated use `CreateTeamCallRoute$Outbound` instead. */
  export type Outbound = CreateTeamCallRoute$Outbound;
}

export function createTeamCallRouteToJSON(
  createTeamCallRoute: CreateTeamCallRoute,
): string {
  return JSON.stringify(
    CreateTeamCallRoute$outboundSchema.parse(createTeamCallRoute),
  );
}

export function createTeamCallRouteFromJSON(
  jsonString: string,
): SafeParseResult<CreateTeamCallRoute, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTeamCallRoute$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTeamCallRoute' from JSON`,
  );
}
