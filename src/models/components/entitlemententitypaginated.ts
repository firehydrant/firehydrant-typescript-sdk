/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EntitlementEntity,
  EntitlementEntity$inboundSchema,
  EntitlementEntity$Outbound,
  EntitlementEntity$outboundSchema,
} from "./entitlemententity.js";
import {
  PaginationEntity,
  PaginationEntity$inboundSchema,
  PaginationEntity$Outbound,
  PaginationEntity$outboundSchema,
} from "./paginationentity.js";

/**
 * EntitlementEntityPaginated model
 */
export type EntitlementEntityPaginated = {
  data?: Array<EntitlementEntity> | undefined;
  pagination?: PaginationEntity | undefined;
};

/** @internal */
export const EntitlementEntityPaginated$inboundSchema: z.ZodType<
  EntitlementEntityPaginated,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(EntitlementEntity$inboundSchema).optional(),
  pagination: PaginationEntity$inboundSchema.optional(),
});

/** @internal */
export type EntitlementEntityPaginated$Outbound = {
  data?: Array<EntitlementEntity$Outbound> | undefined;
  pagination?: PaginationEntity$Outbound | undefined;
};

/** @internal */
export const EntitlementEntityPaginated$outboundSchema: z.ZodType<
  EntitlementEntityPaginated$Outbound,
  z.ZodTypeDef,
  EntitlementEntityPaginated
> = z.object({
  data: z.array(EntitlementEntity$outboundSchema).optional(),
  pagination: PaginationEntity$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntitlementEntityPaginated$ {
  /** @deprecated use `EntitlementEntityPaginated$inboundSchema` instead. */
  export const inboundSchema = EntitlementEntityPaginated$inboundSchema;
  /** @deprecated use `EntitlementEntityPaginated$outboundSchema` instead. */
  export const outboundSchema = EntitlementEntityPaginated$outboundSchema;
  /** @deprecated use `EntitlementEntityPaginated$Outbound` instead. */
  export type Outbound = EntitlementEntityPaginated$Outbound;
}

export function entitlementEntityPaginatedToJSON(
  entitlementEntityPaginated: EntitlementEntityPaginated,
): string {
  return JSON.stringify(
    EntitlementEntityPaginated$outboundSchema.parse(entitlementEntityPaginated),
  );
}

export function entitlementEntityPaginatedFromJSON(
  jsonString: string,
): SafeParseResult<EntitlementEntityPaginated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EntitlementEntityPaginated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EntitlementEntityPaginated' from JSON`,
  );
}
