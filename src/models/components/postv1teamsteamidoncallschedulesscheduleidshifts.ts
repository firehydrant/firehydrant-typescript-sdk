/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Create a Signals on-call shift in a schedule.
 */
export type PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts = {
  /**
   * The start time of the shift in ISO8601 format.
   */
  startTime: string;
  /**
   * The end time of the shift in ISO8601 format.
   */
  endTime: string;
  /**
   * The ID of the user who is on-call for the shift. If not provided, the shift will be unassigned.
   */
  userId?: string | undefined;
};

/** @internal */
export const PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$inboundSchema:
  z.ZodType<
    PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts,
    z.ZodTypeDef,
    unknown
  > = z.object({
    start_time: z.string(),
    end_time: z.string(),
    user_id: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "start_time": "startTime",
      "end_time": "endTime",
      "user_id": "userId",
    });
  });

/** @internal */
export type PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$Outbound = {
  start_time: string;
  end_time: string;
  user_id?: string | undefined;
};

/** @internal */
export const PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$outboundSchema:
  z.ZodType<
    PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$Outbound,
    z.ZodTypeDef,
    PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts
  > = z.object({
    startTime: z.string(),
    endTime: z.string(),
    userId: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      startTime: "start_time",
      endTime: "end_time",
      userId: "user_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$ {
  /** @deprecated use `PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$inboundSchema` instead. */
  export const inboundSchema =
    PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$inboundSchema;
  /** @deprecated use `PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$outboundSchema` instead. */
  export const outboundSchema =
    PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$outboundSchema;
  /** @deprecated use `PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$Outbound` instead. */
  export type Outbound =
    PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$Outbound;
}

export function postV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsToJSON(
  postV1TeamsTeamIdOnCallSchedulesScheduleIdShifts:
    PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts,
): string {
  return JSON.stringify(
    PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$outboundSchema.parse(
      postV1TeamsTeamIdOnCallSchedulesScheduleIdShifts,
    ),
  );
}

export function postV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV1TeamsTeamIdOnCallSchedulesScheduleIdShifts' from JSON`,
  );
}
