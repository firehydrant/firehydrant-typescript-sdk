/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update a specific saved search
 */
export type PatchV1SavedSearchesResourceTypeSavedSearchId = {
  isPrivate?: boolean | undefined;
  name?: string | undefined;
  filterValues?: { [k: string]: any } | undefined;
};

/** @internal */
export const PatchV1SavedSearchesResourceTypeSavedSearchId$inboundSchema:
  z.ZodType<
    PatchV1SavedSearchesResourceTypeSavedSearchId,
    z.ZodTypeDef,
    unknown
  > = z.object({
    is_private: z.boolean().optional(),
    name: z.string().optional(),
    filter_values: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "is_private": "isPrivate",
      "filter_values": "filterValues",
    });
  });

/** @internal */
export type PatchV1SavedSearchesResourceTypeSavedSearchId$Outbound = {
  is_private?: boolean | undefined;
  name?: string | undefined;
  filter_values?: { [k: string]: any } | undefined;
};

/** @internal */
export const PatchV1SavedSearchesResourceTypeSavedSearchId$outboundSchema:
  z.ZodType<
    PatchV1SavedSearchesResourceTypeSavedSearchId$Outbound,
    z.ZodTypeDef,
    PatchV1SavedSearchesResourceTypeSavedSearchId
  > = z.object({
    isPrivate: z.boolean().optional(),
    name: z.string().optional(),
    filterValues: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      isPrivate: "is_private",
      filterValues: "filter_values",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1SavedSearchesResourceTypeSavedSearchId$ {
  /** @deprecated use `PatchV1SavedSearchesResourceTypeSavedSearchId$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1SavedSearchesResourceTypeSavedSearchId$inboundSchema;
  /** @deprecated use `PatchV1SavedSearchesResourceTypeSavedSearchId$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1SavedSearchesResourceTypeSavedSearchId$outboundSchema;
  /** @deprecated use `PatchV1SavedSearchesResourceTypeSavedSearchId$Outbound` instead. */
  export type Outbound = PatchV1SavedSearchesResourceTypeSavedSearchId$Outbound;
}

export function patchV1SavedSearchesResourceTypeSavedSearchIdToJSON(
  patchV1SavedSearchesResourceTypeSavedSearchId:
    PatchV1SavedSearchesResourceTypeSavedSearchId,
): string {
  return JSON.stringify(
    PatchV1SavedSearchesResourceTypeSavedSearchId$outboundSchema.parse(
      patchV1SavedSearchesResourceTypeSavedSearchId,
    ),
  );
}

export function patchV1SavedSearchesResourceTypeSavedSearchIdFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV1SavedSearchesResourceTypeSavedSearchId,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV1SavedSearchesResourceTypeSavedSearchId$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV1SavedSearchesResourceTypeSavedSearchId' from JSON`,
  );
}
