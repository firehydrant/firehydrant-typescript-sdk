/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NullableSuccinctEntity,
  NullableSuccinctEntity$inboundSchema,
  NullableSuccinctEntity$Outbound,
  NullableSuccinctEntity$outboundSchema,
} from "./nullablesuccinctentity.js";

export type SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity = {
  startTime?: Date | null | undefined;
  endTime?: Date | null | undefined;
  user?: NullableSuccinctEntity | null | undefined;
};

/** @internal */
export const SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$inboundSchema:
  z.ZodType<
    SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    start_time: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ).optional(),
    end_time: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ).optional(),
    user: z.nullable(NullableSuccinctEntity$inboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      "start_time": "startTime",
      "end_time": "endTime",
    });
  });

/** @internal */
export type SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$Outbound = {
  start_time?: string | null | undefined;
  end_time?: string | null | undefined;
  user?: NullableSuccinctEntity$Outbound | null | undefined;
};

/** @internal */
export const SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$outboundSchema:
  z.ZodType<
    SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$Outbound,
    z.ZodTypeDef,
    SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity
  > = z.object({
    startTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    endTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    user: z.nullable(NullableSuccinctEntity$outboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      startTime: "start_time",
      endTime: "end_time",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$ {
  /** @deprecated use `SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$inboundSchema` instead. */
  export const inboundSchema =
    SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$inboundSchema;
  /** @deprecated use `SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$outboundSchema` instead. */
  export const outboundSchema =
    SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$outboundSchema;
  /** @deprecated use `SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$Outbound` instead. */
  export type Outbound =
    SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$Outbound;
}

export function signalsAPIOnCallSchedulePreviewEntityShiftPreviewEntityToJSON(
  signalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity:
    SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity,
): string {
  return JSON.stringify(
    SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$outboundSchema
      .parse(signalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity),
  );
}

export function signalsAPIOnCallSchedulePreviewEntityShiftPreviewEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'SignalsAPIOnCallSchedulePreviewEntityShiftPreviewEntity' from JSON`,
  );
}
