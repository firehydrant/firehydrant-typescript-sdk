/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * ALPHA - Update a comment's attributes
 */
export type PatchV1ConversationsConversationIdCommentsCommentId = {
  /**
   * Text body of comment
   */
  body?: string | undefined;
};

/** @internal */
export const PatchV1ConversationsConversationIdCommentsCommentId$inboundSchema:
  z.ZodType<
    PatchV1ConversationsConversationIdCommentsCommentId,
    z.ZodTypeDef,
    unknown
  > = z.object({
    body: z.string().optional(),
  });

/** @internal */
export type PatchV1ConversationsConversationIdCommentsCommentId$Outbound = {
  body?: string | undefined;
};

/** @internal */
export const PatchV1ConversationsConversationIdCommentsCommentId$outboundSchema:
  z.ZodType<
    PatchV1ConversationsConversationIdCommentsCommentId$Outbound,
    z.ZodTypeDef,
    PatchV1ConversationsConversationIdCommentsCommentId
  > = z.object({
    body: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1ConversationsConversationIdCommentsCommentId$ {
  /** @deprecated use `PatchV1ConversationsConversationIdCommentsCommentId$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1ConversationsConversationIdCommentsCommentId$inboundSchema;
  /** @deprecated use `PatchV1ConversationsConversationIdCommentsCommentId$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1ConversationsConversationIdCommentsCommentId$outboundSchema;
  /** @deprecated use `PatchV1ConversationsConversationIdCommentsCommentId$Outbound` instead. */
  export type Outbound =
    PatchV1ConversationsConversationIdCommentsCommentId$Outbound;
}

export function patchV1ConversationsConversationIdCommentsCommentIdToJSON(
  patchV1ConversationsConversationIdCommentsCommentId:
    PatchV1ConversationsConversationIdCommentsCommentId,
): string {
  return JSON.stringify(
    PatchV1ConversationsConversationIdCommentsCommentId$outboundSchema.parse(
      patchV1ConversationsConversationIdCommentsCommentId,
    ),
  );
}

export function patchV1ConversationsConversationIdCommentsCommentIdFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV1ConversationsConversationIdCommentsCommentId,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV1ConversationsConversationIdCommentsCommentId$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV1ConversationsConversationIdCommentsCommentId' from JSON`,
  );
}
