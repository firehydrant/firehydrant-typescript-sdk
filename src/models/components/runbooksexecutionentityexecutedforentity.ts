/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RunbooksExecutionEntityExecutedForEntity = {
  id?: string | undefined;
  type?: string | undefined;
  name?: string | undefined;
};

/** @internal */
export const RunbooksExecutionEntityExecutedForEntity$inboundSchema: z.ZodType<
  RunbooksExecutionEntityExecutedForEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  type: z.string().optional(),
  name: z.string().optional(),
});

/** @internal */
export type RunbooksExecutionEntityExecutedForEntity$Outbound = {
  id?: string | undefined;
  type?: string | undefined;
  name?: string | undefined;
};

/** @internal */
export const RunbooksExecutionEntityExecutedForEntity$outboundSchema: z.ZodType<
  RunbooksExecutionEntityExecutedForEntity$Outbound,
  z.ZodTypeDef,
  RunbooksExecutionEntityExecutedForEntity
> = z.object({
  id: z.string().optional(),
  type: z.string().optional(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbooksExecutionEntityExecutedForEntity$ {
  /** @deprecated use `RunbooksExecutionEntityExecutedForEntity$inboundSchema` instead. */
  export const inboundSchema =
    RunbooksExecutionEntityExecutedForEntity$inboundSchema;
  /** @deprecated use `RunbooksExecutionEntityExecutedForEntity$outboundSchema` instead. */
  export const outboundSchema =
    RunbooksExecutionEntityExecutedForEntity$outboundSchema;
  /** @deprecated use `RunbooksExecutionEntityExecutedForEntity$Outbound` instead. */
  export type Outbound = RunbooksExecutionEntityExecutedForEntity$Outbound;
}

export function runbooksExecutionEntityExecutedForEntityToJSON(
  runbooksExecutionEntityExecutedForEntity:
    RunbooksExecutionEntityExecutedForEntity,
): string {
  return JSON.stringify(
    RunbooksExecutionEntityExecutedForEntity$outboundSchema.parse(
      runbooksExecutionEntityExecutedForEntity,
    ),
  );
}

export function runbooksExecutionEntityExecutedForEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  RunbooksExecutionEntityExecutedForEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RunbooksExecutionEntityExecutedForEntity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RunbooksExecutionEntityExecutedForEntity' from JSON`,
  );
}
