/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  IncidentsLifecycleMilestoneEntity,
  IncidentsLifecycleMilestoneEntity$inboundSchema,
  IncidentsLifecycleMilestoneEntity$Outbound,
  IncidentsLifecycleMilestoneEntity$outboundSchema,
} from "./incidentslifecyclemilestoneentity.js";

export type IncidentsLifecyclePhaseEntity = {
  id?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  type?: string | undefined;
  position?: number | undefined;
  milestones?: Array<IncidentsLifecycleMilestoneEntity> | undefined;
};

/** @internal */
export const IncidentsLifecyclePhaseEntity$inboundSchema: z.ZodType<
  IncidentsLifecyclePhaseEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.string().optional(),
  type: z.string().optional(),
  position: z.number().int().optional(),
  milestones: z.array(IncidentsLifecycleMilestoneEntity$inboundSchema)
    .optional(),
});

/** @internal */
export type IncidentsLifecyclePhaseEntity$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  type?: string | undefined;
  position?: number | undefined;
  milestones?: Array<IncidentsLifecycleMilestoneEntity$Outbound> | undefined;
};

/** @internal */
export const IncidentsLifecyclePhaseEntity$outboundSchema: z.ZodType<
  IncidentsLifecyclePhaseEntity$Outbound,
  z.ZodTypeDef,
  IncidentsLifecyclePhaseEntity
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.string().optional(),
  type: z.string().optional(),
  position: z.number().int().optional(),
  milestones: z.array(IncidentsLifecycleMilestoneEntity$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IncidentsLifecyclePhaseEntity$ {
  /** @deprecated use `IncidentsLifecyclePhaseEntity$inboundSchema` instead. */
  export const inboundSchema = IncidentsLifecyclePhaseEntity$inboundSchema;
  /** @deprecated use `IncidentsLifecyclePhaseEntity$outboundSchema` instead. */
  export const outboundSchema = IncidentsLifecyclePhaseEntity$outboundSchema;
  /** @deprecated use `IncidentsLifecyclePhaseEntity$Outbound` instead. */
  export type Outbound = IncidentsLifecyclePhaseEntity$Outbound;
}

export function incidentsLifecyclePhaseEntityToJSON(
  incidentsLifecyclePhaseEntity: IncidentsLifecyclePhaseEntity,
): string {
  return JSON.stringify(
    IncidentsLifecyclePhaseEntity$outboundSchema.parse(
      incidentsLifecyclePhaseEntity,
    ),
  );
}

export function incidentsLifecyclePhaseEntityFromJSON(
  jsonString: string,
): SafeParseResult<IncidentsLifecyclePhaseEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IncidentsLifecyclePhaseEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IncidentsLifecyclePhaseEntity' from JSON`,
  );
}
