/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * PublicAPI_V1_BootstrapEntity model
 */
export type PublicApiv1BootstrapEntity = {
  posthogWriteKey?: string | null | undefined;
};

/** @internal */
export const PublicApiv1BootstrapEntity$inboundSchema: z.ZodType<
  PublicApiv1BootstrapEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  posthog_write_key: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "posthog_write_key": "posthogWriteKey",
  });
});

/** @internal */
export type PublicApiv1BootstrapEntity$Outbound = {
  posthog_write_key?: string | null | undefined;
};

/** @internal */
export const PublicApiv1BootstrapEntity$outboundSchema: z.ZodType<
  PublicApiv1BootstrapEntity$Outbound,
  z.ZodTypeDef,
  PublicApiv1BootstrapEntity
> = z.object({
  posthogWriteKey: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    posthogWriteKey: "posthog_write_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PublicApiv1BootstrapEntity$ {
  /** @deprecated use `PublicApiv1BootstrapEntity$inboundSchema` instead. */
  export const inboundSchema = PublicApiv1BootstrapEntity$inboundSchema;
  /** @deprecated use `PublicApiv1BootstrapEntity$outboundSchema` instead. */
  export const outboundSchema = PublicApiv1BootstrapEntity$outboundSchema;
  /** @deprecated use `PublicApiv1BootstrapEntity$Outbound` instead. */
  export type Outbound = PublicApiv1BootstrapEntity$Outbound;
}

export function publicAPIV1BootstrapEntityToJSON(
  publicApiv1BootstrapEntity: PublicApiv1BootstrapEntity,
): string {
  return JSON.stringify(
    PublicApiv1BootstrapEntity$outboundSchema.parse(publicApiv1BootstrapEntity),
  );
}

export function publicAPIV1BootstrapEntityFromJSON(
  jsonString: string,
): SafeParseResult<PublicApiv1BootstrapEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PublicApiv1BootstrapEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PublicApiv1BootstrapEntity' from JSON`,
  );
}
