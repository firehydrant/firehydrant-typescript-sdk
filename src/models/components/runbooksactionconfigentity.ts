/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  RunbooksElementEntity,
  RunbooksElementEntity$inboundSchema,
  RunbooksElementEntity$Outbound,
  RunbooksElementEntity$outboundSchema,
} from "./runbookselemententity.js";

export type RunbooksActionConfigEntity = {
  elements?: RunbooksElementEntity | undefined;
  /**
   * Location of documentation for this action
   */
  documentationUrl?: string | undefined;
};

/** @internal */
export const RunbooksActionConfigEntity$inboundSchema: z.ZodType<
  RunbooksActionConfigEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  elements: RunbooksElementEntity$inboundSchema.optional(),
  documentation_url: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "documentation_url": "documentationUrl",
  });
});

/** @internal */
export type RunbooksActionConfigEntity$Outbound = {
  elements?: RunbooksElementEntity$Outbound | undefined;
  documentation_url?: string | undefined;
};

/** @internal */
export const RunbooksActionConfigEntity$outboundSchema: z.ZodType<
  RunbooksActionConfigEntity$Outbound,
  z.ZodTypeDef,
  RunbooksActionConfigEntity
> = z.object({
  elements: RunbooksElementEntity$outboundSchema.optional(),
  documentationUrl: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    documentationUrl: "documentation_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbooksActionConfigEntity$ {
  /** @deprecated use `RunbooksActionConfigEntity$inboundSchema` instead. */
  export const inboundSchema = RunbooksActionConfigEntity$inboundSchema;
  /** @deprecated use `RunbooksActionConfigEntity$outboundSchema` instead. */
  export const outboundSchema = RunbooksActionConfigEntity$outboundSchema;
  /** @deprecated use `RunbooksActionConfigEntity$Outbound` instead. */
  export type Outbound = RunbooksActionConfigEntity$Outbound;
}

export function runbooksActionConfigEntityToJSON(
  runbooksActionConfigEntity: RunbooksActionConfigEntity,
): string {
  return JSON.stringify(
    RunbooksActionConfigEntity$outboundSchema.parse(runbooksActionConfigEntity),
  );
}

export function runbooksActionConfigEntityFromJSON(
  jsonString: string,
): SafeParseResult<RunbooksActionConfigEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunbooksActionConfigEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunbooksActionConfigEntity' from JSON`,
  );
}
