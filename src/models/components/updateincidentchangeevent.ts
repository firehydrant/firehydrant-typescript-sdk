/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const UpdateIncidentChangeEventType = {
  Caused: "caused",
  Fixed: "fixed",
  Suspect: "suspect",
  Dismissed: "dismissed",
} as const;
export type UpdateIncidentChangeEventType = ClosedEnum<
  typeof UpdateIncidentChangeEventType
>;

/**
 * Update a change attached to an incident
 */
export type UpdateIncidentChangeEvent = {
  type?: UpdateIncidentChangeEventType | null | undefined;
  /**
   * A short description about why this change event is related
   */
  why?: string | null | undefined;
};

/** @internal */
export const UpdateIncidentChangeEventType$inboundSchema: z.ZodNativeEnum<
  typeof UpdateIncidentChangeEventType
> = z.nativeEnum(UpdateIncidentChangeEventType);

/** @internal */
export const UpdateIncidentChangeEventType$outboundSchema: z.ZodNativeEnum<
  typeof UpdateIncidentChangeEventType
> = UpdateIncidentChangeEventType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentChangeEventType$ {
  /** @deprecated use `UpdateIncidentChangeEventType$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentChangeEventType$inboundSchema;
  /** @deprecated use `UpdateIncidentChangeEventType$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentChangeEventType$outboundSchema;
}

/** @internal */
export const UpdateIncidentChangeEvent$inboundSchema: z.ZodType<
  UpdateIncidentChangeEvent,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.nullable(UpdateIncidentChangeEventType$inboundSchema).optional(),
  why: z.nullable(z.string()).optional(),
});

/** @internal */
export type UpdateIncidentChangeEvent$Outbound = {
  type?: string | null | undefined;
  why?: string | null | undefined;
};

/** @internal */
export const UpdateIncidentChangeEvent$outboundSchema: z.ZodType<
  UpdateIncidentChangeEvent$Outbound,
  z.ZodTypeDef,
  UpdateIncidentChangeEvent
> = z.object({
  type: z.nullable(UpdateIncidentChangeEventType$outboundSchema).optional(),
  why: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentChangeEvent$ {
  /** @deprecated use `UpdateIncidentChangeEvent$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentChangeEvent$inboundSchema;
  /** @deprecated use `UpdateIncidentChangeEvent$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentChangeEvent$outboundSchema;
  /** @deprecated use `UpdateIncidentChangeEvent$Outbound` instead. */
  export type Outbound = UpdateIncidentChangeEvent$Outbound;
}

export function updateIncidentChangeEventToJSON(
  updateIncidentChangeEvent: UpdateIncidentChangeEvent,
): string {
  return JSON.stringify(
    UpdateIncidentChangeEvent$outboundSchema.parse(updateIncidentChangeEvent),
  );
}

export function updateIncidentChangeEventFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentChangeEvent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentChangeEvent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentChangeEvent' from JSON`,
  );
}
