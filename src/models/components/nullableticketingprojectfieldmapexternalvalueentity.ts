/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const NullableTicketingProjectFieldMapExternalValueEntityType = {
  Literal: "literal",
  FhAttribute: "fh-attribute",
  FhType: "fh-type",
} as const;
export type NullableTicketingProjectFieldMapExternalValueEntityType =
  ClosedEnum<typeof NullableTicketingProjectFieldMapExternalValueEntityType>;

export type NullableTicketingProjectFieldMapExternalValueEntity = {
  type?:
    | NullableTicketingProjectFieldMapExternalValueEntityType
    | null
    | undefined;
  value?: string | null | undefined;
  attribute?: string | null | undefined;
  presentation?: string | null | undefined;
};

/** @internal */
export const NullableTicketingProjectFieldMapExternalValueEntityType$inboundSchema:
  z.ZodNativeEnum<
    typeof NullableTicketingProjectFieldMapExternalValueEntityType
  > = z.nativeEnum(NullableTicketingProjectFieldMapExternalValueEntityType);

/** @internal */
export const NullableTicketingProjectFieldMapExternalValueEntityType$outboundSchema:
  z.ZodNativeEnum<
    typeof NullableTicketingProjectFieldMapExternalValueEntityType
  > = NullableTicketingProjectFieldMapExternalValueEntityType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableTicketingProjectFieldMapExternalValueEntityType$ {
  /** @deprecated use `NullableTicketingProjectFieldMapExternalValueEntityType$inboundSchema` instead. */
  export const inboundSchema =
    NullableTicketingProjectFieldMapExternalValueEntityType$inboundSchema;
  /** @deprecated use `NullableTicketingProjectFieldMapExternalValueEntityType$outboundSchema` instead. */
  export const outboundSchema =
    NullableTicketingProjectFieldMapExternalValueEntityType$outboundSchema;
}

/** @internal */
export const NullableTicketingProjectFieldMapExternalValueEntity$inboundSchema:
  z.ZodType<
    NullableTicketingProjectFieldMapExternalValueEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: z.nullable(
      NullableTicketingProjectFieldMapExternalValueEntityType$inboundSchema,
    ).optional(),
    value: z.nullable(z.string()).optional(),
    attribute: z.nullable(z.string()).optional(),
    presentation: z.nullable(z.string()).optional(),
  });

/** @internal */
export type NullableTicketingProjectFieldMapExternalValueEntity$Outbound = {
  type?: string | null | undefined;
  value?: string | null | undefined;
  attribute?: string | null | undefined;
  presentation?: string | null | undefined;
};

/** @internal */
export const NullableTicketingProjectFieldMapExternalValueEntity$outboundSchema:
  z.ZodType<
    NullableTicketingProjectFieldMapExternalValueEntity$Outbound,
    z.ZodTypeDef,
    NullableTicketingProjectFieldMapExternalValueEntity
  > = z.object({
    type: z.nullable(
      NullableTicketingProjectFieldMapExternalValueEntityType$outboundSchema,
    ).optional(),
    value: z.nullable(z.string()).optional(),
    attribute: z.nullable(z.string()).optional(),
    presentation: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableTicketingProjectFieldMapExternalValueEntity$ {
  /** @deprecated use `NullableTicketingProjectFieldMapExternalValueEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableTicketingProjectFieldMapExternalValueEntity$inboundSchema;
  /** @deprecated use `NullableTicketingProjectFieldMapExternalValueEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableTicketingProjectFieldMapExternalValueEntity$outboundSchema;
  /** @deprecated use `NullableTicketingProjectFieldMapExternalValueEntity$Outbound` instead. */
  export type Outbound =
    NullableTicketingProjectFieldMapExternalValueEntity$Outbound;
}

export function nullableTicketingProjectFieldMapExternalValueEntityToJSON(
  nullableTicketingProjectFieldMapExternalValueEntity:
    NullableTicketingProjectFieldMapExternalValueEntity,
): string {
  return JSON.stringify(
    NullableTicketingProjectFieldMapExternalValueEntity$outboundSchema.parse(
      nullableTicketingProjectFieldMapExternalValueEntity,
    ),
  );
}

export function nullableTicketingProjectFieldMapExternalValueEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableTicketingProjectFieldMapExternalValueEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableTicketingProjectFieldMapExternalValueEntity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'NullableTicketingProjectFieldMapExternalValueEntity' from JSON`,
  );
}
