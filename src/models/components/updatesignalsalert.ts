/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update a Signal alert
 */
export type UpdateSignalsAlert = {
  /**
   * Whether the alert is noisy
   */
  noise: boolean;
};

/** @internal */
export const UpdateSignalsAlert$inboundSchema: z.ZodType<
  UpdateSignalsAlert,
  z.ZodTypeDef,
  unknown
> = z.object({
  noise: z.boolean(),
});

/** @internal */
export type UpdateSignalsAlert$Outbound = {
  noise: boolean;
};

/** @internal */
export const UpdateSignalsAlert$outboundSchema: z.ZodType<
  UpdateSignalsAlert$Outbound,
  z.ZodTypeDef,
  UpdateSignalsAlert
> = z.object({
  noise: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSignalsAlert$ {
  /** @deprecated use `UpdateSignalsAlert$inboundSchema` instead. */
  export const inboundSchema = UpdateSignalsAlert$inboundSchema;
  /** @deprecated use `UpdateSignalsAlert$outboundSchema` instead. */
  export const outboundSchema = UpdateSignalsAlert$outboundSchema;
  /** @deprecated use `UpdateSignalsAlert$Outbound` instead. */
  export type Outbound = UpdateSignalsAlert$Outbound;
}

export function updateSignalsAlertToJSON(
  updateSignalsAlert: UpdateSignalsAlert,
): string {
  return JSON.stringify(
    UpdateSignalsAlert$outboundSchema.parse(updateSignalsAlert),
  );
}

export function updateSignalsAlertFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSignalsAlert, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSignalsAlert$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSignalsAlert' from JSON`,
  );
}
