/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NullableRunbooksElementDynamicSelectEntitySelectOptionEntity,
  NullableRunbooksElementDynamicSelectEntitySelectOptionEntity$inboundSchema,
  NullableRunbooksElementDynamicSelectEntitySelectOptionEntity$Outbound,
  NullableRunbooksElementDynamicSelectEntitySelectOptionEntity$outboundSchema,
} from "./nullablerunbookselementdynamicselectentityselectoptionentity.js";
import {
  RunbooksElementDynamicSelectEntitySelectOptionEntity,
  RunbooksElementDynamicSelectEntitySelectOptionEntity$inboundSchema,
  RunbooksElementDynamicSelectEntitySelectOptionEntity$Outbound,
  RunbooksElementDynamicSelectEntitySelectOptionEntity$outboundSchema,
} from "./runbookselementdynamicselectentityselectoptionentity.js";

export type NullableRunbooksElementDynamicSelectEntity = {
  label?: string | null | undefined;
  placeholder?: string | null | undefined;
  asyncUrl?: string | null | undefined;
  required?: boolean | null | undefined;
  clearable?: boolean | null | undefined;
  isMulti?: boolean | null | undefined;
  defaultValue?:
    | NullableRunbooksElementDynamicSelectEntitySelectOptionEntity
    | null
    | undefined;
  options?:
    | Array<RunbooksElementDynamicSelectEntitySelectOptionEntity>
    | null
    | undefined;
};

/** @internal */
export const NullableRunbooksElementDynamicSelectEntity$inboundSchema:
  z.ZodType<NullableRunbooksElementDynamicSelectEntity, z.ZodTypeDef, unknown> =
    z.object({
      label: z.nullable(z.string()).optional(),
      placeholder: z.nullable(z.string()).optional(),
      async_url: z.nullable(z.string()).optional(),
      required: z.nullable(z.boolean()).optional(),
      clearable: z.nullable(z.boolean()).optional(),
      is_multi: z.nullable(z.boolean()).optional(),
      default_value: z.nullable(
        NullableRunbooksElementDynamicSelectEntitySelectOptionEntity$inboundSchema,
      ).optional(),
      options: z.nullable(
        z.array(
          RunbooksElementDynamicSelectEntitySelectOptionEntity$inboundSchema,
        ),
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "async_url": "asyncUrl",
        "is_multi": "isMulti",
        "default_value": "defaultValue",
      });
    });

/** @internal */
export type NullableRunbooksElementDynamicSelectEntity$Outbound = {
  label?: string | null | undefined;
  placeholder?: string | null | undefined;
  async_url?: string | null | undefined;
  required?: boolean | null | undefined;
  clearable?: boolean | null | undefined;
  is_multi?: boolean | null | undefined;
  default_value?:
    | NullableRunbooksElementDynamicSelectEntitySelectOptionEntity$Outbound
    | null
    | undefined;
  options?:
    | Array<RunbooksElementDynamicSelectEntitySelectOptionEntity$Outbound>
    | null
    | undefined;
};

/** @internal */
export const NullableRunbooksElementDynamicSelectEntity$outboundSchema:
  z.ZodType<
    NullableRunbooksElementDynamicSelectEntity$Outbound,
    z.ZodTypeDef,
    NullableRunbooksElementDynamicSelectEntity
  > = z.object({
    label: z.nullable(z.string()).optional(),
    placeholder: z.nullable(z.string()).optional(),
    asyncUrl: z.nullable(z.string()).optional(),
    required: z.nullable(z.boolean()).optional(),
    clearable: z.nullable(z.boolean()).optional(),
    isMulti: z.nullable(z.boolean()).optional(),
    defaultValue: z.nullable(
      NullableRunbooksElementDynamicSelectEntitySelectOptionEntity$outboundSchema,
    ).optional(),
    options: z.nullable(
      z.array(
        RunbooksElementDynamicSelectEntitySelectOptionEntity$outboundSchema,
      ),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      asyncUrl: "async_url",
      isMulti: "is_multi",
      defaultValue: "default_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableRunbooksElementDynamicSelectEntity$ {
  /** @deprecated use `NullableRunbooksElementDynamicSelectEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableRunbooksElementDynamicSelectEntity$inboundSchema;
  /** @deprecated use `NullableRunbooksElementDynamicSelectEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableRunbooksElementDynamicSelectEntity$outboundSchema;
  /** @deprecated use `NullableRunbooksElementDynamicSelectEntity$Outbound` instead. */
  export type Outbound = NullableRunbooksElementDynamicSelectEntity$Outbound;
}

export function nullableRunbooksElementDynamicSelectEntityToJSON(
  nullableRunbooksElementDynamicSelectEntity:
    NullableRunbooksElementDynamicSelectEntity,
): string {
  return JSON.stringify(
    NullableRunbooksElementDynamicSelectEntity$outboundSchema.parse(
      nullableRunbooksElementDynamicSelectEntity,
    ),
  );
}

export function nullableRunbooksElementDynamicSelectEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableRunbooksElementDynamicSelectEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableRunbooksElementDynamicSelectEntity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'NullableRunbooksElementDynamicSelectEntity' from JSON`,
  );
}
