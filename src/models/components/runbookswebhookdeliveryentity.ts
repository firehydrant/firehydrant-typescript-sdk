/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RunbooksWebhookDeliveryEntity = {
  headers?: string | undefined;
  statusCode?: string | undefined;
};

/** @internal */
export const RunbooksWebhookDeliveryEntity$inboundSchema: z.ZodType<
  RunbooksWebhookDeliveryEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  headers: z.string().optional(),
  status_code: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "status_code": "statusCode",
  });
});

/** @internal */
export type RunbooksWebhookDeliveryEntity$Outbound = {
  headers?: string | undefined;
  status_code?: string | undefined;
};

/** @internal */
export const RunbooksWebhookDeliveryEntity$outboundSchema: z.ZodType<
  RunbooksWebhookDeliveryEntity$Outbound,
  z.ZodTypeDef,
  RunbooksWebhookDeliveryEntity
> = z.object({
  headers: z.string().optional(),
  statusCode: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    statusCode: "status_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbooksWebhookDeliveryEntity$ {
  /** @deprecated use `RunbooksWebhookDeliveryEntity$inboundSchema` instead. */
  export const inboundSchema = RunbooksWebhookDeliveryEntity$inboundSchema;
  /** @deprecated use `RunbooksWebhookDeliveryEntity$outboundSchema` instead. */
  export const outboundSchema = RunbooksWebhookDeliveryEntity$outboundSchema;
  /** @deprecated use `RunbooksWebhookDeliveryEntity$Outbound` instead. */
  export type Outbound = RunbooksWebhookDeliveryEntity$Outbound;
}

export function runbooksWebhookDeliveryEntityToJSON(
  runbooksWebhookDeliveryEntity: RunbooksWebhookDeliveryEntity,
): string {
  return JSON.stringify(
    RunbooksWebhookDeliveryEntity$outboundSchema.parse(
      runbooksWebhookDeliveryEntity,
    ),
  );
}

export function runbooksWebhookDeliveryEntityFromJSON(
  jsonString: string,
): SafeParseResult<RunbooksWebhookDeliveryEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunbooksWebhookDeliveryEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunbooksWebhookDeliveryEntity' from JSON`,
  );
}
