/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableIntegrationsSlackSlackChannelEntity = {
  id?: string | null | undefined;
  name?: string | null | undefined;
  slackChannelId?: string | null | undefined;
};

/** @internal */
export const NullableIntegrationsSlackSlackChannelEntity$inboundSchema:
  z.ZodType<
    NullableIntegrationsSlackSlackChannelEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    slack_channel_id: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "slack_channel_id": "slackChannelId",
    });
  });

/** @internal */
export type NullableIntegrationsSlackSlackChannelEntity$Outbound = {
  id?: string | null | undefined;
  name?: string | null | undefined;
  slack_channel_id?: string | null | undefined;
};

/** @internal */
export const NullableIntegrationsSlackSlackChannelEntity$outboundSchema:
  z.ZodType<
    NullableIntegrationsSlackSlackChannelEntity$Outbound,
    z.ZodTypeDef,
    NullableIntegrationsSlackSlackChannelEntity
  > = z.object({
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    slackChannelId: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      slackChannelId: "slack_channel_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableIntegrationsSlackSlackChannelEntity$ {
  /** @deprecated use `NullableIntegrationsSlackSlackChannelEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableIntegrationsSlackSlackChannelEntity$inboundSchema;
  /** @deprecated use `NullableIntegrationsSlackSlackChannelEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableIntegrationsSlackSlackChannelEntity$outboundSchema;
  /** @deprecated use `NullableIntegrationsSlackSlackChannelEntity$Outbound` instead. */
  export type Outbound = NullableIntegrationsSlackSlackChannelEntity$Outbound;
}

export function nullableIntegrationsSlackSlackChannelEntityToJSON(
  nullableIntegrationsSlackSlackChannelEntity:
    NullableIntegrationsSlackSlackChannelEntity,
): string {
  return JSON.stringify(
    NullableIntegrationsSlackSlackChannelEntity$outboundSchema.parse(
      nullableIntegrationsSlackSlackChannelEntity,
    ),
  );
}

export function nullableIntegrationsSlackSlackChannelEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableIntegrationsSlackSlackChannelEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableIntegrationsSlackSlackChannelEntity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'NullableIntegrationsSlackSlackChannelEntity' from JSON`,
  );
}
