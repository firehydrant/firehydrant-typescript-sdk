/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableIntegrationsZendeskSupportIssueEntityCustomerEntity = {
  /**
   * UUID of the Customer
   */
  id?: string | null | undefined;
  /**
   * Name of the Customer
   */
  name?: string | null | undefined;
};

/** @internal */
export const NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$inboundSchema:
  z.ZodType<
    NullableIntegrationsZendeskSupportIssueEntityCustomerEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
  });

/** @internal */
export type NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$Outbound =
  {
    id?: string | null | undefined;
    name?: string | null | undefined;
  };

/** @internal */
export const NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$outboundSchema:
  z.ZodType<
    NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$Outbound,
    z.ZodTypeDef,
    NullableIntegrationsZendeskSupportIssueEntityCustomerEntity
  > = z.object({
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$ {
  /** @deprecated use `NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$inboundSchema` instead. */
  export const inboundSchema =
    NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$inboundSchema;
  /** @deprecated use `NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$outboundSchema;
  /** @deprecated use `NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$Outbound` instead. */
  export type Outbound =
    NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$Outbound;
}

export function nullableIntegrationsZendeskSupportIssueEntityCustomerEntityToJSON(
  nullableIntegrationsZendeskSupportIssueEntityCustomerEntity:
    NullableIntegrationsZendeskSupportIssueEntityCustomerEntity,
): string {
  return JSON.stringify(
    NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$outboundSchema
      .parse(nullableIntegrationsZendeskSupportIssueEntityCustomerEntity),
  );
}

export function nullableIntegrationsZendeskSupportIssueEntityCustomerEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  NullableIntegrationsZendeskSupportIssueEntityCustomerEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      NullableIntegrationsZendeskSupportIssueEntityCustomerEntity$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'NullableIntegrationsZendeskSupportIssueEntityCustomerEntity' from JSON`,
  );
}
