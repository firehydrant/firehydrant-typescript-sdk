/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateScheduledMaintenanceStatusPage = {
  /**
   * The slug identifying the type of status page
   */
  integrationSlug?: string | null | undefined;
  /**
   * The UUID of the status page to display this maintenance on
   */
  connectionId: string;
};

export type UpdateScheduledMaintenanceImpact = {
  /**
   * The type of impact
   */
  type: string;
  /**
   * The id of impact
   */
  id: string;
  /**
   * The id of the condition
   */
  conditionId: string;
};

/**
 * Change the conditions of a scheduled maintenance event, including updating any status page announcements of changes.
 */
export type UpdateScheduledMaintenance = {
  name?: string | null | undefined;
  summary?: string | null | undefined;
  /**
   * ISO8601 timestamp for the start time of the scheduled maintenance
   */
  startsAt?: Date | null | undefined;
  /**
   * ISO8601 timestamp for the end time of the scheduled maintenance
   */
  endsAt?: Date | null | undefined;
  description?: string | null | undefined;
  /**
   * A json object of label keys and values
   */
  labels?: { [k: string]: string } | null | undefined;
  /**
   * An array of status pages to display this maintenance on
   */
  statusPages?: Array<UpdateScheduledMaintenanceStatusPage> | null | undefined;
  /**
   * An array of impact/condition combinations
   */
  impacts?: Array<UpdateScheduledMaintenanceImpact> | null | undefined;
};

/** @internal */
export const UpdateScheduledMaintenanceStatusPage$inboundSchema: z.ZodType<
  UpdateScheduledMaintenanceStatusPage,
  z.ZodTypeDef,
  unknown
> = z.object({
  integration_slug: z.nullable(z.string()).optional(),
  connection_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "integration_slug": "integrationSlug",
    "connection_id": "connectionId",
  });
});

/** @internal */
export type UpdateScheduledMaintenanceStatusPage$Outbound = {
  integration_slug?: string | null | undefined;
  connection_id: string;
};

/** @internal */
export const UpdateScheduledMaintenanceStatusPage$outboundSchema: z.ZodType<
  UpdateScheduledMaintenanceStatusPage$Outbound,
  z.ZodTypeDef,
  UpdateScheduledMaintenanceStatusPage
> = z.object({
  integrationSlug: z.nullable(z.string()).optional(),
  connectionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    integrationSlug: "integration_slug",
    connectionId: "connection_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateScheduledMaintenanceStatusPage$ {
  /** @deprecated use `UpdateScheduledMaintenanceStatusPage$inboundSchema` instead. */
  export const inboundSchema =
    UpdateScheduledMaintenanceStatusPage$inboundSchema;
  /** @deprecated use `UpdateScheduledMaintenanceStatusPage$outboundSchema` instead. */
  export const outboundSchema =
    UpdateScheduledMaintenanceStatusPage$outboundSchema;
  /** @deprecated use `UpdateScheduledMaintenanceStatusPage$Outbound` instead. */
  export type Outbound = UpdateScheduledMaintenanceStatusPage$Outbound;
}

export function updateScheduledMaintenanceStatusPageToJSON(
  updateScheduledMaintenanceStatusPage: UpdateScheduledMaintenanceStatusPage,
): string {
  return JSON.stringify(
    UpdateScheduledMaintenanceStatusPage$outboundSchema.parse(
      updateScheduledMaintenanceStatusPage,
    ),
  );
}

export function updateScheduledMaintenanceStatusPageFromJSON(
  jsonString: string,
): SafeParseResult<UpdateScheduledMaintenanceStatusPage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateScheduledMaintenanceStatusPage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateScheduledMaintenanceStatusPage' from JSON`,
  );
}

/** @internal */
export const UpdateScheduledMaintenanceImpact$inboundSchema: z.ZodType<
  UpdateScheduledMaintenanceImpact,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.string(),
  id: z.string(),
  condition_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "condition_id": "conditionId",
  });
});

/** @internal */
export type UpdateScheduledMaintenanceImpact$Outbound = {
  type: string;
  id: string;
  condition_id: string;
};

/** @internal */
export const UpdateScheduledMaintenanceImpact$outboundSchema: z.ZodType<
  UpdateScheduledMaintenanceImpact$Outbound,
  z.ZodTypeDef,
  UpdateScheduledMaintenanceImpact
> = z.object({
  type: z.string(),
  id: z.string(),
  conditionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    conditionId: "condition_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateScheduledMaintenanceImpact$ {
  /** @deprecated use `UpdateScheduledMaintenanceImpact$inboundSchema` instead. */
  export const inboundSchema = UpdateScheduledMaintenanceImpact$inboundSchema;
  /** @deprecated use `UpdateScheduledMaintenanceImpact$outboundSchema` instead. */
  export const outboundSchema = UpdateScheduledMaintenanceImpact$outboundSchema;
  /** @deprecated use `UpdateScheduledMaintenanceImpact$Outbound` instead. */
  export type Outbound = UpdateScheduledMaintenanceImpact$Outbound;
}

export function updateScheduledMaintenanceImpactToJSON(
  updateScheduledMaintenanceImpact: UpdateScheduledMaintenanceImpact,
): string {
  return JSON.stringify(
    UpdateScheduledMaintenanceImpact$outboundSchema.parse(
      updateScheduledMaintenanceImpact,
    ),
  );
}

export function updateScheduledMaintenanceImpactFromJSON(
  jsonString: string,
): SafeParseResult<UpdateScheduledMaintenanceImpact, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateScheduledMaintenanceImpact$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateScheduledMaintenanceImpact' from JSON`,
  );
}

/** @internal */
export const UpdateScheduledMaintenance$inboundSchema: z.ZodType<
  UpdateScheduledMaintenance,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.nullable(z.string()).optional(),
  summary: z.nullable(z.string()).optional(),
  starts_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  ends_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  description: z.nullable(z.string()).optional(),
  labels: z.nullable(z.record(z.string())).optional(),
  status_pages: z.nullable(
    z.array(z.lazy(() => UpdateScheduledMaintenanceStatusPage$inboundSchema)),
  ).optional(),
  impacts: z.nullable(
    z.array(z.lazy(() => UpdateScheduledMaintenanceImpact$inboundSchema)),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "starts_at": "startsAt",
    "ends_at": "endsAt",
    "status_pages": "statusPages",
  });
});

/** @internal */
export type UpdateScheduledMaintenance$Outbound = {
  name?: string | null | undefined;
  summary?: string | null | undefined;
  starts_at?: string | null | undefined;
  ends_at?: string | null | undefined;
  description?: string | null | undefined;
  labels?: { [k: string]: string } | null | undefined;
  status_pages?:
    | Array<UpdateScheduledMaintenanceStatusPage$Outbound>
    | null
    | undefined;
  impacts?: Array<UpdateScheduledMaintenanceImpact$Outbound> | null | undefined;
};

/** @internal */
export const UpdateScheduledMaintenance$outboundSchema: z.ZodType<
  UpdateScheduledMaintenance$Outbound,
  z.ZodTypeDef,
  UpdateScheduledMaintenance
> = z.object({
  name: z.nullable(z.string()).optional(),
  summary: z.nullable(z.string()).optional(),
  startsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  endsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  description: z.nullable(z.string()).optional(),
  labels: z.nullable(z.record(z.string())).optional(),
  statusPages: z.nullable(
    z.array(z.lazy(() => UpdateScheduledMaintenanceStatusPage$outboundSchema)),
  ).optional(),
  impacts: z.nullable(
    z.array(z.lazy(() => UpdateScheduledMaintenanceImpact$outboundSchema)),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    startsAt: "starts_at",
    endsAt: "ends_at",
    statusPages: "status_pages",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateScheduledMaintenance$ {
  /** @deprecated use `UpdateScheduledMaintenance$inboundSchema` instead. */
  export const inboundSchema = UpdateScheduledMaintenance$inboundSchema;
  /** @deprecated use `UpdateScheduledMaintenance$outboundSchema` instead. */
  export const outboundSchema = UpdateScheduledMaintenance$outboundSchema;
  /** @deprecated use `UpdateScheduledMaintenance$Outbound` instead. */
  export type Outbound = UpdateScheduledMaintenance$Outbound;
}

export function updateScheduledMaintenanceToJSON(
  updateScheduledMaintenance: UpdateScheduledMaintenance,
): string {
  return JSON.stringify(
    UpdateScheduledMaintenance$outboundSchema.parse(updateScheduledMaintenance),
  );
}

export function updateScheduledMaintenanceFromJSON(
  jsonString: string,
): SafeParseResult<UpdateScheduledMaintenance, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateScheduledMaintenance$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateScheduledMaintenance' from JSON`,
  );
}
