/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Operations = {
  /**
   * The operation to perform on the user. Options are add, remove, replace
   */
  op: string;
  /**
   * The path to the attribute to be modified
   */
  path: string;
};

/**
 * PATCH SCIM endpoint to update a User. This endpoint is used to update a resource's attributes.
 */
export type PatchV1ScimV2UsersId = {
  /**
   * An optional trail to log the request
   */
  trail?: string | undefined;
  /**
   * An array of operations to perform on the user
   */
  operations: Array<Operations>;
};

/** @internal */
export const Operations$inboundSchema: z.ZodType<
  Operations,
  z.ZodTypeDef,
  unknown
> = z.object({
  op: z.string(),
  path: z.string(),
});

/** @internal */
export type Operations$Outbound = {
  op: string;
  path: string;
};

/** @internal */
export const Operations$outboundSchema: z.ZodType<
  Operations$Outbound,
  z.ZodTypeDef,
  Operations
> = z.object({
  op: z.string(),
  path: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Operations$ {
  /** @deprecated use `Operations$inboundSchema` instead. */
  export const inboundSchema = Operations$inboundSchema;
  /** @deprecated use `Operations$outboundSchema` instead. */
  export const outboundSchema = Operations$outboundSchema;
  /** @deprecated use `Operations$Outbound` instead. */
  export type Outbound = Operations$Outbound;
}

export function operationsToJSON(operations: Operations): string {
  return JSON.stringify(Operations$outboundSchema.parse(operations));
}

export function operationsFromJSON(
  jsonString: string,
): SafeParseResult<Operations, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Operations$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Operations' from JSON`,
  );
}

/** @internal */
export const PatchV1ScimV2UsersId$inboundSchema: z.ZodType<
  PatchV1ScimV2UsersId,
  z.ZodTypeDef,
  unknown
> = z.object({
  trail: z.string().optional(),
  Operations: z.array(z.lazy(() => Operations$inboundSchema)),
}).transform((v) => {
  return remap$(v, {
    "Operations": "operations",
  });
});

/** @internal */
export type PatchV1ScimV2UsersId$Outbound = {
  trail?: string | undefined;
  Operations: Array<Operations$Outbound>;
};

/** @internal */
export const PatchV1ScimV2UsersId$outboundSchema: z.ZodType<
  PatchV1ScimV2UsersId$Outbound,
  z.ZodTypeDef,
  PatchV1ScimV2UsersId
> = z.object({
  trail: z.string().optional(),
  operations: z.array(z.lazy(() => Operations$outboundSchema)),
}).transform((v) => {
  return remap$(v, {
    operations: "Operations",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1ScimV2UsersId$ {
  /** @deprecated use `PatchV1ScimV2UsersId$inboundSchema` instead. */
  export const inboundSchema = PatchV1ScimV2UsersId$inboundSchema;
  /** @deprecated use `PatchV1ScimV2UsersId$outboundSchema` instead. */
  export const outboundSchema = PatchV1ScimV2UsersId$outboundSchema;
  /** @deprecated use `PatchV1ScimV2UsersId$Outbound` instead. */
  export type Outbound = PatchV1ScimV2UsersId$Outbound;
}

export function patchV1ScimV2UsersIdToJSON(
  patchV1ScimV2UsersId: PatchV1ScimV2UsersId,
): string {
  return JSON.stringify(
    PatchV1ScimV2UsersId$outboundSchema.parse(patchV1ScimV2UsersId),
  );
}

export function patchV1ScimV2UsersIdFromJSON(
  jsonString: string,
): SafeParseResult<PatchV1ScimV2UsersId, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchV1ScimV2UsersId$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchV1ScimV2UsersId' from JSON`,
  );
}
