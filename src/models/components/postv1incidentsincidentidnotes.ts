/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PostV1IncidentsIncidentIdNotesVisibility = {
  PrivateToOrg: "private_to_org",
  OpenToPublic: "open_to_public",
  InternalStatusPage: "internal_status_page",
} as const;
export type PostV1IncidentsIncidentIdNotesVisibility = ClosedEnum<
  typeof PostV1IncidentsIncidentIdNotesVisibility
>;

export type PostV1IncidentsIncidentIdNotesStatusPages = {
  id: string;
  integrationSlug: string;
};

/**
 * Create a new note on for an incident. The visibility field on a note determines where it gets posted.
 */
export type PostV1IncidentsIncidentIdNotes = {
  body: string;
  /**
   * ISO8601 timestamp for when the note occurred
   */
  occurredAt?: Date | undefined;
  visibility?: PostV1IncidentsIncidentIdNotesVisibility | undefined;
  statusPages?: Array<PostV1IncidentsIncidentIdNotesStatusPages> | undefined;
};

/** @internal */
export const PostV1IncidentsIncidentIdNotesVisibility$inboundSchema:
  z.ZodNativeEnum<typeof PostV1IncidentsIncidentIdNotesVisibility> = z
    .nativeEnum(PostV1IncidentsIncidentIdNotesVisibility);

/** @internal */
export const PostV1IncidentsIncidentIdNotesVisibility$outboundSchema:
  z.ZodNativeEnum<typeof PostV1IncidentsIncidentIdNotesVisibility> =
    PostV1IncidentsIncidentIdNotesVisibility$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1IncidentsIncidentIdNotesVisibility$ {
  /** @deprecated use `PostV1IncidentsIncidentIdNotesVisibility$inboundSchema` instead. */
  export const inboundSchema =
    PostV1IncidentsIncidentIdNotesVisibility$inboundSchema;
  /** @deprecated use `PostV1IncidentsIncidentIdNotesVisibility$outboundSchema` instead. */
  export const outboundSchema =
    PostV1IncidentsIncidentIdNotesVisibility$outboundSchema;
}

/** @internal */
export const PostV1IncidentsIncidentIdNotesStatusPages$inboundSchema: z.ZodType<
  PostV1IncidentsIncidentIdNotesStatusPages,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  integration_slug: z.string(),
}).transform((v) => {
  return remap$(v, {
    "integration_slug": "integrationSlug",
  });
});

/** @internal */
export type PostV1IncidentsIncidentIdNotesStatusPages$Outbound = {
  id: string;
  integration_slug: string;
};

/** @internal */
export const PostV1IncidentsIncidentIdNotesStatusPages$outboundSchema:
  z.ZodType<
    PostV1IncidentsIncidentIdNotesStatusPages$Outbound,
    z.ZodTypeDef,
    PostV1IncidentsIncidentIdNotesStatusPages
  > = z.object({
    id: z.string(),
    integrationSlug: z.string(),
  }).transform((v) => {
    return remap$(v, {
      integrationSlug: "integration_slug",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1IncidentsIncidentIdNotesStatusPages$ {
  /** @deprecated use `PostV1IncidentsIncidentIdNotesStatusPages$inboundSchema` instead. */
  export const inboundSchema =
    PostV1IncidentsIncidentIdNotesStatusPages$inboundSchema;
  /** @deprecated use `PostV1IncidentsIncidentIdNotesStatusPages$outboundSchema` instead. */
  export const outboundSchema =
    PostV1IncidentsIncidentIdNotesStatusPages$outboundSchema;
  /** @deprecated use `PostV1IncidentsIncidentIdNotesStatusPages$Outbound` instead. */
  export type Outbound = PostV1IncidentsIncidentIdNotesStatusPages$Outbound;
}

export function postV1IncidentsIncidentIdNotesStatusPagesToJSON(
  postV1IncidentsIncidentIdNotesStatusPages:
    PostV1IncidentsIncidentIdNotesStatusPages,
): string {
  return JSON.stringify(
    PostV1IncidentsIncidentIdNotesStatusPages$outboundSchema.parse(
      postV1IncidentsIncidentIdNotesStatusPages,
    ),
  );
}

export function postV1IncidentsIncidentIdNotesStatusPagesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV1IncidentsIncidentIdNotesStatusPages,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV1IncidentsIncidentIdNotesStatusPages$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV1IncidentsIncidentIdNotesStatusPages' from JSON`,
  );
}

/** @internal */
export const PostV1IncidentsIncidentIdNotes$inboundSchema: z.ZodType<
  PostV1IncidentsIncidentIdNotes,
  z.ZodTypeDef,
  unknown
> = z.object({
  body: z.string(),
  occurred_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  visibility: PostV1IncidentsIncidentIdNotesVisibility$inboundSchema.default(
    "private_to_org",
  ),
  status_pages: z.array(
    z.lazy(() => PostV1IncidentsIncidentIdNotesStatusPages$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "occurred_at": "occurredAt",
    "status_pages": "statusPages",
  });
});

/** @internal */
export type PostV1IncidentsIncidentIdNotes$Outbound = {
  body: string;
  occurred_at?: string | undefined;
  visibility: string;
  status_pages?:
    | Array<PostV1IncidentsIncidentIdNotesStatusPages$Outbound>
    | undefined;
};

/** @internal */
export const PostV1IncidentsIncidentIdNotes$outboundSchema: z.ZodType<
  PostV1IncidentsIncidentIdNotes$Outbound,
  z.ZodTypeDef,
  PostV1IncidentsIncidentIdNotes
> = z.object({
  body: z.string(),
  occurredAt: z.date().transform(v => v.toISOString()).optional(),
  visibility: PostV1IncidentsIncidentIdNotesVisibility$outboundSchema.default(
    "private_to_org",
  ),
  statusPages: z.array(
    z.lazy(() => PostV1IncidentsIncidentIdNotesStatusPages$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    occurredAt: "occurred_at",
    statusPages: "status_pages",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1IncidentsIncidentIdNotes$ {
  /** @deprecated use `PostV1IncidentsIncidentIdNotes$inboundSchema` instead. */
  export const inboundSchema = PostV1IncidentsIncidentIdNotes$inboundSchema;
  /** @deprecated use `PostV1IncidentsIncidentIdNotes$outboundSchema` instead. */
  export const outboundSchema = PostV1IncidentsIncidentIdNotes$outboundSchema;
  /** @deprecated use `PostV1IncidentsIncidentIdNotes$Outbound` instead. */
  export type Outbound = PostV1IncidentsIncidentIdNotes$Outbound;
}

export function postV1IncidentsIncidentIdNotesToJSON(
  postV1IncidentsIncidentIdNotes: PostV1IncidentsIncidentIdNotes,
): string {
  return JSON.stringify(
    PostV1IncidentsIncidentIdNotes$outboundSchema.parse(
      postV1IncidentsIncidentIdNotes,
    ),
  );
}

export function postV1IncidentsIncidentIdNotesFromJSON(
  jsonString: string,
): SafeParseResult<PostV1IncidentsIncidentIdNotes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV1IncidentsIncidentIdNotes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV1IncidentsIncidentIdNotes' from JSON`,
  );
}
