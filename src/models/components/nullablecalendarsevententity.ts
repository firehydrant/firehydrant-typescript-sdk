/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableCalendarsEventEntity = {
  id?: string | null | undefined;
  summary?: string | null | undefined;
  description?: string | null | undefined;
  startsAt?: string | null | undefined;
  endsAt?: string | null | undefined;
  createdAt?: string | null | undefined;
  updatedAt?: string | null | undefined;
  providerUrl?: string | null | undefined;
  providerIconUrl?: string | null | undefined;
};

/** @internal */
export const NullableCalendarsEventEntity$inboundSchema: z.ZodType<
  NullableCalendarsEventEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  summary: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  starts_at: z.nullable(z.string()).optional(),
  ends_at: z.nullable(z.string()).optional(),
  created_at: z.nullable(z.string()).optional(),
  updated_at: z.nullable(z.string()).optional(),
  provider_url: z.nullable(z.string()).optional(),
  provider_icon_url: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "starts_at": "startsAt",
    "ends_at": "endsAt",
    "created_at": "createdAt",
    "updated_at": "updatedAt",
    "provider_url": "providerUrl",
    "provider_icon_url": "providerIconUrl",
  });
});

/** @internal */
export type NullableCalendarsEventEntity$Outbound = {
  id?: string | null | undefined;
  summary?: string | null | undefined;
  description?: string | null | undefined;
  starts_at?: string | null | undefined;
  ends_at?: string | null | undefined;
  created_at?: string | null | undefined;
  updated_at?: string | null | undefined;
  provider_url?: string | null | undefined;
  provider_icon_url?: string | null | undefined;
};

/** @internal */
export const NullableCalendarsEventEntity$outboundSchema: z.ZodType<
  NullableCalendarsEventEntity$Outbound,
  z.ZodTypeDef,
  NullableCalendarsEventEntity
> = z.object({
  id: z.nullable(z.string()).optional(),
  summary: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  startsAt: z.nullable(z.string()).optional(),
  endsAt: z.nullable(z.string()).optional(),
  createdAt: z.nullable(z.string()).optional(),
  updatedAt: z.nullable(z.string()).optional(),
  providerUrl: z.nullable(z.string()).optional(),
  providerIconUrl: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    startsAt: "starts_at",
    endsAt: "ends_at",
    createdAt: "created_at",
    updatedAt: "updated_at",
    providerUrl: "provider_url",
    providerIconUrl: "provider_icon_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableCalendarsEventEntity$ {
  /** @deprecated use `NullableCalendarsEventEntity$inboundSchema` instead. */
  export const inboundSchema = NullableCalendarsEventEntity$inboundSchema;
  /** @deprecated use `NullableCalendarsEventEntity$outboundSchema` instead. */
  export const outboundSchema = NullableCalendarsEventEntity$outboundSchema;
  /** @deprecated use `NullableCalendarsEventEntity$Outbound` instead. */
  export type Outbound = NullableCalendarsEventEntity$Outbound;
}

export function nullableCalendarsEventEntityToJSON(
  nullableCalendarsEventEntity: NullableCalendarsEventEntity,
): string {
  return JSON.stringify(
    NullableCalendarsEventEntity$outboundSchema.parse(
      nullableCalendarsEventEntity,
    ),
  );
}

export function nullableCalendarsEventEntityFromJSON(
  jsonString: string,
): SafeParseResult<NullableCalendarsEventEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NullableCalendarsEventEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableCalendarsEventEntity' from JSON`,
  );
}
