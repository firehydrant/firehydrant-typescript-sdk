/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  MetricsInfrastructureMetricsEntity,
  MetricsInfrastructureMetricsEntity$inboundSchema,
  MetricsInfrastructureMetricsEntity$Outbound,
  MetricsInfrastructureMetricsEntity$outboundSchema,
} from "./metricsinfrastructuremetricsentity.js";

/**
 * Metrics_InfrastructureListEntity model
 */
export type MetricsInfrastructureListEntity = {
  /**
   * List of infrastructure metrics
   */
  data?: Array<MetricsInfrastructureMetricsEntity> | undefined;
};

/** @internal */
export const MetricsInfrastructureListEntity$inboundSchema: z.ZodType<
  MetricsInfrastructureListEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(MetricsInfrastructureMetricsEntity$inboundSchema).optional(),
});

/** @internal */
export type MetricsInfrastructureListEntity$Outbound = {
  data?: Array<MetricsInfrastructureMetricsEntity$Outbound> | undefined;
};

/** @internal */
export const MetricsInfrastructureListEntity$outboundSchema: z.ZodType<
  MetricsInfrastructureListEntity$Outbound,
  z.ZodTypeDef,
  MetricsInfrastructureListEntity
> = z.object({
  data: z.array(MetricsInfrastructureMetricsEntity$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MetricsInfrastructureListEntity$ {
  /** @deprecated use `MetricsInfrastructureListEntity$inboundSchema` instead. */
  export const inboundSchema = MetricsInfrastructureListEntity$inboundSchema;
  /** @deprecated use `MetricsInfrastructureListEntity$outboundSchema` instead. */
  export const outboundSchema = MetricsInfrastructureListEntity$outboundSchema;
  /** @deprecated use `MetricsInfrastructureListEntity$Outbound` instead. */
  export type Outbound = MetricsInfrastructureListEntity$Outbound;
}

export function metricsInfrastructureListEntityToJSON(
  metricsInfrastructureListEntity: MetricsInfrastructureListEntity,
): string {
  return JSON.stringify(
    MetricsInfrastructureListEntity$outboundSchema.parse(
      metricsInfrastructureListEntity,
    ),
  );
}

export function metricsInfrastructureListEntityFromJSON(
  jsonString: string,
): SafeParseResult<MetricsInfrastructureListEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MetricsInfrastructureListEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MetricsInfrastructureListEntity' from JSON`,
  );
}
