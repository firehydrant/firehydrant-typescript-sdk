/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * ALPHA - Update a comment's attributes
 */
export type UpdateComment = {
  /**
   * Text body of comment
   */
  body?: string | null | undefined;
};

/** @internal */
export const UpdateComment$inboundSchema: z.ZodType<
  UpdateComment,
  z.ZodTypeDef,
  unknown
> = z.object({
  body: z.nullable(z.string()).optional(),
});

/** @internal */
export type UpdateComment$Outbound = {
  body?: string | null | undefined;
};

/** @internal */
export const UpdateComment$outboundSchema: z.ZodType<
  UpdateComment$Outbound,
  z.ZodTypeDef,
  UpdateComment
> = z.object({
  body: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateComment$ {
  /** @deprecated use `UpdateComment$inboundSchema` instead. */
  export const inboundSchema = UpdateComment$inboundSchema;
  /** @deprecated use `UpdateComment$outboundSchema` instead. */
  export const outboundSchema = UpdateComment$outboundSchema;
  /** @deprecated use `UpdateComment$Outbound` instead. */
  export type Outbound = UpdateComment$Outbound;
}

export function updateCommentToJSON(updateComment: UpdateComment): string {
  return JSON.stringify(UpdateComment$outboundSchema.parse(updateComment));
}

export function updateCommentFromJSON(
  jsonString: string,
): SafeParseResult<UpdateComment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateComment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateComment' from JSON`,
  );
}
