/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ConversationsAPIEntitiesReference,
  ConversationsAPIEntitiesReference$inboundSchema,
  ConversationsAPIEntitiesReference$Outbound,
  ConversationsAPIEntitiesReference$outboundSchema,
} from "./conversationsapientitiesreference.js";
import {
  NullableSeverityMatrixConditionEntity,
  NullableSeverityMatrixConditionEntity$inboundSchema,
  NullableSeverityMatrixConditionEntity$Outbound,
  NullableSeverityMatrixConditionEntity$outboundSchema,
} from "./nullableseveritymatrixconditionentity.js";
import {
  NullableSuccinctEntity,
  NullableSuccinctEntity$inboundSchema,
  NullableSuccinctEntity$Outbound,
  NullableSuccinctEntity$outboundSchema,
} from "./nullablesuccinctentity.js";

export const IncidentsImpactEntityType = {
  Customer: "customer",
  Environment: "environment",
  Functionality: "functionality",
  Service: "service",
} as const;
export type IncidentsImpactEntityType = ClosedEnum<
  typeof IncidentsImpactEntityType
>;

export type IncidentsImpactEntity = {
  id?: string | null | undefined;
  type?: IncidentsImpactEntityType | null | undefined;
  impact?: NullableSuccinctEntity | null | undefined;
  condition?: NullableSeverityMatrixConditionEntity | null | undefined;
  conversations?: Array<ConversationsAPIEntitiesReference> | null | undefined;
};

/** @internal */
export const IncidentsImpactEntityType$inboundSchema: z.ZodNativeEnum<
  typeof IncidentsImpactEntityType
> = z.nativeEnum(IncidentsImpactEntityType);

/** @internal */
export const IncidentsImpactEntityType$outboundSchema: z.ZodNativeEnum<
  typeof IncidentsImpactEntityType
> = IncidentsImpactEntityType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IncidentsImpactEntityType$ {
  /** @deprecated use `IncidentsImpactEntityType$inboundSchema` instead. */
  export const inboundSchema = IncidentsImpactEntityType$inboundSchema;
  /** @deprecated use `IncidentsImpactEntityType$outboundSchema` instead. */
  export const outboundSchema = IncidentsImpactEntityType$outboundSchema;
}

/** @internal */
export const IncidentsImpactEntity$inboundSchema: z.ZodType<
  IncidentsImpactEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  type: z.nullable(IncidentsImpactEntityType$inboundSchema).optional(),
  impact: z.nullable(NullableSuccinctEntity$inboundSchema).optional(),
  condition: z.nullable(NullableSeverityMatrixConditionEntity$inboundSchema)
    .optional(),
  conversations: z.nullable(
    z.array(ConversationsAPIEntitiesReference$inboundSchema),
  ).optional(),
});

/** @internal */
export type IncidentsImpactEntity$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
  impact?: NullableSuccinctEntity$Outbound | null | undefined;
  condition?: NullableSeverityMatrixConditionEntity$Outbound | null | undefined;
  conversations?:
    | Array<ConversationsAPIEntitiesReference$Outbound>
    | null
    | undefined;
};

/** @internal */
export const IncidentsImpactEntity$outboundSchema: z.ZodType<
  IncidentsImpactEntity$Outbound,
  z.ZodTypeDef,
  IncidentsImpactEntity
> = z.object({
  id: z.nullable(z.string()).optional(),
  type: z.nullable(IncidentsImpactEntityType$outboundSchema).optional(),
  impact: z.nullable(NullableSuccinctEntity$outboundSchema).optional(),
  condition: z.nullable(NullableSeverityMatrixConditionEntity$outboundSchema)
    .optional(),
  conversations: z.nullable(
    z.array(ConversationsAPIEntitiesReference$outboundSchema),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IncidentsImpactEntity$ {
  /** @deprecated use `IncidentsImpactEntity$inboundSchema` instead. */
  export const inboundSchema = IncidentsImpactEntity$inboundSchema;
  /** @deprecated use `IncidentsImpactEntity$outboundSchema` instead. */
  export const outboundSchema = IncidentsImpactEntity$outboundSchema;
  /** @deprecated use `IncidentsImpactEntity$Outbound` instead. */
  export type Outbound = IncidentsImpactEntity$Outbound;
}

export function incidentsImpactEntityToJSON(
  incidentsImpactEntity: IncidentsImpactEntity,
): string {
  return JSON.stringify(
    IncidentsImpactEntity$outboundSchema.parse(incidentsImpactEntity),
  );
}

export function incidentsImpactEntityFromJSON(
  jsonString: string,
): SafeParseResult<IncidentsImpactEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IncidentsImpactEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IncidentsImpactEntity' from JSON`,
  );
}
