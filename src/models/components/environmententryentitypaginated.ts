/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EnvironmentEntryEntity,
  EnvironmentEntryEntity$inboundSchema,
  EnvironmentEntryEntity$Outbound,
  EnvironmentEntryEntity$outboundSchema,
} from "./environmententryentity.js";
import {
  PaginationEntity,
  PaginationEntity$inboundSchema,
  PaginationEntity$Outbound,
  PaginationEntity$outboundSchema,
} from "./paginationentity.js";

/**
 * EnvironmentEntryEntityPaginated model
 */
export type EnvironmentEntryEntityPaginated = {
  data?: Array<EnvironmentEntryEntity> | undefined;
  pagination?: PaginationEntity | undefined;
};

/** @internal */
export const EnvironmentEntryEntityPaginated$inboundSchema: z.ZodType<
  EnvironmentEntryEntityPaginated,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(EnvironmentEntryEntity$inboundSchema).optional(),
  pagination: PaginationEntity$inboundSchema.optional(),
});

/** @internal */
export type EnvironmentEntryEntityPaginated$Outbound = {
  data?: Array<EnvironmentEntryEntity$Outbound> | undefined;
  pagination?: PaginationEntity$Outbound | undefined;
};

/** @internal */
export const EnvironmentEntryEntityPaginated$outboundSchema: z.ZodType<
  EnvironmentEntryEntityPaginated$Outbound,
  z.ZodTypeDef,
  EnvironmentEntryEntityPaginated
> = z.object({
  data: z.array(EnvironmentEntryEntity$outboundSchema).optional(),
  pagination: PaginationEntity$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnvironmentEntryEntityPaginated$ {
  /** @deprecated use `EnvironmentEntryEntityPaginated$inboundSchema` instead. */
  export const inboundSchema = EnvironmentEntryEntityPaginated$inboundSchema;
  /** @deprecated use `EnvironmentEntryEntityPaginated$outboundSchema` instead. */
  export const outboundSchema = EnvironmentEntryEntityPaginated$outboundSchema;
  /** @deprecated use `EnvironmentEntryEntityPaginated$Outbound` instead. */
  export type Outbound = EnvironmentEntryEntityPaginated$Outbound;
}

export function environmentEntryEntityPaginatedToJSON(
  environmentEntryEntityPaginated: EnvironmentEntryEntityPaginated,
): string {
  return JSON.stringify(
    EnvironmentEntryEntityPaginated$outboundSchema.parse(
      environmentEntryEntityPaginated,
    ),
  );
}

export function environmentEntryEntityPaginatedFromJSON(
  jsonString: string,
): SafeParseResult<EnvironmentEntryEntityPaginated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EnvironmentEntryEntityPaginated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EnvironmentEntryEntityPaginated' from JSON`,
  );
}
