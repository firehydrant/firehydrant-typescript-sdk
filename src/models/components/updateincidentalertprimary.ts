/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Setting an alert as primary will overwrite milestone times in the FireHydrant incident with times included in the primary alert. Services attached to the primary alert will also be automatically added to the incident.
 */
export type UpdateIncidentAlertPrimary = {
  primary: boolean;
};

/** @internal */
export const UpdateIncidentAlertPrimary$inboundSchema: z.ZodType<
  UpdateIncidentAlertPrimary,
  z.ZodTypeDef,
  unknown
> = z.object({
  primary: z.boolean(),
});

/** @internal */
export type UpdateIncidentAlertPrimary$Outbound = {
  primary: boolean;
};

/** @internal */
export const UpdateIncidentAlertPrimary$outboundSchema: z.ZodType<
  UpdateIncidentAlertPrimary$Outbound,
  z.ZodTypeDef,
  UpdateIncidentAlertPrimary
> = z.object({
  primary: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentAlertPrimary$ {
  /** @deprecated use `UpdateIncidentAlertPrimary$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentAlertPrimary$inboundSchema;
  /** @deprecated use `UpdateIncidentAlertPrimary$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentAlertPrimary$outboundSchema;
  /** @deprecated use `UpdateIncidentAlertPrimary$Outbound` instead. */
  export type Outbound = UpdateIncidentAlertPrimary$Outbound;
}

export function updateIncidentAlertPrimaryToJSON(
  updateIncidentAlertPrimary: UpdateIncidentAlertPrimary,
): string {
  return JSON.stringify(
    UpdateIncidentAlertPrimary$outboundSchema.parse(updateIncidentAlertPrimary),
  );
}

export function updateIncidentAlertPrimaryFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentAlertPrimary, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentAlertPrimary$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentAlertPrimary' from JSON`,
  );
}
