/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableRunbooksElementInputEntity = {
  label?: string | null | undefined;
  placeholder?: string | null | undefined;
  defaultValue?: string | null | undefined;
  required?: boolean | null | undefined;
};

/** @internal */
export const NullableRunbooksElementInputEntity$inboundSchema: z.ZodType<
  NullableRunbooksElementInputEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.nullable(z.string()).optional(),
  placeholder: z.nullable(z.string()).optional(),
  default_value: z.nullable(z.string()).optional(),
  required: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    "default_value": "defaultValue",
  });
});

/** @internal */
export type NullableRunbooksElementInputEntity$Outbound = {
  label?: string | null | undefined;
  placeholder?: string | null | undefined;
  default_value?: string | null | undefined;
  required?: boolean | null | undefined;
};

/** @internal */
export const NullableRunbooksElementInputEntity$outboundSchema: z.ZodType<
  NullableRunbooksElementInputEntity$Outbound,
  z.ZodTypeDef,
  NullableRunbooksElementInputEntity
> = z.object({
  label: z.nullable(z.string()).optional(),
  placeholder: z.nullable(z.string()).optional(),
  defaultValue: z.nullable(z.string()).optional(),
  required: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    defaultValue: "default_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableRunbooksElementInputEntity$ {
  /** @deprecated use `NullableRunbooksElementInputEntity$inboundSchema` instead. */
  export const inboundSchema = NullableRunbooksElementInputEntity$inboundSchema;
  /** @deprecated use `NullableRunbooksElementInputEntity$outboundSchema` instead. */
  export const outboundSchema =
    NullableRunbooksElementInputEntity$outboundSchema;
  /** @deprecated use `NullableRunbooksElementInputEntity$Outbound` instead. */
  export type Outbound = NullableRunbooksElementInputEntity$Outbound;
}

export function nullableRunbooksElementInputEntityToJSON(
  nullableRunbooksElementInputEntity: NullableRunbooksElementInputEntity,
): string {
  return JSON.stringify(
    NullableRunbooksElementInputEntity$outboundSchema.parse(
      nullableRunbooksElementInputEntity,
    ),
  );
}

export function nullableRunbooksElementInputEntityFromJSON(
  jsonString: string,
): SafeParseResult<NullableRunbooksElementInputEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      NullableRunbooksElementInputEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableRunbooksElementInputEntity' from JSON`,
  );
}
