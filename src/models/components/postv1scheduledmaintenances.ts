/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostV1ScheduledMaintenancesStatusPages = {
  /**
   * The slug identifying the type of status page
   */
  integrationSlug?: string | undefined;
  /**
   * The UUID of the status page to display this maintenance on
   */
  connectionId: string;
};

export type PostV1ScheduledMaintenancesImpacts = {
  /**
   * The type of impact
   */
  type: string;
  /**
   * The id of impact
   */
  id: string;
  /**
   * The id of the condition
   */
  conditionId: string;
};

/**
 * Create a new scheduled maintenance event
 */
export type PostV1ScheduledMaintenances = {
  name: string;
  /**
   * ISO8601 timestamp for the start time of the scheduled maintenance
   */
  startsAt: Date;
  /**
   * ISO8601 timestamp for the end time of the scheduled maintenance
   */
  endsAt: Date;
  summary?: string | undefined;
  description?: string | undefined;
  /**
   * A json object of label keys and values
   */
  labels?: { [k: string]: string } | undefined;
  /**
   * An array of status pages to display this maintenance on
   */
  statusPages?: Array<PostV1ScheduledMaintenancesStatusPages> | undefined;
  /**
   * An array of impact/condition combinations
   */
  impacts?: Array<PostV1ScheduledMaintenancesImpacts> | undefined;
};

/** @internal */
export const PostV1ScheduledMaintenancesStatusPages$inboundSchema: z.ZodType<
  PostV1ScheduledMaintenancesStatusPages,
  z.ZodTypeDef,
  unknown
> = z.object({
  integration_slug: z.string().optional(),
  connection_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "integration_slug": "integrationSlug",
    "connection_id": "connectionId",
  });
});

/** @internal */
export type PostV1ScheduledMaintenancesStatusPages$Outbound = {
  integration_slug?: string | undefined;
  connection_id: string;
};

/** @internal */
export const PostV1ScheduledMaintenancesStatusPages$outboundSchema: z.ZodType<
  PostV1ScheduledMaintenancesStatusPages$Outbound,
  z.ZodTypeDef,
  PostV1ScheduledMaintenancesStatusPages
> = z.object({
  integrationSlug: z.string().optional(),
  connectionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    integrationSlug: "integration_slug",
    connectionId: "connection_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1ScheduledMaintenancesStatusPages$ {
  /** @deprecated use `PostV1ScheduledMaintenancesStatusPages$inboundSchema` instead. */
  export const inboundSchema =
    PostV1ScheduledMaintenancesStatusPages$inboundSchema;
  /** @deprecated use `PostV1ScheduledMaintenancesStatusPages$outboundSchema` instead. */
  export const outboundSchema =
    PostV1ScheduledMaintenancesStatusPages$outboundSchema;
  /** @deprecated use `PostV1ScheduledMaintenancesStatusPages$Outbound` instead. */
  export type Outbound = PostV1ScheduledMaintenancesStatusPages$Outbound;
}

export function postV1ScheduledMaintenancesStatusPagesToJSON(
  postV1ScheduledMaintenancesStatusPages:
    PostV1ScheduledMaintenancesStatusPages,
): string {
  return JSON.stringify(
    PostV1ScheduledMaintenancesStatusPages$outboundSchema.parse(
      postV1ScheduledMaintenancesStatusPages,
    ),
  );
}

export function postV1ScheduledMaintenancesStatusPagesFromJSON(
  jsonString: string,
): SafeParseResult<PostV1ScheduledMaintenancesStatusPages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV1ScheduledMaintenancesStatusPages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV1ScheduledMaintenancesStatusPages' from JSON`,
  );
}

/** @internal */
export const PostV1ScheduledMaintenancesImpacts$inboundSchema: z.ZodType<
  PostV1ScheduledMaintenancesImpacts,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.string(),
  id: z.string(),
  condition_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "condition_id": "conditionId",
  });
});

/** @internal */
export type PostV1ScheduledMaintenancesImpacts$Outbound = {
  type: string;
  id: string;
  condition_id: string;
};

/** @internal */
export const PostV1ScheduledMaintenancesImpacts$outboundSchema: z.ZodType<
  PostV1ScheduledMaintenancesImpacts$Outbound,
  z.ZodTypeDef,
  PostV1ScheduledMaintenancesImpacts
> = z.object({
  type: z.string(),
  id: z.string(),
  conditionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    conditionId: "condition_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1ScheduledMaintenancesImpacts$ {
  /** @deprecated use `PostV1ScheduledMaintenancesImpacts$inboundSchema` instead. */
  export const inboundSchema = PostV1ScheduledMaintenancesImpacts$inboundSchema;
  /** @deprecated use `PostV1ScheduledMaintenancesImpacts$outboundSchema` instead. */
  export const outboundSchema =
    PostV1ScheduledMaintenancesImpacts$outboundSchema;
  /** @deprecated use `PostV1ScheduledMaintenancesImpacts$Outbound` instead. */
  export type Outbound = PostV1ScheduledMaintenancesImpacts$Outbound;
}

export function postV1ScheduledMaintenancesImpactsToJSON(
  postV1ScheduledMaintenancesImpacts: PostV1ScheduledMaintenancesImpacts,
): string {
  return JSON.stringify(
    PostV1ScheduledMaintenancesImpacts$outboundSchema.parse(
      postV1ScheduledMaintenancesImpacts,
    ),
  );
}

export function postV1ScheduledMaintenancesImpactsFromJSON(
  jsonString: string,
): SafeParseResult<PostV1ScheduledMaintenancesImpacts, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV1ScheduledMaintenancesImpacts$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV1ScheduledMaintenancesImpacts' from JSON`,
  );
}

/** @internal */
export const PostV1ScheduledMaintenances$inboundSchema: z.ZodType<
  PostV1ScheduledMaintenances,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  starts_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ends_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  summary: z.string().optional(),
  description: z.string().optional(),
  labels: z.record(z.string()).optional(),
  status_pages: z.array(
    z.lazy(() => PostV1ScheduledMaintenancesStatusPages$inboundSchema),
  ).optional(),
  impacts: z.array(
    z.lazy(() => PostV1ScheduledMaintenancesImpacts$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "starts_at": "startsAt",
    "ends_at": "endsAt",
    "status_pages": "statusPages",
  });
});

/** @internal */
export type PostV1ScheduledMaintenances$Outbound = {
  name: string;
  starts_at: string;
  ends_at: string;
  summary?: string | undefined;
  description?: string | undefined;
  labels?: { [k: string]: string } | undefined;
  status_pages?:
    | Array<PostV1ScheduledMaintenancesStatusPages$Outbound>
    | undefined;
  impacts?: Array<PostV1ScheduledMaintenancesImpacts$Outbound> | undefined;
};

/** @internal */
export const PostV1ScheduledMaintenances$outboundSchema: z.ZodType<
  PostV1ScheduledMaintenances$Outbound,
  z.ZodTypeDef,
  PostV1ScheduledMaintenances
> = z.object({
  name: z.string(),
  startsAt: z.date().transform(v => v.toISOString()),
  endsAt: z.date().transform(v => v.toISOString()),
  summary: z.string().optional(),
  description: z.string().optional(),
  labels: z.record(z.string()).optional(),
  statusPages: z.array(
    z.lazy(() => PostV1ScheduledMaintenancesStatusPages$outboundSchema),
  ).optional(),
  impacts: z.array(
    z.lazy(() => PostV1ScheduledMaintenancesImpacts$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    startsAt: "starts_at",
    endsAt: "ends_at",
    statusPages: "status_pages",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1ScheduledMaintenances$ {
  /** @deprecated use `PostV1ScheduledMaintenances$inboundSchema` instead. */
  export const inboundSchema = PostV1ScheduledMaintenances$inboundSchema;
  /** @deprecated use `PostV1ScheduledMaintenances$outboundSchema` instead. */
  export const outboundSchema = PostV1ScheduledMaintenances$outboundSchema;
  /** @deprecated use `PostV1ScheduledMaintenances$Outbound` instead. */
  export type Outbound = PostV1ScheduledMaintenances$Outbound;
}

export function postV1ScheduledMaintenancesToJSON(
  postV1ScheduledMaintenances: PostV1ScheduledMaintenances,
): string {
  return JSON.stringify(
    PostV1ScheduledMaintenances$outboundSchema.parse(
      postV1ScheduledMaintenances,
    ),
  );
}

export function postV1ScheduledMaintenancesFromJSON(
  jsonString: string,
): SafeParseResult<PostV1ScheduledMaintenances, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV1ScheduledMaintenances$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV1ScheduledMaintenances' from JSON`,
  );
}
