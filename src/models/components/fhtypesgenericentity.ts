/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FHTypesGenericEntity = {
  type?: string | undefined;
  value?: string | undefined;
  label?: string | undefined;
};

/** @internal */
export const FHTypesGenericEntity$inboundSchema: z.ZodType<
  FHTypesGenericEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.string().optional(),
  value: z.string().optional(),
  label: z.string().optional(),
});

/** @internal */
export type FHTypesGenericEntity$Outbound = {
  type?: string | undefined;
  value?: string | undefined;
  label?: string | undefined;
};

/** @internal */
export const FHTypesGenericEntity$outboundSchema: z.ZodType<
  FHTypesGenericEntity$Outbound,
  z.ZodTypeDef,
  FHTypesGenericEntity
> = z.object({
  type: z.string().optional(),
  value: z.string().optional(),
  label: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FHTypesGenericEntity$ {
  /** @deprecated use `FHTypesGenericEntity$inboundSchema` instead. */
  export const inboundSchema = FHTypesGenericEntity$inboundSchema;
  /** @deprecated use `FHTypesGenericEntity$outboundSchema` instead. */
  export const outboundSchema = FHTypesGenericEntity$outboundSchema;
  /** @deprecated use `FHTypesGenericEntity$Outbound` instead. */
  export type Outbound = FHTypesGenericEntity$Outbound;
}

export function fhTypesGenericEntityToJSON(
  fhTypesGenericEntity: FHTypesGenericEntity,
): string {
  return JSON.stringify(
    FHTypesGenericEntity$outboundSchema.parse(fhTypesGenericEntity),
  );
}

export function fhTypesGenericEntityFromJSON(
  jsonString: string,
): SafeParseResult<FHTypesGenericEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FHTypesGenericEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FHTypesGenericEntity' from JSON`,
  );
}
