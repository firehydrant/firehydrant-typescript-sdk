/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Update the notes of the service dependency
 */
export type UpdateServiceDependency = {
  /**
   * A note to describe the service dependency relationship
   */
  notes?: string | null | undefined;
};

/** @internal */
export const UpdateServiceDependency$inboundSchema: z.ZodType<
  UpdateServiceDependency,
  z.ZodTypeDef,
  unknown
> = z.object({
  notes: z.nullable(z.string()).optional(),
});

/** @internal */
export type UpdateServiceDependency$Outbound = {
  notes?: string | null | undefined;
};

/** @internal */
export const UpdateServiceDependency$outboundSchema: z.ZodType<
  UpdateServiceDependency$Outbound,
  z.ZodTypeDef,
  UpdateServiceDependency
> = z.object({
  notes: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateServiceDependency$ {
  /** @deprecated use `UpdateServiceDependency$inboundSchema` instead. */
  export const inboundSchema = UpdateServiceDependency$inboundSchema;
  /** @deprecated use `UpdateServiceDependency$outboundSchema` instead. */
  export const outboundSchema = UpdateServiceDependency$outboundSchema;
  /** @deprecated use `UpdateServiceDependency$Outbound` instead. */
  export type Outbound = UpdateServiceDependency$Outbound;
}

export function updateServiceDependencyToJSON(
  updateServiceDependency: UpdateServiceDependency,
): string {
  return JSON.stringify(
    UpdateServiceDependency$outboundSchema.parse(updateServiceDependency),
  );
}

export function updateServiceDependencyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateServiceDependency, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateServiceDependency$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateServiceDependency' from JSON`,
  );
}
