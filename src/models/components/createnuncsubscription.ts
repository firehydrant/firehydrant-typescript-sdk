/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Subscribe to status page updates
 */
export type CreateNuncSubscription = {
  email: string;
};

/** @internal */
export const CreateNuncSubscription$inboundSchema: z.ZodType<
  CreateNuncSubscription,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string(),
});

/** @internal */
export type CreateNuncSubscription$Outbound = {
  email: string;
};

/** @internal */
export const CreateNuncSubscription$outboundSchema: z.ZodType<
  CreateNuncSubscription$Outbound,
  z.ZodTypeDef,
  CreateNuncSubscription
> = z.object({
  email: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateNuncSubscription$ {
  /** @deprecated use `CreateNuncSubscription$inboundSchema` instead. */
  export const inboundSchema = CreateNuncSubscription$inboundSchema;
  /** @deprecated use `CreateNuncSubscription$outboundSchema` instead. */
  export const outboundSchema = CreateNuncSubscription$outboundSchema;
  /** @deprecated use `CreateNuncSubscription$Outbound` instead. */
  export type Outbound = CreateNuncSubscription$Outbound;
}

export function createNuncSubscriptionToJSON(
  createNuncSubscription: CreateNuncSubscription,
): string {
  return JSON.stringify(
    CreateNuncSubscription$outboundSchema.parse(createNuncSubscription),
  );
}

export function createNuncSubscriptionFromJSON(
  jsonString: string,
): SafeParseResult<CreateNuncSubscription, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateNuncSubscription$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateNuncSubscription' from JSON`,
  );
}
