/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RunbooksElementTextareaEntity = {
  label?: string | undefined;
  placeholder?: string | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RunbooksElementTextareaEntity$inboundSchema: z.ZodType<
  RunbooksElementTextareaEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  default_value: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "default_value": "defaultValue",
  });
});

/** @internal */
export type RunbooksElementTextareaEntity$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  default_value?: string | undefined;
};

/** @internal */
export const RunbooksElementTextareaEntity$outboundSchema: z.ZodType<
  RunbooksElementTextareaEntity$Outbound,
  z.ZodTypeDef,
  RunbooksElementTextareaEntity
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  defaultValue: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    defaultValue: "default_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbooksElementTextareaEntity$ {
  /** @deprecated use `RunbooksElementTextareaEntity$inboundSchema` instead. */
  export const inboundSchema = RunbooksElementTextareaEntity$inboundSchema;
  /** @deprecated use `RunbooksElementTextareaEntity$outboundSchema` instead. */
  export const outboundSchema = RunbooksElementTextareaEntity$outboundSchema;
  /** @deprecated use `RunbooksElementTextareaEntity$Outbound` instead. */
  export type Outbound = RunbooksElementTextareaEntity$Outbound;
}

export function runbooksElementTextareaEntityToJSON(
  runbooksElementTextareaEntity: RunbooksElementTextareaEntity,
): string {
  return JSON.stringify(
    RunbooksElementTextareaEntity$outboundSchema.parse(
      runbooksElementTextareaEntity,
    ),
  );
}

export function runbooksElementTextareaEntityFromJSON(
  jsonString: string,
): SafeParseResult<RunbooksElementTextareaEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunbooksElementTextareaEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunbooksElementTextareaEntity' from JSON`,
  );
}
