/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Add all tasks from list to incident
 */
export type PostV1IncidentsIncidentIdTaskLists = {
  /**
   * The id of the task list.
   */
  taskListId: string;
  /**
   * The ID of the user assigned to the tasks in this list.
   */
  assigneeId?: string | undefined;
};

/** @internal */
export const PostV1IncidentsIncidentIdTaskLists$inboundSchema: z.ZodType<
  PostV1IncidentsIncidentIdTaskLists,
  z.ZodTypeDef,
  unknown
> = z.object({
  task_list_id: z.string(),
  assignee_id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "task_list_id": "taskListId",
    "assignee_id": "assigneeId",
  });
});

/** @internal */
export type PostV1IncidentsIncidentIdTaskLists$Outbound = {
  task_list_id: string;
  assignee_id?: string | undefined;
};

/** @internal */
export const PostV1IncidentsIncidentIdTaskLists$outboundSchema: z.ZodType<
  PostV1IncidentsIncidentIdTaskLists$Outbound,
  z.ZodTypeDef,
  PostV1IncidentsIncidentIdTaskLists
> = z.object({
  taskListId: z.string(),
  assigneeId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    taskListId: "task_list_id",
    assigneeId: "assignee_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1IncidentsIncidentIdTaskLists$ {
  /** @deprecated use `PostV1IncidentsIncidentIdTaskLists$inboundSchema` instead. */
  export const inboundSchema = PostV1IncidentsIncidentIdTaskLists$inboundSchema;
  /** @deprecated use `PostV1IncidentsIncidentIdTaskLists$outboundSchema` instead. */
  export const outboundSchema =
    PostV1IncidentsIncidentIdTaskLists$outboundSchema;
  /** @deprecated use `PostV1IncidentsIncidentIdTaskLists$Outbound` instead. */
  export type Outbound = PostV1IncidentsIncidentIdTaskLists$Outbound;
}

export function postV1IncidentsIncidentIdTaskListsToJSON(
  postV1IncidentsIncidentIdTaskLists: PostV1IncidentsIncidentIdTaskLists,
): string {
  return JSON.stringify(
    PostV1IncidentsIncidentIdTaskLists$outboundSchema.parse(
      postV1IncidentsIncidentIdTaskLists,
    ),
  );
}

export function postV1IncidentsIncidentIdTaskListsFromJSON(
  jsonString: string,
): SafeParseResult<PostV1IncidentsIncidentIdTaskLists, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV1IncidentsIncidentIdTaskLists$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV1IncidentsIncidentIdTaskLists' from JSON`,
  );
}
