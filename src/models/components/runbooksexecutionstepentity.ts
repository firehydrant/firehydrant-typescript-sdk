/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  RulesRuleEntity,
  RulesRuleEntity$inboundSchema,
  RulesRuleEntity$Outbound,
  RulesRuleEntity$outboundSchema,
} from "./rulesruleentity.js";
import {
  RunbooksExecutionStepExecutionEntity,
  RunbooksExecutionStepExecutionEntity$inboundSchema,
  RunbooksExecutionStepExecutionEntity$Outbound,
  RunbooksExecutionStepExecutionEntity$outboundSchema,
} from "./runbooksexecutionstepexecutionentity.js";

export type RunbooksExecutionStepEntityConfig = {};

export type RunbooksExecutionStepEntityStepElements = {};

export type RunbooksExecutionStepEntity = {
  id?: string | undefined;
  name?: string | undefined;
  actionSlug?: string | undefined;
  actionType?: string | undefined;
  integrationName?: string | undefined;
  integrationSlug?: string | undefined;
  automatic?: boolean | undefined;
  config?: RunbooksExecutionStepEntityConfig | undefined;
  stepElements?: Array<RunbooksExecutionStepEntityStepElements> | undefined;
  executable?: boolean | undefined;
  repeats?: boolean | undefined;
  /**
   * ISO8601 formatted duration string
   */
  repeatsDuration?: string | undefined;
  repeatsAt?: Date | undefined;
  hasBeenRerun?: boolean | undefined;
  hasBeenRetried?: boolean | undefined;
  execution?: RunbooksExecutionStepExecutionEntity | undefined;
  repeatable?: boolean | undefined;
  rule?: RulesRuleEntity | undefined;
};

/** @internal */
export const RunbooksExecutionStepEntityConfig$inboundSchema: z.ZodType<
  RunbooksExecutionStepEntityConfig,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type RunbooksExecutionStepEntityConfig$Outbound = {};

/** @internal */
export const RunbooksExecutionStepEntityConfig$outboundSchema: z.ZodType<
  RunbooksExecutionStepEntityConfig$Outbound,
  z.ZodTypeDef,
  RunbooksExecutionStepEntityConfig
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbooksExecutionStepEntityConfig$ {
  /** @deprecated use `RunbooksExecutionStepEntityConfig$inboundSchema` instead. */
  export const inboundSchema = RunbooksExecutionStepEntityConfig$inboundSchema;
  /** @deprecated use `RunbooksExecutionStepEntityConfig$outboundSchema` instead. */
  export const outboundSchema =
    RunbooksExecutionStepEntityConfig$outboundSchema;
  /** @deprecated use `RunbooksExecutionStepEntityConfig$Outbound` instead. */
  export type Outbound = RunbooksExecutionStepEntityConfig$Outbound;
}

export function runbooksExecutionStepEntityConfigToJSON(
  runbooksExecutionStepEntityConfig: RunbooksExecutionStepEntityConfig,
): string {
  return JSON.stringify(
    RunbooksExecutionStepEntityConfig$outboundSchema.parse(
      runbooksExecutionStepEntityConfig,
    ),
  );
}

export function runbooksExecutionStepEntityConfigFromJSON(
  jsonString: string,
): SafeParseResult<RunbooksExecutionStepEntityConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunbooksExecutionStepEntityConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunbooksExecutionStepEntityConfig' from JSON`,
  );
}

/** @internal */
export const RunbooksExecutionStepEntityStepElements$inboundSchema: z.ZodType<
  RunbooksExecutionStepEntityStepElements,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type RunbooksExecutionStepEntityStepElements$Outbound = {};

/** @internal */
export const RunbooksExecutionStepEntityStepElements$outboundSchema: z.ZodType<
  RunbooksExecutionStepEntityStepElements$Outbound,
  z.ZodTypeDef,
  RunbooksExecutionStepEntityStepElements
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbooksExecutionStepEntityStepElements$ {
  /** @deprecated use `RunbooksExecutionStepEntityStepElements$inboundSchema` instead. */
  export const inboundSchema =
    RunbooksExecutionStepEntityStepElements$inboundSchema;
  /** @deprecated use `RunbooksExecutionStepEntityStepElements$outboundSchema` instead. */
  export const outboundSchema =
    RunbooksExecutionStepEntityStepElements$outboundSchema;
  /** @deprecated use `RunbooksExecutionStepEntityStepElements$Outbound` instead. */
  export type Outbound = RunbooksExecutionStepEntityStepElements$Outbound;
}

export function runbooksExecutionStepEntityStepElementsToJSON(
  runbooksExecutionStepEntityStepElements:
    RunbooksExecutionStepEntityStepElements,
): string {
  return JSON.stringify(
    RunbooksExecutionStepEntityStepElements$outboundSchema.parse(
      runbooksExecutionStepEntityStepElements,
    ),
  );
}

export function runbooksExecutionStepEntityStepElementsFromJSON(
  jsonString: string,
): SafeParseResult<
  RunbooksExecutionStepEntityStepElements,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RunbooksExecutionStepEntityStepElements$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RunbooksExecutionStepEntityStepElements' from JSON`,
  );
}

/** @internal */
export const RunbooksExecutionStepEntity$inboundSchema: z.ZodType<
  RunbooksExecutionStepEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  action_slug: z.string().optional(),
  action_type: z.string().optional(),
  integration_name: z.string().optional(),
  integration_slug: z.string().optional(),
  automatic: z.boolean().optional(),
  config: z.lazy(() => RunbooksExecutionStepEntityConfig$inboundSchema)
    .optional(),
  step_elements: z.array(
    z.lazy(() => RunbooksExecutionStepEntityStepElements$inboundSchema),
  ).optional(),
  executable: z.boolean().optional(),
  repeats: z.boolean().optional(),
  repeats_duration: z.string().optional(),
  repeats_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  has_been_rerun: z.boolean().optional(),
  has_been_retried: z.boolean().optional(),
  execution: RunbooksExecutionStepExecutionEntity$inboundSchema.optional(),
  repeatable: z.boolean().optional(),
  rule: RulesRuleEntity$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "action_slug": "actionSlug",
    "action_type": "actionType",
    "integration_name": "integrationName",
    "integration_slug": "integrationSlug",
    "step_elements": "stepElements",
    "repeats_duration": "repeatsDuration",
    "repeats_at": "repeatsAt",
    "has_been_rerun": "hasBeenRerun",
    "has_been_retried": "hasBeenRetried",
  });
});

/** @internal */
export type RunbooksExecutionStepEntity$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  action_slug?: string | undefined;
  action_type?: string | undefined;
  integration_name?: string | undefined;
  integration_slug?: string | undefined;
  automatic?: boolean | undefined;
  config?: RunbooksExecutionStepEntityConfig$Outbound | undefined;
  step_elements?:
    | Array<RunbooksExecutionStepEntityStepElements$Outbound>
    | undefined;
  executable?: boolean | undefined;
  repeats?: boolean | undefined;
  repeats_duration?: string | undefined;
  repeats_at?: string | undefined;
  has_been_rerun?: boolean | undefined;
  has_been_retried?: boolean | undefined;
  execution?: RunbooksExecutionStepExecutionEntity$Outbound | undefined;
  repeatable?: boolean | undefined;
  rule?: RulesRuleEntity$Outbound | undefined;
};

/** @internal */
export const RunbooksExecutionStepEntity$outboundSchema: z.ZodType<
  RunbooksExecutionStepEntity$Outbound,
  z.ZodTypeDef,
  RunbooksExecutionStepEntity
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  actionSlug: z.string().optional(),
  actionType: z.string().optional(),
  integrationName: z.string().optional(),
  integrationSlug: z.string().optional(),
  automatic: z.boolean().optional(),
  config: z.lazy(() => RunbooksExecutionStepEntityConfig$outboundSchema)
    .optional(),
  stepElements: z.array(
    z.lazy(() => RunbooksExecutionStepEntityStepElements$outboundSchema),
  ).optional(),
  executable: z.boolean().optional(),
  repeats: z.boolean().optional(),
  repeatsDuration: z.string().optional(),
  repeatsAt: z.date().transform(v => v.toISOString()).optional(),
  hasBeenRerun: z.boolean().optional(),
  hasBeenRetried: z.boolean().optional(),
  execution: RunbooksExecutionStepExecutionEntity$outboundSchema.optional(),
  repeatable: z.boolean().optional(),
  rule: RulesRuleEntity$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    actionSlug: "action_slug",
    actionType: "action_type",
    integrationName: "integration_name",
    integrationSlug: "integration_slug",
    stepElements: "step_elements",
    repeatsDuration: "repeats_duration",
    repeatsAt: "repeats_at",
    hasBeenRerun: "has_been_rerun",
    hasBeenRetried: "has_been_retried",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunbooksExecutionStepEntity$ {
  /** @deprecated use `RunbooksExecutionStepEntity$inboundSchema` instead. */
  export const inboundSchema = RunbooksExecutionStepEntity$inboundSchema;
  /** @deprecated use `RunbooksExecutionStepEntity$outboundSchema` instead. */
  export const outboundSchema = RunbooksExecutionStepEntity$outboundSchema;
  /** @deprecated use `RunbooksExecutionStepEntity$Outbound` instead. */
  export type Outbound = RunbooksExecutionStepEntity$Outbound;
}

export function runbooksExecutionStepEntityToJSON(
  runbooksExecutionStepEntity: RunbooksExecutionStepEntity,
): string {
  return JSON.stringify(
    RunbooksExecutionStepEntity$outboundSchema.parse(
      runbooksExecutionStepEntity,
    ),
  );
}

export function runbooksExecutionStepEntityFromJSON(
  jsonString: string,
): SafeParseResult<RunbooksExecutionStepEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunbooksExecutionStepEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunbooksExecutionStepEntity' from JSON`,
  );
}
