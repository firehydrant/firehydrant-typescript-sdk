/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Assign a team for this incident
 */
export type PostV1IncidentsIncidentIdTeamAssignments = {
  /**
   * The team ID to associate to the incident
   */
  teamId: string;
};

/** @internal */
export const PostV1IncidentsIncidentIdTeamAssignments$inboundSchema: z.ZodType<
  PostV1IncidentsIncidentIdTeamAssignments,
  z.ZodTypeDef,
  unknown
> = z.object({
  team_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "team_id": "teamId",
  });
});

/** @internal */
export type PostV1IncidentsIncidentIdTeamAssignments$Outbound = {
  team_id: string;
};

/** @internal */
export const PostV1IncidentsIncidentIdTeamAssignments$outboundSchema: z.ZodType<
  PostV1IncidentsIncidentIdTeamAssignments$Outbound,
  z.ZodTypeDef,
  PostV1IncidentsIncidentIdTeamAssignments
> = z.object({
  teamId: z.string(),
}).transform((v) => {
  return remap$(v, {
    teamId: "team_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1IncidentsIncidentIdTeamAssignments$ {
  /** @deprecated use `PostV1IncidentsIncidentIdTeamAssignments$inboundSchema` instead. */
  export const inboundSchema =
    PostV1IncidentsIncidentIdTeamAssignments$inboundSchema;
  /** @deprecated use `PostV1IncidentsIncidentIdTeamAssignments$outboundSchema` instead. */
  export const outboundSchema =
    PostV1IncidentsIncidentIdTeamAssignments$outboundSchema;
  /** @deprecated use `PostV1IncidentsIncidentIdTeamAssignments$Outbound` instead. */
  export type Outbound = PostV1IncidentsIncidentIdTeamAssignments$Outbound;
}

export function postV1IncidentsIncidentIdTeamAssignmentsToJSON(
  postV1IncidentsIncidentIdTeamAssignments:
    PostV1IncidentsIncidentIdTeamAssignments,
): string {
  return JSON.stringify(
    PostV1IncidentsIncidentIdTeamAssignments$outboundSchema.parse(
      postV1IncidentsIncidentIdTeamAssignments,
    ),
  );
}

export function postV1IncidentsIncidentIdTeamAssignmentsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV1IncidentsIncidentIdTeamAssignments,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV1IncidentsIncidentIdTeamAssignments$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV1IncidentsIncidentIdTeamAssignments' from JSON`,
  );
}
