/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Create a new impact
 */
export type CreateSeverityMatrixImpact = {
  affectsType: string;
  affectsId: string;
  position?: number | null | undefined;
};

/** @internal */
export const CreateSeverityMatrixImpact$inboundSchema: z.ZodType<
  CreateSeverityMatrixImpact,
  z.ZodTypeDef,
  unknown
> = z.object({
  affects_type: z.string(),
  affects_id: z.string(),
  position: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "affects_type": "affectsType",
    "affects_id": "affectsId",
  });
});

/** @internal */
export type CreateSeverityMatrixImpact$Outbound = {
  affects_type: string;
  affects_id: string;
  position?: number | null | undefined;
};

/** @internal */
export const CreateSeverityMatrixImpact$outboundSchema: z.ZodType<
  CreateSeverityMatrixImpact$Outbound,
  z.ZodTypeDef,
  CreateSeverityMatrixImpact
> = z.object({
  affectsType: z.string(),
  affectsId: z.string(),
  position: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    affectsType: "affects_type",
    affectsId: "affects_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSeverityMatrixImpact$ {
  /** @deprecated use `CreateSeverityMatrixImpact$inboundSchema` instead. */
  export const inboundSchema = CreateSeverityMatrixImpact$inboundSchema;
  /** @deprecated use `CreateSeverityMatrixImpact$outboundSchema` instead. */
  export const outboundSchema = CreateSeverityMatrixImpact$outboundSchema;
  /** @deprecated use `CreateSeverityMatrixImpact$Outbound` instead. */
  export type Outbound = CreateSeverityMatrixImpact$Outbound;
}

export function createSeverityMatrixImpactToJSON(
  createSeverityMatrixImpact: CreateSeverityMatrixImpact,
): string {
  return JSON.stringify(
    CreateSeverityMatrixImpact$outboundSchema.parse(createSeverityMatrixImpact),
  );
}

export function createSeverityMatrixImpactFromJSON(
  jsonString: string,
): SafeParseResult<CreateSeverityMatrixImpact, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateSeverityMatrixImpact$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateSeverityMatrixImpact' from JSON`,
  );
}
