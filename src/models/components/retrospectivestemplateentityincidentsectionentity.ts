/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RetrospectivesTemplateEntityIncidentSectionEntity = {
  slug?: string | null | undefined;
  elements?: Array<string> | null | undefined;
};

/** @internal */
export const RetrospectivesTemplateEntityIncidentSectionEntity$inboundSchema:
  z.ZodType<
    RetrospectivesTemplateEntityIncidentSectionEntity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    slug: z.nullable(z.string()).optional(),
    elements: z.nullable(z.array(z.string())).optional(),
  });

/** @internal */
export type RetrospectivesTemplateEntityIncidentSectionEntity$Outbound = {
  slug?: string | null | undefined;
  elements?: Array<string> | null | undefined;
};

/** @internal */
export const RetrospectivesTemplateEntityIncidentSectionEntity$outboundSchema:
  z.ZodType<
    RetrospectivesTemplateEntityIncidentSectionEntity$Outbound,
    z.ZodTypeDef,
    RetrospectivesTemplateEntityIncidentSectionEntity
  > = z.object({
    slug: z.nullable(z.string()).optional(),
    elements: z.nullable(z.array(z.string())).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrospectivesTemplateEntityIncidentSectionEntity$ {
  /** @deprecated use `RetrospectivesTemplateEntityIncidentSectionEntity$inboundSchema` instead. */
  export const inboundSchema =
    RetrospectivesTemplateEntityIncidentSectionEntity$inboundSchema;
  /** @deprecated use `RetrospectivesTemplateEntityIncidentSectionEntity$outboundSchema` instead. */
  export const outboundSchema =
    RetrospectivesTemplateEntityIncidentSectionEntity$outboundSchema;
  /** @deprecated use `RetrospectivesTemplateEntityIncidentSectionEntity$Outbound` instead. */
  export type Outbound =
    RetrospectivesTemplateEntityIncidentSectionEntity$Outbound;
}

export function retrospectivesTemplateEntityIncidentSectionEntityToJSON(
  retrospectivesTemplateEntityIncidentSectionEntity:
    RetrospectivesTemplateEntityIncidentSectionEntity,
): string {
  return JSON.stringify(
    RetrospectivesTemplateEntityIncidentSectionEntity$outboundSchema.parse(
      retrospectivesTemplateEntityIncidentSectionEntity,
    ),
  );
}

export function retrospectivesTemplateEntityIncidentSectionEntityFromJSON(
  jsonString: string,
): SafeParseResult<
  RetrospectivesTemplateEntityIncidentSectionEntity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RetrospectivesTemplateEntityIncidentSectionEntity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RetrospectivesTemplateEntityIncidentSectionEntity' from JSON`,
  );
}
