/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteCallRouteRequest = {
  id: string;
};

/** @internal */
export const DeleteCallRouteRequest$inboundSchema: z.ZodType<
  DeleteCallRouteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteCallRouteRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteCallRouteRequest$outboundSchema: z.ZodType<
  DeleteCallRouteRequest$Outbound,
  z.ZodTypeDef,
  DeleteCallRouteRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteCallRouteRequest$ {
  /** @deprecated use `DeleteCallRouteRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteCallRouteRequest$inboundSchema;
  /** @deprecated use `DeleteCallRouteRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteCallRouteRequest$outboundSchema;
  /** @deprecated use `DeleteCallRouteRequest$Outbound` instead. */
  export type Outbound = DeleteCallRouteRequest$Outbound;
}

export function deleteCallRouteRequestToJSON(
  deleteCallRouteRequest: DeleteCallRouteRequest,
): string {
  return JSON.stringify(
    DeleteCallRouteRequest$outboundSchema.parse(deleteCallRouteRequest),
  );
}

export function deleteCallRouteRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteCallRouteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteCallRouteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteCallRouteRequest' from JSON`,
  );
}
