/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateNuncComponentGroupRequestBody = {
  name: string;
  componentGroupId?: string | null | undefined;
  position?: number | null | undefined;
};

export type CreateNuncComponentGroupRequest = {
  nuncConnectionId: string;
  requestBody: CreateNuncComponentGroupRequestBody;
};

/** @internal */
export const CreateNuncComponentGroupRequestBody$inboundSchema: z.ZodType<
  CreateNuncComponentGroupRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  component_group_id: z.nullable(z.string()).optional(),
  position: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "component_group_id": "componentGroupId",
  });
});

/** @internal */
export type CreateNuncComponentGroupRequestBody$Outbound = {
  name: string;
  component_group_id?: string | null | undefined;
  position?: number | null | undefined;
};

/** @internal */
export const CreateNuncComponentGroupRequestBody$outboundSchema: z.ZodType<
  CreateNuncComponentGroupRequestBody$Outbound,
  z.ZodTypeDef,
  CreateNuncComponentGroupRequestBody
> = z.object({
  name: z.string(),
  componentGroupId: z.nullable(z.string()).optional(),
  position: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    componentGroupId: "component_group_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateNuncComponentGroupRequestBody$ {
  /** @deprecated use `CreateNuncComponentGroupRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    CreateNuncComponentGroupRequestBody$inboundSchema;
  /** @deprecated use `CreateNuncComponentGroupRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateNuncComponentGroupRequestBody$outboundSchema;
  /** @deprecated use `CreateNuncComponentGroupRequestBody$Outbound` instead. */
  export type Outbound = CreateNuncComponentGroupRequestBody$Outbound;
}

export function createNuncComponentGroupRequestBodyToJSON(
  createNuncComponentGroupRequestBody: CreateNuncComponentGroupRequestBody,
): string {
  return JSON.stringify(
    CreateNuncComponentGroupRequestBody$outboundSchema.parse(
      createNuncComponentGroupRequestBody,
    ),
  );
}

export function createNuncComponentGroupRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateNuncComponentGroupRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateNuncComponentGroupRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateNuncComponentGroupRequestBody' from JSON`,
  );
}

/** @internal */
export const CreateNuncComponentGroupRequest$inboundSchema: z.ZodType<
  CreateNuncComponentGroupRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  nunc_connection_id: z.string(),
  RequestBody: z.lazy(() => CreateNuncComponentGroupRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "nunc_connection_id": "nuncConnectionId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type CreateNuncComponentGroupRequest$Outbound = {
  nunc_connection_id: string;
  RequestBody: CreateNuncComponentGroupRequestBody$Outbound;
};

/** @internal */
export const CreateNuncComponentGroupRequest$outboundSchema: z.ZodType<
  CreateNuncComponentGroupRequest$Outbound,
  z.ZodTypeDef,
  CreateNuncComponentGroupRequest
> = z.object({
  nuncConnectionId: z.string(),
  requestBody: z.lazy(() => CreateNuncComponentGroupRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    nuncConnectionId: "nunc_connection_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateNuncComponentGroupRequest$ {
  /** @deprecated use `CreateNuncComponentGroupRequest$inboundSchema` instead. */
  export const inboundSchema = CreateNuncComponentGroupRequest$inboundSchema;
  /** @deprecated use `CreateNuncComponentGroupRequest$outboundSchema` instead. */
  export const outboundSchema = CreateNuncComponentGroupRequest$outboundSchema;
  /** @deprecated use `CreateNuncComponentGroupRequest$Outbound` instead. */
  export type Outbound = CreateNuncComponentGroupRequest$Outbound;
}

export function createNuncComponentGroupRequestToJSON(
  createNuncComponentGroupRequest: CreateNuncComponentGroupRequest,
): string {
  return JSON.stringify(
    CreateNuncComponentGroupRequest$outboundSchema.parse(
      createNuncComponentGroupRequest,
    ),
  );
}

export function createNuncComponentGroupRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateNuncComponentGroupRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateNuncComponentGroupRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateNuncComponentGroupRequest' from JSON`,
  );
}
