/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateTicketingPriorityRequest = {
  id: string;
  updateTicketingPriority: components.UpdateTicketingPriority;
};

/** @internal */
export const UpdateTicketingPriorityRequest$inboundSchema: z.ZodType<
  UpdateTicketingPriorityRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  update_ticketing_priority: z.lazy(() =>
    components.UpdateTicketingPriority$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "update_ticketing_priority": "updateTicketingPriority",
  });
});

/** @internal */
export type UpdateTicketingPriorityRequest$Outbound = {
  id: string;
  update_ticketing_priority: components.UpdateTicketingPriority$Outbound;
};

/** @internal */
export const UpdateTicketingPriorityRequest$outboundSchema: z.ZodType<
  UpdateTicketingPriorityRequest$Outbound,
  z.ZodTypeDef,
  UpdateTicketingPriorityRequest
> = z.object({
  id: z.string(),
  updateTicketingPriority: z.lazy(() =>
    components.UpdateTicketingPriority$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    updateTicketingPriority: "update_ticketing_priority",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTicketingPriorityRequest$ {
  /** @deprecated use `UpdateTicketingPriorityRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateTicketingPriorityRequest$inboundSchema;
  /** @deprecated use `UpdateTicketingPriorityRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateTicketingPriorityRequest$outboundSchema;
  /** @deprecated use `UpdateTicketingPriorityRequest$Outbound` instead. */
  export type Outbound = UpdateTicketingPriorityRequest$Outbound;
}

export function updateTicketingPriorityRequestToJSON(
  updateTicketingPriorityRequest: UpdateTicketingPriorityRequest,
): string {
  return JSON.stringify(
    UpdateTicketingPriorityRequest$outboundSchema.parse(
      updateTicketingPriorityRequest,
    ),
  );
}

export function updateTicketingPriorityRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTicketingPriorityRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTicketingPriorityRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTicketingPriorityRequest' from JSON`,
  );
}
