/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateOnCallScheduleRotationRequest = {
  rotationId: string;
  teamId: string;
  scheduleId: string;
  updateOnCallScheduleRotation: components.UpdateOnCallScheduleRotation;
};

/** @internal */
export const UpdateOnCallScheduleRotationRequest$inboundSchema: z.ZodType<
  UpdateOnCallScheduleRotationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  rotation_id: z.string(),
  team_id: z.string(),
  schedule_id: z.string(),
  update_on_call_schedule_rotation: z.lazy(() =>
    components.UpdateOnCallScheduleRotation$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "rotation_id": "rotationId",
    "team_id": "teamId",
    "schedule_id": "scheduleId",
    "update_on_call_schedule_rotation": "updateOnCallScheduleRotation",
  });
});

/** @internal */
export type UpdateOnCallScheduleRotationRequest$Outbound = {
  rotation_id: string;
  team_id: string;
  schedule_id: string;
  update_on_call_schedule_rotation:
    components.UpdateOnCallScheduleRotation$Outbound;
};

/** @internal */
export const UpdateOnCallScheduleRotationRequest$outboundSchema: z.ZodType<
  UpdateOnCallScheduleRotationRequest$Outbound,
  z.ZodTypeDef,
  UpdateOnCallScheduleRotationRequest
> = z.object({
  rotationId: z.string(),
  teamId: z.string(),
  scheduleId: z.string(),
  updateOnCallScheduleRotation: z.lazy(() =>
    components.UpdateOnCallScheduleRotation$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    rotationId: "rotation_id",
    teamId: "team_id",
    scheduleId: "schedule_id",
    updateOnCallScheduleRotation: "update_on_call_schedule_rotation",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateOnCallScheduleRotationRequest$ {
  /** @deprecated use `UpdateOnCallScheduleRotationRequest$inboundSchema` instead. */
  export const inboundSchema =
    UpdateOnCallScheduleRotationRequest$inboundSchema;
  /** @deprecated use `UpdateOnCallScheduleRotationRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateOnCallScheduleRotationRequest$outboundSchema;
  /** @deprecated use `UpdateOnCallScheduleRotationRequest$Outbound` instead. */
  export type Outbound = UpdateOnCallScheduleRotationRequest$Outbound;
}

export function updateOnCallScheduleRotationRequestToJSON(
  updateOnCallScheduleRotationRequest: UpdateOnCallScheduleRotationRequest,
): string {
  return JSON.stringify(
    UpdateOnCallScheduleRotationRequest$outboundSchema.parse(
      updateOnCallScheduleRotationRequest,
    ),
  );
}

export function updateOnCallScheduleRotationRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateOnCallScheduleRotationRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateOnCallScheduleRotationRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateOnCallScheduleRotationRequest' from JSON`,
  );
}
