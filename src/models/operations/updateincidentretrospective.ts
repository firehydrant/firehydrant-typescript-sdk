/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateIncidentRetrospectiveRequest = {
  retrospectiveId: string;
  incidentId: string;
  updateIncidentRetrospective: components.UpdateIncidentRetrospective;
};

/** @internal */
export const UpdateIncidentRetrospectiveRequest$inboundSchema: z.ZodType<
  UpdateIncidentRetrospectiveRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  retrospective_id: z.string(),
  incident_id: z.string(),
  update_incident_retrospective: z.lazy(() =>
    components.UpdateIncidentRetrospective$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "retrospective_id": "retrospectiveId",
    "incident_id": "incidentId",
    "update_incident_retrospective": "updateIncidentRetrospective",
  });
});

/** @internal */
export type UpdateIncidentRetrospectiveRequest$Outbound = {
  retrospective_id: string;
  incident_id: string;
  update_incident_retrospective:
    components.UpdateIncidentRetrospective$Outbound;
};

/** @internal */
export const UpdateIncidentRetrospectiveRequest$outboundSchema: z.ZodType<
  UpdateIncidentRetrospectiveRequest$Outbound,
  z.ZodTypeDef,
  UpdateIncidentRetrospectiveRequest
> = z.object({
  retrospectiveId: z.string(),
  incidentId: z.string(),
  updateIncidentRetrospective: z.lazy(() =>
    components.UpdateIncidentRetrospective$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    retrospectiveId: "retrospective_id",
    incidentId: "incident_id",
    updateIncidentRetrospective: "update_incident_retrospective",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentRetrospectiveRequest$ {
  /** @deprecated use `UpdateIncidentRetrospectiveRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentRetrospectiveRequest$inboundSchema;
  /** @deprecated use `UpdateIncidentRetrospectiveRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateIncidentRetrospectiveRequest$outboundSchema;
  /** @deprecated use `UpdateIncidentRetrospectiveRequest$Outbound` instead. */
  export type Outbound = UpdateIncidentRetrospectiveRequest$Outbound;
}

export function updateIncidentRetrospectiveRequestToJSON(
  updateIncidentRetrospectiveRequest: UpdateIncidentRetrospectiveRequest,
): string {
  return JSON.stringify(
    UpdateIncidentRetrospectiveRequest$outboundSchema.parse(
      updateIncidentRetrospectiveRequest,
    ),
  );
}

export function updateIncidentRetrospectiveRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentRetrospectiveRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateIncidentRetrospectiveRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentRetrospectiveRequest' from JSON`,
  );
}
