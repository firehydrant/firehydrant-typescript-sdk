/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PathParamResourceType = {
  ChangeEvents: "change_events",
  Incidents: "incidents",
  Services: "services",
  ScheduledMaintenances: "scheduled_maintenances",
  TicketTasks: "ticket_tasks",
  TicketFollowUps: "ticket_follow_ups",
  Analytics: "analytics",
  ImpactAnalytics: "impact_analytics",
  Alerts: "alerts",
  IncidentEvents: "incident_events",
} as const;
export type PathParamResourceType = ClosedEnum<typeof PathParamResourceType>;

export type CreateSavedSearchRequest = {
  resourceType: PathParamResourceType;
  postV1SavedSearchesResourceType: components.PostV1SavedSearchesResourceType;
};

/** @internal */
export const PathParamResourceType$inboundSchema: z.ZodNativeEnum<
  typeof PathParamResourceType
> = z.nativeEnum(PathParamResourceType);

/** @internal */
export const PathParamResourceType$outboundSchema: z.ZodNativeEnum<
  typeof PathParamResourceType
> = PathParamResourceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PathParamResourceType$ {
  /** @deprecated use `PathParamResourceType$inboundSchema` instead. */
  export const inboundSchema = PathParamResourceType$inboundSchema;
  /** @deprecated use `PathParamResourceType$outboundSchema` instead. */
  export const outboundSchema = PathParamResourceType$outboundSchema;
}

/** @internal */
export const CreateSavedSearchRequest$inboundSchema: z.ZodType<
  CreateSavedSearchRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource_type: PathParamResourceType$inboundSchema,
  postV1SavedSearchesResourceType:
    components.PostV1SavedSearchesResourceType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "resource_type": "resourceType",
  });
});

/** @internal */
export type CreateSavedSearchRequest$Outbound = {
  resource_type: string;
  postV1SavedSearchesResourceType:
    components.PostV1SavedSearchesResourceType$Outbound;
};

/** @internal */
export const CreateSavedSearchRequest$outboundSchema: z.ZodType<
  CreateSavedSearchRequest$Outbound,
  z.ZodTypeDef,
  CreateSavedSearchRequest
> = z.object({
  resourceType: PathParamResourceType$outboundSchema,
  postV1SavedSearchesResourceType:
    components.PostV1SavedSearchesResourceType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    resourceType: "resource_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSavedSearchRequest$ {
  /** @deprecated use `CreateSavedSearchRequest$inboundSchema` instead. */
  export const inboundSchema = CreateSavedSearchRequest$inboundSchema;
  /** @deprecated use `CreateSavedSearchRequest$outboundSchema` instead. */
  export const outboundSchema = CreateSavedSearchRequest$outboundSchema;
  /** @deprecated use `CreateSavedSearchRequest$Outbound` instead. */
  export type Outbound = CreateSavedSearchRequest$Outbound;
}

export function createSavedSearchRequestToJSON(
  createSavedSearchRequest: CreateSavedSearchRequest,
): string {
  return JSON.stringify(
    CreateSavedSearchRequest$outboundSchema.parse(createSavedSearchRequest),
  );
}

export function createSavedSearchRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateSavedSearchRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateSavedSearchRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateSavedSearchRequest' from JSON`,
  );
}
