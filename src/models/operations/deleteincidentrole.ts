/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteIncidentRoleRequest = {
  incidentRoleId: string;
};

/** @internal */
export const DeleteIncidentRoleRequest$inboundSchema: z.ZodType<
  DeleteIncidentRoleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  incident_role_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "incident_role_id": "incidentRoleId",
  });
});

/** @internal */
export type DeleteIncidentRoleRequest$Outbound = {
  incident_role_id: string;
};

/** @internal */
export const DeleteIncidentRoleRequest$outboundSchema: z.ZodType<
  DeleteIncidentRoleRequest$Outbound,
  z.ZodTypeDef,
  DeleteIncidentRoleRequest
> = z.object({
  incidentRoleId: z.string(),
}).transform((v) => {
  return remap$(v, {
    incidentRoleId: "incident_role_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteIncidentRoleRequest$ {
  /** @deprecated use `DeleteIncidentRoleRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteIncidentRoleRequest$inboundSchema;
  /** @deprecated use `DeleteIncidentRoleRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteIncidentRoleRequest$outboundSchema;
  /** @deprecated use `DeleteIncidentRoleRequest$Outbound` instead. */
  export type Outbound = DeleteIncidentRoleRequest$Outbound;
}

export function deleteIncidentRoleRequestToJSON(
  deleteIncidentRoleRequest: DeleteIncidentRoleRequest,
): string {
  return JSON.stringify(
    DeleteIncidentRoleRequest$outboundSchema.parse(deleteIncidentRoleRequest),
  );
}

export function deleteIncidentRoleRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteIncidentRoleRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteIncidentRoleRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteIncidentRoleRequest' from JSON`,
  );
}
