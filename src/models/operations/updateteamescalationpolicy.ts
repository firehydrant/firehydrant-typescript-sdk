/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateTeamEscalationPolicyRequest = {
  teamId: string;
  id: string;
  updateTeamEscalationPolicy: components.UpdateTeamEscalationPolicy;
};

/** @internal */
export const UpdateTeamEscalationPolicyRequest$inboundSchema: z.ZodType<
  UpdateTeamEscalationPolicyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  team_id: z.string(),
  id: z.string(),
  update_team_escalation_policy: z.lazy(() =>
    components.UpdateTeamEscalationPolicy$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "team_id": "teamId",
    "update_team_escalation_policy": "updateTeamEscalationPolicy",
  });
});

/** @internal */
export type UpdateTeamEscalationPolicyRequest$Outbound = {
  team_id: string;
  id: string;
  update_team_escalation_policy: components.UpdateTeamEscalationPolicy$Outbound;
};

/** @internal */
export const UpdateTeamEscalationPolicyRequest$outboundSchema: z.ZodType<
  UpdateTeamEscalationPolicyRequest$Outbound,
  z.ZodTypeDef,
  UpdateTeamEscalationPolicyRequest
> = z.object({
  teamId: z.string(),
  id: z.string(),
  updateTeamEscalationPolicy: z.lazy(() =>
    components.UpdateTeamEscalationPolicy$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    teamId: "team_id",
    updateTeamEscalationPolicy: "update_team_escalation_policy",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTeamEscalationPolicyRequest$ {
  /** @deprecated use `UpdateTeamEscalationPolicyRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateTeamEscalationPolicyRequest$inboundSchema;
  /** @deprecated use `UpdateTeamEscalationPolicyRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateTeamEscalationPolicyRequest$outboundSchema;
  /** @deprecated use `UpdateTeamEscalationPolicyRequest$Outbound` instead. */
  export type Outbound = UpdateTeamEscalationPolicyRequest$Outbound;
}

export function updateTeamEscalationPolicyRequestToJSON(
  updateTeamEscalationPolicyRequest: UpdateTeamEscalationPolicyRequest,
): string {
  return JSON.stringify(
    UpdateTeamEscalationPolicyRequest$outboundSchema.parse(
      updateTeamEscalationPolicyRequest,
    ),
  );
}

export function updateTeamEscalationPolicyRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTeamEscalationPolicyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTeamEscalationPolicyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTeamEscalationPolicyRequest' from JSON`,
  );
}
