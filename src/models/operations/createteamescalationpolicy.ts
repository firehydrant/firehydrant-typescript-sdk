/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateTeamEscalationPolicyRequest = {
  teamId: string;
  createTeamEscalationPolicy: components.CreateTeamEscalationPolicy;
};

/** @internal */
export const CreateTeamEscalationPolicyRequest$inboundSchema: z.ZodType<
  CreateTeamEscalationPolicyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  team_id: z.string(),
  create_team_escalation_policy: z.lazy(() =>
    components.CreateTeamEscalationPolicy$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "team_id": "teamId",
    "create_team_escalation_policy": "createTeamEscalationPolicy",
  });
});

/** @internal */
export type CreateTeamEscalationPolicyRequest$Outbound = {
  team_id: string;
  create_team_escalation_policy: components.CreateTeamEscalationPolicy$Outbound;
};

/** @internal */
export const CreateTeamEscalationPolicyRequest$outboundSchema: z.ZodType<
  CreateTeamEscalationPolicyRequest$Outbound,
  z.ZodTypeDef,
  CreateTeamEscalationPolicyRequest
> = z.object({
  teamId: z.string(),
  createTeamEscalationPolicy: z.lazy(() =>
    components.CreateTeamEscalationPolicy$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    teamId: "team_id",
    createTeamEscalationPolicy: "create_team_escalation_policy",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTeamEscalationPolicyRequest$ {
  /** @deprecated use `CreateTeamEscalationPolicyRequest$inboundSchema` instead. */
  export const inboundSchema = CreateTeamEscalationPolicyRequest$inboundSchema;
  /** @deprecated use `CreateTeamEscalationPolicyRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateTeamEscalationPolicyRequest$outboundSchema;
  /** @deprecated use `CreateTeamEscalationPolicyRequest$Outbound` instead. */
  export type Outbound = CreateTeamEscalationPolicyRequest$Outbound;
}

export function createTeamEscalationPolicyRequestToJSON(
  createTeamEscalationPolicyRequest: CreateTeamEscalationPolicyRequest,
): string {
  return JSON.stringify(
    CreateTeamEscalationPolicyRequest$outboundSchema.parse(
      createTeamEscalationPolicyRequest,
    ),
  );
}

export function createTeamEscalationPolicyRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateTeamEscalationPolicyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTeamEscalationPolicyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTeamEscalationPolicyRequest' from JSON`,
  );
}
