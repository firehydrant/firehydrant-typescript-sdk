/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListIncidentTagsRequest = {
  prefix?: string | null | undefined;
};

/** @internal */
export const ListIncidentTagsRequest$inboundSchema: z.ZodType<
  ListIncidentTagsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  prefix: z.nullable(z.string()).optional(),
});

/** @internal */
export type ListIncidentTagsRequest$Outbound = {
  prefix?: string | null | undefined;
};

/** @internal */
export const ListIncidentTagsRequest$outboundSchema: z.ZodType<
  ListIncidentTagsRequest$Outbound,
  z.ZodTypeDef,
  ListIncidentTagsRequest
> = z.object({
  prefix: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListIncidentTagsRequest$ {
  /** @deprecated use `ListIncidentTagsRequest$inboundSchema` instead. */
  export const inboundSchema = ListIncidentTagsRequest$inboundSchema;
  /** @deprecated use `ListIncidentTagsRequest$outboundSchema` instead. */
  export const outboundSchema = ListIncidentTagsRequest$outboundSchema;
  /** @deprecated use `ListIncidentTagsRequest$Outbound` instead. */
  export type Outbound = ListIncidentTagsRequest$Outbound;
}

export function listIncidentTagsRequestToJSON(
  listIncidentTagsRequest: ListIncidentTagsRequest,
): string {
  return JSON.stringify(
    ListIncidentTagsRequest$outboundSchema.parse(listIncidentTagsRequest),
  );
}

export function listIncidentTagsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListIncidentTagsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListIncidentTagsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListIncidentTagsRequest' from JSON`,
  );
}
