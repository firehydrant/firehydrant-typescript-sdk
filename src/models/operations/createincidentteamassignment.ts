/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateIncidentTeamAssignmentRequest = {
  incidentId: string;
  createIncidentTeamAssignment: components.CreateIncidentTeamAssignment;
};

/** @internal */
export const CreateIncidentTeamAssignmentRequest$inboundSchema: z.ZodType<
  CreateIncidentTeamAssignmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  incident_id: z.string(),
  create_incident_team_assignment: z.lazy(() =>
    components.CreateIncidentTeamAssignment$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "incident_id": "incidentId",
    "create_incident_team_assignment": "createIncidentTeamAssignment",
  });
});

/** @internal */
export type CreateIncidentTeamAssignmentRequest$Outbound = {
  incident_id: string;
  create_incident_team_assignment:
    components.CreateIncidentTeamAssignment$Outbound;
};

/** @internal */
export const CreateIncidentTeamAssignmentRequest$outboundSchema: z.ZodType<
  CreateIncidentTeamAssignmentRequest$Outbound,
  z.ZodTypeDef,
  CreateIncidentTeamAssignmentRequest
> = z.object({
  incidentId: z.string(),
  createIncidentTeamAssignment: z.lazy(() =>
    components.CreateIncidentTeamAssignment$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    incidentId: "incident_id",
    createIncidentTeamAssignment: "create_incident_team_assignment",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateIncidentTeamAssignmentRequest$ {
  /** @deprecated use `CreateIncidentTeamAssignmentRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateIncidentTeamAssignmentRequest$inboundSchema;
  /** @deprecated use `CreateIncidentTeamAssignmentRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateIncidentTeamAssignmentRequest$outboundSchema;
  /** @deprecated use `CreateIncidentTeamAssignmentRequest$Outbound` instead. */
  export type Outbound = CreateIncidentTeamAssignmentRequest$Outbound;
}

export function createIncidentTeamAssignmentRequestToJSON(
  createIncidentTeamAssignmentRequest: CreateIncidentTeamAssignmentRequest,
): string {
  return JSON.stringify(
    CreateIncidentTeamAssignmentRequest$outboundSchema.parse(
      createIncidentTeamAssignmentRequest,
    ),
  );
}

export function createIncidentTeamAssignmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateIncidentTeamAssignmentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateIncidentTeamAssignmentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateIncidentTeamAssignmentRequest' from JSON`,
  );
}
