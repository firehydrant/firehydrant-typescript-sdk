/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteTaskListRequest = {
  taskListId: string;
};

/** @internal */
export const DeleteTaskListRequest$inboundSchema: z.ZodType<
  DeleteTaskListRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  task_list_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "task_list_id": "taskListId",
  });
});

/** @internal */
export type DeleteTaskListRequest$Outbound = {
  task_list_id: string;
};

/** @internal */
export const DeleteTaskListRequest$outboundSchema: z.ZodType<
  DeleteTaskListRequest$Outbound,
  z.ZodTypeDef,
  DeleteTaskListRequest
> = z.object({
  taskListId: z.string(),
}).transform((v) => {
  return remap$(v, {
    taskListId: "task_list_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteTaskListRequest$ {
  /** @deprecated use `DeleteTaskListRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteTaskListRequest$inboundSchema;
  /** @deprecated use `DeleteTaskListRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteTaskListRequest$outboundSchema;
  /** @deprecated use `DeleteTaskListRequest$Outbound` instead. */
  export type Outbound = DeleteTaskListRequest$Outbound;
}

export function deleteTaskListRequestToJSON(
  deleteTaskListRequest: DeleteTaskListRequest,
): string {
  return JSON.stringify(
    DeleteTaskListRequest$outboundSchema.parse(deleteTaskListRequest),
  );
}

export function deleteTaskListRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteTaskListRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteTaskListRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteTaskListRequest' from JSON`,
  );
}
