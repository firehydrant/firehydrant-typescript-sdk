/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateIncidentLinkRequest = {
  linkId: string;
  incidentId: string;
  putV1IncidentsIncidentIdLinksLinkId:
    components.PutV1IncidentsIncidentIdLinksLinkId;
};

/** @internal */
export const UpdateIncidentLinkRequest$inboundSchema: z.ZodType<
  UpdateIncidentLinkRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  link_id: z.string(),
  incident_id: z.string(),
  putV1IncidentsIncidentIdLinksLinkId:
    components.PutV1IncidentsIncidentIdLinksLinkId$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "link_id": "linkId",
    "incident_id": "incidentId",
  });
});

/** @internal */
export type UpdateIncidentLinkRequest$Outbound = {
  link_id: string;
  incident_id: string;
  putV1IncidentsIncidentIdLinksLinkId:
    components.PutV1IncidentsIncidentIdLinksLinkId$Outbound;
};

/** @internal */
export const UpdateIncidentLinkRequest$outboundSchema: z.ZodType<
  UpdateIncidentLinkRequest$Outbound,
  z.ZodTypeDef,
  UpdateIncidentLinkRequest
> = z.object({
  linkId: z.string(),
  incidentId: z.string(),
  putV1IncidentsIncidentIdLinksLinkId:
    components.PutV1IncidentsIncidentIdLinksLinkId$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    linkId: "link_id",
    incidentId: "incident_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentLinkRequest$ {
  /** @deprecated use `UpdateIncidentLinkRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentLinkRequest$inboundSchema;
  /** @deprecated use `UpdateIncidentLinkRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentLinkRequest$outboundSchema;
  /** @deprecated use `UpdateIncidentLinkRequest$Outbound` instead. */
  export type Outbound = UpdateIncidentLinkRequest$Outbound;
}

export function updateIncidentLinkRequestToJSON(
  updateIncidentLinkRequest: UpdateIncidentLinkRequest,
): string {
  return JSON.stringify(
    UpdateIncidentLinkRequest$outboundSchema.parse(updateIncidentLinkRequest),
  );
}

export function updateIncidentLinkRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentLinkRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentLinkRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentLinkRequest' from JSON`,
  );
}
