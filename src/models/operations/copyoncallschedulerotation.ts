/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CopyOnCallScheduleRotationRequest = {
  rotationId: string;
  teamId: string;
  scheduleId: string;
  copyOnCallScheduleRotation: components.CopyOnCallScheduleRotation;
};

/** @internal */
export const CopyOnCallScheduleRotationRequest$inboundSchema: z.ZodType<
  CopyOnCallScheduleRotationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  rotation_id: z.string(),
  team_id: z.string(),
  schedule_id: z.string(),
  copy_on_call_schedule_rotation: z.lazy(() =>
    components.CopyOnCallScheduleRotation$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "rotation_id": "rotationId",
    "team_id": "teamId",
    "schedule_id": "scheduleId",
    "copy_on_call_schedule_rotation": "copyOnCallScheduleRotation",
  });
});

/** @internal */
export type CopyOnCallScheduleRotationRequest$Outbound = {
  rotation_id: string;
  team_id: string;
  schedule_id: string;
  copy_on_call_schedule_rotation:
    components.CopyOnCallScheduleRotation$Outbound;
};

/** @internal */
export const CopyOnCallScheduleRotationRequest$outboundSchema: z.ZodType<
  CopyOnCallScheduleRotationRequest$Outbound,
  z.ZodTypeDef,
  CopyOnCallScheduleRotationRequest
> = z.object({
  rotationId: z.string(),
  teamId: z.string(),
  scheduleId: z.string(),
  copyOnCallScheduleRotation: z.lazy(() =>
    components.CopyOnCallScheduleRotation$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    rotationId: "rotation_id",
    teamId: "team_id",
    scheduleId: "schedule_id",
    copyOnCallScheduleRotation: "copy_on_call_schedule_rotation",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CopyOnCallScheduleRotationRequest$ {
  /** @deprecated use `CopyOnCallScheduleRotationRequest$inboundSchema` instead. */
  export const inboundSchema = CopyOnCallScheduleRotationRequest$inboundSchema;
  /** @deprecated use `CopyOnCallScheduleRotationRequest$outboundSchema` instead. */
  export const outboundSchema =
    CopyOnCallScheduleRotationRequest$outboundSchema;
  /** @deprecated use `CopyOnCallScheduleRotationRequest$Outbound` instead. */
  export type Outbound = CopyOnCallScheduleRotationRequest$Outbound;
}

export function copyOnCallScheduleRotationRequestToJSON(
  copyOnCallScheduleRotationRequest: CopyOnCallScheduleRotationRequest,
): string {
  return JSON.stringify(
    CopyOnCallScheduleRotationRequest$outboundSchema.parse(
      copyOnCallScheduleRotationRequest,
    ),
  );
}

export function copyOnCallScheduleRotationRequestFromJSON(
  jsonString: string,
): SafeParseResult<CopyOnCallScheduleRotationRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CopyOnCallScheduleRotationRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CopyOnCallScheduleRotationRequest' from JSON`,
  );
}
