/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateCallRouteRequest = {
  id: string;
  updateCallRoute: components.UpdateCallRoute;
};

/** @internal */
export const UpdateCallRouteRequest$inboundSchema: z.ZodType<
  UpdateCallRouteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  update_call_route: z.lazy(() => components.UpdateCallRoute$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "update_call_route": "updateCallRoute",
  });
});

/** @internal */
export type UpdateCallRouteRequest$Outbound = {
  id: string;
  update_call_route: components.UpdateCallRoute$Outbound;
};

/** @internal */
export const UpdateCallRouteRequest$outboundSchema: z.ZodType<
  UpdateCallRouteRequest$Outbound,
  z.ZodTypeDef,
  UpdateCallRouteRequest
> = z.object({
  id: z.string(),
  updateCallRoute: z.lazy(() => components.UpdateCallRoute$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    updateCallRoute: "update_call_route",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCallRouteRequest$ {
  /** @deprecated use `UpdateCallRouteRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateCallRouteRequest$inboundSchema;
  /** @deprecated use `UpdateCallRouteRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateCallRouteRequest$outboundSchema;
  /** @deprecated use `UpdateCallRouteRequest$Outbound` instead. */
  export type Outbound = UpdateCallRouteRequest$Outbound;
}

export function updateCallRouteRequestToJSON(
  updateCallRouteRequest: UpdateCallRouteRequest,
): string {
  return JSON.stringify(
    UpdateCallRouteRequest$outboundSchema.parse(updateCallRouteRequest),
  );
}

export function updateCallRouteRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateCallRouteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateCallRouteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateCallRouteRequest' from JSON`,
  );
}
