/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteSignalsWebhookTargetRequest = {
  id: string;
};

/** @internal */
export const DeleteSignalsWebhookTargetRequest$inboundSchema: z.ZodType<
  DeleteSignalsWebhookTargetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteSignalsWebhookTargetRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteSignalsWebhookTargetRequest$outboundSchema: z.ZodType<
  DeleteSignalsWebhookTargetRequest$Outbound,
  z.ZodTypeDef,
  DeleteSignalsWebhookTargetRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSignalsWebhookTargetRequest$ {
  /** @deprecated use `DeleteSignalsWebhookTargetRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteSignalsWebhookTargetRequest$inboundSchema;
  /** @deprecated use `DeleteSignalsWebhookTargetRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteSignalsWebhookTargetRequest$outboundSchema;
  /** @deprecated use `DeleteSignalsWebhookTargetRequest$Outbound` instead. */
  export type Outbound = DeleteSignalsWebhookTargetRequest$Outbound;
}

export function deleteSignalsWebhookTargetRequestToJSON(
  deleteSignalsWebhookTargetRequest: DeleteSignalsWebhookTargetRequest,
): string {
  return JSON.stringify(
    DeleteSignalsWebhookTargetRequest$outboundSchema.parse(
      deleteSignalsWebhookTargetRequest,
    ),
  );
}

export function deleteSignalsWebhookTargetRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteSignalsWebhookTargetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteSignalsWebhookTargetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteSignalsWebhookTargetRequest' from JSON`,
  );
}
