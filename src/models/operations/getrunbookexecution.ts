/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetRunbookExecutionRequest = {
  executionId: string;
};

/** @internal */
export const GetRunbookExecutionRequest$inboundSchema: z.ZodType<
  GetRunbookExecutionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  execution_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "execution_id": "executionId",
  });
});

/** @internal */
export type GetRunbookExecutionRequest$Outbound = {
  execution_id: string;
};

/** @internal */
export const GetRunbookExecutionRequest$outboundSchema: z.ZodType<
  GetRunbookExecutionRequest$Outbound,
  z.ZodTypeDef,
  GetRunbookExecutionRequest
> = z.object({
  executionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    executionId: "execution_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRunbookExecutionRequest$ {
  /** @deprecated use `GetRunbookExecutionRequest$inboundSchema` instead. */
  export const inboundSchema = GetRunbookExecutionRequest$inboundSchema;
  /** @deprecated use `GetRunbookExecutionRequest$outboundSchema` instead. */
  export const outboundSchema = GetRunbookExecutionRequest$outboundSchema;
  /** @deprecated use `GetRunbookExecutionRequest$Outbound` instead. */
  export type Outbound = GetRunbookExecutionRequest$Outbound;
}

export function getRunbookExecutionRequestToJSON(
  getRunbookExecutionRequest: GetRunbookExecutionRequest,
): string {
  return JSON.stringify(
    GetRunbookExecutionRequest$outboundSchema.parse(getRunbookExecutionRequest),
  );
}

export function getRunbookExecutionRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetRunbookExecutionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetRunbookExecutionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetRunbookExecutionRequest' from JSON`,
  );
}
