/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteLifecycleMilestoneRequest = {
  milestoneId: string;
};

/** @internal */
export const DeleteLifecycleMilestoneRequest$inboundSchema: z.ZodType<
  DeleteLifecycleMilestoneRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  milestone_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "milestone_id": "milestoneId",
  });
});

/** @internal */
export type DeleteLifecycleMilestoneRequest$Outbound = {
  milestone_id: string;
};

/** @internal */
export const DeleteLifecycleMilestoneRequest$outboundSchema: z.ZodType<
  DeleteLifecycleMilestoneRequest$Outbound,
  z.ZodTypeDef,
  DeleteLifecycleMilestoneRequest
> = z.object({
  milestoneId: z.string(),
}).transform((v) => {
  return remap$(v, {
    milestoneId: "milestone_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteLifecycleMilestoneRequest$ {
  /** @deprecated use `DeleteLifecycleMilestoneRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteLifecycleMilestoneRequest$inboundSchema;
  /** @deprecated use `DeleteLifecycleMilestoneRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteLifecycleMilestoneRequest$outboundSchema;
  /** @deprecated use `DeleteLifecycleMilestoneRequest$Outbound` instead. */
  export type Outbound = DeleteLifecycleMilestoneRequest$Outbound;
}

export function deleteLifecycleMilestoneRequestToJSON(
  deleteLifecycleMilestoneRequest: DeleteLifecycleMilestoneRequest,
): string {
  return JSON.stringify(
    DeleteLifecycleMilestoneRequest$outboundSchema.parse(
      deleteLifecycleMilestoneRequest,
    ),
  );
}

export function deleteLifecycleMilestoneRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteLifecycleMilestoneRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteLifecycleMilestoneRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteLifecycleMilestoneRequest' from JSON`,
  );
}
