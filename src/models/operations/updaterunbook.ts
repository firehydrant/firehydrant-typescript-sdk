/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateRunbookRequest = {
  runbookId: string;
  putV1RunbooksRunbookId: components.PutV1RunbooksRunbookId;
};

/** @internal */
export const UpdateRunbookRequest$inboundSchema: z.ZodType<
  UpdateRunbookRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  runbook_id: z.string(),
  putV1RunbooksRunbookId: components.PutV1RunbooksRunbookId$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "runbook_id": "runbookId",
  });
});

/** @internal */
export type UpdateRunbookRequest$Outbound = {
  runbook_id: string;
  putV1RunbooksRunbookId: components.PutV1RunbooksRunbookId$Outbound;
};

/** @internal */
export const UpdateRunbookRequest$outboundSchema: z.ZodType<
  UpdateRunbookRequest$Outbound,
  z.ZodTypeDef,
  UpdateRunbookRequest
> = z.object({
  runbookId: z.string(),
  putV1RunbooksRunbookId: components.PutV1RunbooksRunbookId$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    runbookId: "runbook_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateRunbookRequest$ {
  /** @deprecated use `UpdateRunbookRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateRunbookRequest$inboundSchema;
  /** @deprecated use `UpdateRunbookRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateRunbookRequest$outboundSchema;
  /** @deprecated use `UpdateRunbookRequest$Outbound` instead. */
  export type Outbound = UpdateRunbookRequest$Outbound;
}

export function updateRunbookRequestToJSON(
  updateRunbookRequest: UpdateRunbookRequest,
): string {
  return JSON.stringify(
    UpdateRunbookRequest$outboundSchema.parse(updateRunbookRequest),
  );
}

export function updateRunbookRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateRunbookRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateRunbookRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateRunbookRequest' from JSON`,
  );
}
