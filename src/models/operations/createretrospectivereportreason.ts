/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateRetrospectiveReportReasonRequest = {
  reportId: string;
  postV1PostMortemsReportsReportIdReasons:
    components.PostV1PostMortemsReportsReportIdReasons;
};

/** @internal */
export const CreateRetrospectiveReportReasonRequest$inboundSchema: z.ZodType<
  CreateRetrospectiveReportReasonRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  report_id: z.string(),
  postV1PostMortemsReportsReportIdReasons:
    components.PostV1PostMortemsReportsReportIdReasons$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "report_id": "reportId",
  });
});

/** @internal */
export type CreateRetrospectiveReportReasonRequest$Outbound = {
  report_id: string;
  postV1PostMortemsReportsReportIdReasons:
    components.PostV1PostMortemsReportsReportIdReasons$Outbound;
};

/** @internal */
export const CreateRetrospectiveReportReasonRequest$outboundSchema: z.ZodType<
  CreateRetrospectiveReportReasonRequest$Outbound,
  z.ZodTypeDef,
  CreateRetrospectiveReportReasonRequest
> = z.object({
  reportId: z.string(),
  postV1PostMortemsReportsReportIdReasons:
    components.PostV1PostMortemsReportsReportIdReasons$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    reportId: "report_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateRetrospectiveReportReasonRequest$ {
  /** @deprecated use `CreateRetrospectiveReportReasonRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateRetrospectiveReportReasonRequest$inboundSchema;
  /** @deprecated use `CreateRetrospectiveReportReasonRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateRetrospectiveReportReasonRequest$outboundSchema;
  /** @deprecated use `CreateRetrospectiveReportReasonRequest$Outbound` instead. */
  export type Outbound = CreateRetrospectiveReportReasonRequest$Outbound;
}

export function createRetrospectiveReportReasonRequestToJSON(
  createRetrospectiveReportReasonRequest:
    CreateRetrospectiveReportReasonRequest,
): string {
  return JSON.stringify(
    CreateRetrospectiveReportReasonRequest$outboundSchema.parse(
      createRetrospectiveReportReasonRequest,
    ),
  );
}

export function createRetrospectiveReportReasonRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateRetrospectiveReportReasonRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateRetrospectiveReportReasonRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateRetrospectiveReportReasonRequest' from JSON`,
  );
}
