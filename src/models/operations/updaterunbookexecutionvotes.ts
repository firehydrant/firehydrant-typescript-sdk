/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateRunbookExecutionVotesRequest = {
  executionId: string;
  patchV1RunbooksExecutionsExecutionIdVotes:
    components.PatchV1RunbooksExecutionsExecutionIdVotes;
};

/** @internal */
export const UpdateRunbookExecutionVotesRequest$inboundSchema: z.ZodType<
  UpdateRunbookExecutionVotesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  execution_id: z.string(),
  patchV1RunbooksExecutionsExecutionIdVotes:
    components.PatchV1RunbooksExecutionsExecutionIdVotes$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "execution_id": "executionId",
  });
});

/** @internal */
export type UpdateRunbookExecutionVotesRequest$Outbound = {
  execution_id: string;
  patchV1RunbooksExecutionsExecutionIdVotes:
    components.PatchV1RunbooksExecutionsExecutionIdVotes$Outbound;
};

/** @internal */
export const UpdateRunbookExecutionVotesRequest$outboundSchema: z.ZodType<
  UpdateRunbookExecutionVotesRequest$Outbound,
  z.ZodTypeDef,
  UpdateRunbookExecutionVotesRequest
> = z.object({
  executionId: z.string(),
  patchV1RunbooksExecutionsExecutionIdVotes:
    components.PatchV1RunbooksExecutionsExecutionIdVotes$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    executionId: "execution_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateRunbookExecutionVotesRequest$ {
  /** @deprecated use `UpdateRunbookExecutionVotesRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateRunbookExecutionVotesRequest$inboundSchema;
  /** @deprecated use `UpdateRunbookExecutionVotesRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateRunbookExecutionVotesRequest$outboundSchema;
  /** @deprecated use `UpdateRunbookExecutionVotesRequest$Outbound` instead. */
  export type Outbound = UpdateRunbookExecutionVotesRequest$Outbound;
}

export function updateRunbookExecutionVotesRequestToJSON(
  updateRunbookExecutionVotesRequest: UpdateRunbookExecutionVotesRequest,
): string {
  return JSON.stringify(
    UpdateRunbookExecutionVotesRequest$outboundSchema.parse(
      updateRunbookExecutionVotesRequest,
    ),
  );
}

export function updateRunbookExecutionVotesRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateRunbookExecutionVotesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateRunbookExecutionVotesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateRunbookExecutionVotesRequest' from JSON`,
  );
}
