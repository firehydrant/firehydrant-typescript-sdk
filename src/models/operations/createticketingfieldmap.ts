/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateTicketingFieldMapRequest = {
  ticketingProjectId: string;
};

/** @internal */
export const CreateTicketingFieldMapRequest$inboundSchema: z.ZodType<
  CreateTicketingFieldMapRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ticketing_project_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "ticketing_project_id": "ticketingProjectId",
  });
});

/** @internal */
export type CreateTicketingFieldMapRequest$Outbound = {
  ticketing_project_id: string;
};

/** @internal */
export const CreateTicketingFieldMapRequest$outboundSchema: z.ZodType<
  CreateTicketingFieldMapRequest$Outbound,
  z.ZodTypeDef,
  CreateTicketingFieldMapRequest
> = z.object({
  ticketingProjectId: z.string(),
}).transform((v) => {
  return remap$(v, {
    ticketingProjectId: "ticketing_project_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTicketingFieldMapRequest$ {
  /** @deprecated use `CreateTicketingFieldMapRequest$inboundSchema` instead. */
  export const inboundSchema = CreateTicketingFieldMapRequest$inboundSchema;
  /** @deprecated use `CreateTicketingFieldMapRequest$outboundSchema` instead. */
  export const outboundSchema = CreateTicketingFieldMapRequest$outboundSchema;
  /** @deprecated use `CreateTicketingFieldMapRequest$Outbound` instead. */
  export type Outbound = CreateTicketingFieldMapRequest$Outbound;
}

export function createTicketingFieldMapRequestToJSON(
  createTicketingFieldMapRequest: CreateTicketingFieldMapRequest,
): string {
  return JSON.stringify(
    CreateTicketingFieldMapRequest$outboundSchema.parse(
      createTicketingFieldMapRequest,
    ),
  );
}

export function createTicketingFieldMapRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateTicketingFieldMapRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTicketingFieldMapRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTicketingFieldMapRequest' from JSON`,
  );
}
