/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateOnCallShiftRequest = {
  teamId: string;
  scheduleId: string;
  createOnCallShift: components.CreateOnCallShift;
};

/** @internal */
export const CreateOnCallShiftRequest$inboundSchema: z.ZodType<
  CreateOnCallShiftRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  team_id: z.string(),
  schedule_id: z.string(),
  create_on_call_shift: z.lazy(() =>
    components.CreateOnCallShift$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "team_id": "teamId",
    "schedule_id": "scheduleId",
    "create_on_call_shift": "createOnCallShift",
  });
});

/** @internal */
export type CreateOnCallShiftRequest$Outbound = {
  team_id: string;
  schedule_id: string;
  create_on_call_shift: components.CreateOnCallShift$Outbound;
};

/** @internal */
export const CreateOnCallShiftRequest$outboundSchema: z.ZodType<
  CreateOnCallShiftRequest$Outbound,
  z.ZodTypeDef,
  CreateOnCallShiftRequest
> = z.object({
  teamId: z.string(),
  scheduleId: z.string(),
  createOnCallShift: z.lazy(() => components.CreateOnCallShift$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    teamId: "team_id",
    scheduleId: "schedule_id",
    createOnCallShift: "create_on_call_shift",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOnCallShiftRequest$ {
  /** @deprecated use `CreateOnCallShiftRequest$inboundSchema` instead. */
  export const inboundSchema = CreateOnCallShiftRequest$inboundSchema;
  /** @deprecated use `CreateOnCallShiftRequest$outboundSchema` instead. */
  export const outboundSchema = CreateOnCallShiftRequest$outboundSchema;
  /** @deprecated use `CreateOnCallShiftRequest$Outbound` instead. */
  export type Outbound = CreateOnCallShiftRequest$Outbound;
}

export function createOnCallShiftRequestToJSON(
  createOnCallShiftRequest: CreateOnCallShiftRequest,
): string {
  return JSON.stringify(
    CreateOnCallShiftRequest$outboundSchema.parse(createOnCallShiftRequest),
  );
}

export function createOnCallShiftRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateOnCallShiftRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateOnCallShiftRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOnCallShiftRequest' from JSON`,
  );
}
