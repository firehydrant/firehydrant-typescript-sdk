/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateSignalEmailTargetRequest = {
  id: string;
  patchV1SignalsEmailTargetsId: components.PatchV1SignalsEmailTargetsId;
};

/** @internal */
export const UpdateSignalEmailTargetRequest$inboundSchema: z.ZodType<
  UpdateSignalEmailTargetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  patchV1SignalsEmailTargetsId:
    components.PatchV1SignalsEmailTargetsId$inboundSchema,
});

/** @internal */
export type UpdateSignalEmailTargetRequest$Outbound = {
  id: string;
  patchV1SignalsEmailTargetsId:
    components.PatchV1SignalsEmailTargetsId$Outbound;
};

/** @internal */
export const UpdateSignalEmailTargetRequest$outboundSchema: z.ZodType<
  UpdateSignalEmailTargetRequest$Outbound,
  z.ZodTypeDef,
  UpdateSignalEmailTargetRequest
> = z.object({
  id: z.string(),
  patchV1SignalsEmailTargetsId:
    components.PatchV1SignalsEmailTargetsId$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSignalEmailTargetRequest$ {
  /** @deprecated use `UpdateSignalEmailTargetRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateSignalEmailTargetRequest$inboundSchema;
  /** @deprecated use `UpdateSignalEmailTargetRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateSignalEmailTargetRequest$outboundSchema;
  /** @deprecated use `UpdateSignalEmailTargetRequest$Outbound` instead. */
  export type Outbound = UpdateSignalEmailTargetRequest$Outbound;
}

export function updateSignalEmailTargetRequestToJSON(
  updateSignalEmailTargetRequest: UpdateSignalEmailTargetRequest,
): string {
  return JSON.stringify(
    UpdateSignalEmailTargetRequest$outboundSchema.parse(
      updateSignalEmailTargetRequest,
    ),
  );
}

export function updateSignalEmailTargetRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSignalEmailTargetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSignalEmailTargetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSignalEmailTargetRequest' from JSON`,
  );
}
