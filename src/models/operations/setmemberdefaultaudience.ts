/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SetMemberDefaultAudienceRequestBody = {
  /**
   * ID of the audience to set as default
   */
  audienceId: string;
};

export type SetMemberDefaultAudienceRequest = {
  memberId: number;
  requestBody: SetMemberDefaultAudienceRequestBody;
};

/** @internal */
export const SetMemberDefaultAudienceRequestBody$inboundSchema: z.ZodType<
  SetMemberDefaultAudienceRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  audience_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "audience_id": "audienceId",
  });
});

/** @internal */
export type SetMemberDefaultAudienceRequestBody$Outbound = {
  audience_id: string;
};

/** @internal */
export const SetMemberDefaultAudienceRequestBody$outboundSchema: z.ZodType<
  SetMemberDefaultAudienceRequestBody$Outbound,
  z.ZodTypeDef,
  SetMemberDefaultAudienceRequestBody
> = z.object({
  audienceId: z.string(),
}).transform((v) => {
  return remap$(v, {
    audienceId: "audience_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetMemberDefaultAudienceRequestBody$ {
  /** @deprecated use `SetMemberDefaultAudienceRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    SetMemberDefaultAudienceRequestBody$inboundSchema;
  /** @deprecated use `SetMemberDefaultAudienceRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    SetMemberDefaultAudienceRequestBody$outboundSchema;
  /** @deprecated use `SetMemberDefaultAudienceRequestBody$Outbound` instead. */
  export type Outbound = SetMemberDefaultAudienceRequestBody$Outbound;
}

export function setMemberDefaultAudienceRequestBodyToJSON(
  setMemberDefaultAudienceRequestBody: SetMemberDefaultAudienceRequestBody,
): string {
  return JSON.stringify(
    SetMemberDefaultAudienceRequestBody$outboundSchema.parse(
      setMemberDefaultAudienceRequestBody,
    ),
  );
}

export function setMemberDefaultAudienceRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<SetMemberDefaultAudienceRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      SetMemberDefaultAudienceRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SetMemberDefaultAudienceRequestBody' from JSON`,
  );
}

/** @internal */
export const SetMemberDefaultAudienceRequest$inboundSchema: z.ZodType<
  SetMemberDefaultAudienceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  member_id: z.number().int(),
  RequestBody: z.lazy(() => SetMemberDefaultAudienceRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "member_id": "memberId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type SetMemberDefaultAudienceRequest$Outbound = {
  member_id: number;
  RequestBody: SetMemberDefaultAudienceRequestBody$Outbound;
};

/** @internal */
export const SetMemberDefaultAudienceRequest$outboundSchema: z.ZodType<
  SetMemberDefaultAudienceRequest$Outbound,
  z.ZodTypeDef,
  SetMemberDefaultAudienceRequest
> = z.object({
  memberId: z.number().int(),
  requestBody: z.lazy(() => SetMemberDefaultAudienceRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    memberId: "member_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetMemberDefaultAudienceRequest$ {
  /** @deprecated use `SetMemberDefaultAudienceRequest$inboundSchema` instead. */
  export const inboundSchema = SetMemberDefaultAudienceRequest$inboundSchema;
  /** @deprecated use `SetMemberDefaultAudienceRequest$outboundSchema` instead. */
  export const outboundSchema = SetMemberDefaultAudienceRequest$outboundSchema;
  /** @deprecated use `SetMemberDefaultAudienceRequest$Outbound` instead. */
  export type Outbound = SetMemberDefaultAudienceRequest$Outbound;
}

export function setMemberDefaultAudienceRequestToJSON(
  setMemberDefaultAudienceRequest: SetMemberDefaultAudienceRequest,
): string {
  return JSON.stringify(
    SetMemberDefaultAudienceRequest$outboundSchema.parse(
      setMemberDefaultAudienceRequest,
    ),
  );
}

export function setMemberDefaultAudienceRequestFromJSON(
  jsonString: string,
): SafeParseResult<SetMemberDefaultAudienceRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SetMemberDefaultAudienceRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SetMemberDefaultAudienceRequest' from JSON`,
  );
}
