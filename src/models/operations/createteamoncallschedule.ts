/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateTeamOnCallScheduleRequest = {
  teamId: string;
  createTeamOnCallSchedule: components.CreateTeamOnCallSchedule;
};

/** @internal */
export const CreateTeamOnCallScheduleRequest$inboundSchema: z.ZodType<
  CreateTeamOnCallScheduleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  team_id: z.string(),
  create_team_on_call_schedule: z.lazy(() =>
    components.CreateTeamOnCallSchedule$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "team_id": "teamId",
    "create_team_on_call_schedule": "createTeamOnCallSchedule",
  });
});

/** @internal */
export type CreateTeamOnCallScheduleRequest$Outbound = {
  team_id: string;
  create_team_on_call_schedule: components.CreateTeamOnCallSchedule$Outbound;
};

/** @internal */
export const CreateTeamOnCallScheduleRequest$outboundSchema: z.ZodType<
  CreateTeamOnCallScheduleRequest$Outbound,
  z.ZodTypeDef,
  CreateTeamOnCallScheduleRequest
> = z.object({
  teamId: z.string(),
  createTeamOnCallSchedule: z.lazy(() =>
    components.CreateTeamOnCallSchedule$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    teamId: "team_id",
    createTeamOnCallSchedule: "create_team_on_call_schedule",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTeamOnCallScheduleRequest$ {
  /** @deprecated use `CreateTeamOnCallScheduleRequest$inboundSchema` instead. */
  export const inboundSchema = CreateTeamOnCallScheduleRequest$inboundSchema;
  /** @deprecated use `CreateTeamOnCallScheduleRequest$outboundSchema` instead. */
  export const outboundSchema = CreateTeamOnCallScheduleRequest$outboundSchema;
  /** @deprecated use `CreateTeamOnCallScheduleRequest$Outbound` instead. */
  export type Outbound = CreateTeamOnCallScheduleRequest$Outbound;
}

export function createTeamOnCallScheduleRequestToJSON(
  createTeamOnCallScheduleRequest: CreateTeamOnCallScheduleRequest,
): string {
  return JSON.stringify(
    CreateTeamOnCallScheduleRequest$outboundSchema.parse(
      createTeamOnCallScheduleRequest,
    ),
  );
}

export function createTeamOnCallScheduleRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateTeamOnCallScheduleRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTeamOnCallScheduleRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTeamOnCallScheduleRequest' from JSON`,
  );
}
