/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteIncidentRetrospectiveDynamicInputRequest = {
  retrospectiveId: string;
  fieldId: string;
  /**
   * The ID of the dynamic input field to delete.
   */
  dynamicInputFieldId: string;
  incidentId: string;
};

/** @internal */
export const DeleteIncidentRetrospectiveDynamicInputRequest$inboundSchema:
  z.ZodType<
    DeleteIncidentRetrospectiveDynamicInputRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    retrospective_id: z.string(),
    field_id: z.string(),
    dynamic_input_field_id: z.string(),
    incident_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "retrospective_id": "retrospectiveId",
      "field_id": "fieldId",
      "dynamic_input_field_id": "dynamicInputFieldId",
      "incident_id": "incidentId",
    });
  });

/** @internal */
export type DeleteIncidentRetrospectiveDynamicInputRequest$Outbound = {
  retrospective_id: string;
  field_id: string;
  dynamic_input_field_id: string;
  incident_id: string;
};

/** @internal */
export const DeleteIncidentRetrospectiveDynamicInputRequest$outboundSchema:
  z.ZodType<
    DeleteIncidentRetrospectiveDynamicInputRequest$Outbound,
    z.ZodTypeDef,
    DeleteIncidentRetrospectiveDynamicInputRequest
  > = z.object({
    retrospectiveId: z.string(),
    fieldId: z.string(),
    dynamicInputFieldId: z.string(),
    incidentId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      retrospectiveId: "retrospective_id",
      fieldId: "field_id",
      dynamicInputFieldId: "dynamic_input_field_id",
      incidentId: "incident_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteIncidentRetrospectiveDynamicInputRequest$ {
  /** @deprecated use `DeleteIncidentRetrospectiveDynamicInputRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteIncidentRetrospectiveDynamicInputRequest$inboundSchema;
  /** @deprecated use `DeleteIncidentRetrospectiveDynamicInputRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteIncidentRetrospectiveDynamicInputRequest$outboundSchema;
  /** @deprecated use `DeleteIncidentRetrospectiveDynamicInputRequest$Outbound` instead. */
  export type Outbound =
    DeleteIncidentRetrospectiveDynamicInputRequest$Outbound;
}

export function deleteIncidentRetrospectiveDynamicInputRequestToJSON(
  deleteIncidentRetrospectiveDynamicInputRequest:
    DeleteIncidentRetrospectiveDynamicInputRequest,
): string {
  return JSON.stringify(
    DeleteIncidentRetrospectiveDynamicInputRequest$outboundSchema.parse(
      deleteIncidentRetrospectiveDynamicInputRequest,
    ),
  );
}

export function deleteIncidentRetrospectiveDynamicInputRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteIncidentRetrospectiveDynamicInputRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteIncidentRetrospectiveDynamicInputRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteIncidentRetrospectiveDynamicInputRequest' from JSON`,
  );
}
