/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdatePriorityRequest = {
  prioritySlug: string;
  updatePriority: components.UpdatePriority;
};

/** @internal */
export const UpdatePriorityRequest$inboundSchema: z.ZodType<
  UpdatePriorityRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  priority_slug: z.string(),
  update_priority: z.lazy(() => components.UpdatePriority$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "priority_slug": "prioritySlug",
    "update_priority": "updatePriority",
  });
});

/** @internal */
export type UpdatePriorityRequest$Outbound = {
  priority_slug: string;
  update_priority: components.UpdatePriority$Outbound;
};

/** @internal */
export const UpdatePriorityRequest$outboundSchema: z.ZodType<
  UpdatePriorityRequest$Outbound,
  z.ZodTypeDef,
  UpdatePriorityRequest
> = z.object({
  prioritySlug: z.string(),
  updatePriority: z.lazy(() => components.UpdatePriority$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    prioritySlug: "priority_slug",
    updatePriority: "update_priority",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePriorityRequest$ {
  /** @deprecated use `UpdatePriorityRequest$inboundSchema` instead. */
  export const inboundSchema = UpdatePriorityRequest$inboundSchema;
  /** @deprecated use `UpdatePriorityRequest$outboundSchema` instead. */
  export const outboundSchema = UpdatePriorityRequest$outboundSchema;
  /** @deprecated use `UpdatePriorityRequest$Outbound` instead. */
  export type Outbound = UpdatePriorityRequest$Outbound;
}

export function updatePriorityRequestToJSON(
  updatePriorityRequest: UpdatePriorityRequest,
): string {
  return JSON.stringify(
    UpdatePriorityRequest$outboundSchema.parse(updatePriorityRequest),
  );
}

export function updatePriorityRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePriorityRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePriorityRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePriorityRequest' from JSON`,
  );
}
