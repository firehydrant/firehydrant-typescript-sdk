/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateSignalsAlertGroupingConfigurationRequest = {
  id: string;
  updateSignalsAlertGroupingConfiguration:
    components.UpdateSignalsAlertGroupingConfiguration;
};

/** @internal */
export const UpdateSignalsAlertGroupingConfigurationRequest$inboundSchema:
  z.ZodType<
    UpdateSignalsAlertGroupingConfigurationRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
    update_signals_alert_grouping_configuration: z.lazy(() =>
      components.UpdateSignalsAlertGroupingConfiguration$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "update_signals_alert_grouping_configuration":
        "updateSignalsAlertGroupingConfiguration",
    });
  });

/** @internal */
export type UpdateSignalsAlertGroupingConfigurationRequest$Outbound = {
  id: string;
  update_signals_alert_grouping_configuration:
    components.UpdateSignalsAlertGroupingConfiguration$Outbound;
};

/** @internal */
export const UpdateSignalsAlertGroupingConfigurationRequest$outboundSchema:
  z.ZodType<
    UpdateSignalsAlertGroupingConfigurationRequest$Outbound,
    z.ZodTypeDef,
    UpdateSignalsAlertGroupingConfigurationRequest
  > = z.object({
    id: z.string(),
    updateSignalsAlertGroupingConfiguration: z.lazy(() =>
      components.UpdateSignalsAlertGroupingConfiguration$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      updateSignalsAlertGroupingConfiguration:
        "update_signals_alert_grouping_configuration",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSignalsAlertGroupingConfigurationRequest$ {
  /** @deprecated use `UpdateSignalsAlertGroupingConfigurationRequest$inboundSchema` instead. */
  export const inboundSchema =
    UpdateSignalsAlertGroupingConfigurationRequest$inboundSchema;
  /** @deprecated use `UpdateSignalsAlertGroupingConfigurationRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateSignalsAlertGroupingConfigurationRequest$outboundSchema;
  /** @deprecated use `UpdateSignalsAlertGroupingConfigurationRequest$Outbound` instead. */
  export type Outbound =
    UpdateSignalsAlertGroupingConfigurationRequest$Outbound;
}

export function updateSignalsAlertGroupingConfigurationRequestToJSON(
  updateSignalsAlertGroupingConfigurationRequest:
    UpdateSignalsAlertGroupingConfigurationRequest,
): string {
  return JSON.stringify(
    UpdateSignalsAlertGroupingConfigurationRequest$outboundSchema.parse(
      updateSignalsAlertGroupingConfigurationRequest,
    ),
  );
}

export function updateSignalsAlertGroupingConfigurationRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateSignalsAlertGroupingConfigurationRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateSignalsAlertGroupingConfigurationRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateSignalsAlertGroupingConfigurationRequest' from JSON`,
  );
}
