/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateTicketingProjectConfigurationRequest = {
  ticketingProjectId: string;
};

/** @internal */
export const CreateTicketingProjectConfigurationRequest$inboundSchema:
  z.ZodType<CreateTicketingProjectConfigurationRequest, z.ZodTypeDef, unknown> =
    z.object({
      ticketing_project_id: z.string(),
    }).transform((v) => {
      return remap$(v, {
        "ticketing_project_id": "ticketingProjectId",
      });
    });

/** @internal */
export type CreateTicketingProjectConfigurationRequest$Outbound = {
  ticketing_project_id: string;
};

/** @internal */
export const CreateTicketingProjectConfigurationRequest$outboundSchema:
  z.ZodType<
    CreateTicketingProjectConfigurationRequest$Outbound,
    z.ZodTypeDef,
    CreateTicketingProjectConfigurationRequest
  > = z.object({
    ticketingProjectId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      ticketingProjectId: "ticketing_project_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTicketingProjectConfigurationRequest$ {
  /** @deprecated use `CreateTicketingProjectConfigurationRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateTicketingProjectConfigurationRequest$inboundSchema;
  /** @deprecated use `CreateTicketingProjectConfigurationRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateTicketingProjectConfigurationRequest$outboundSchema;
  /** @deprecated use `CreateTicketingProjectConfigurationRequest$Outbound` instead. */
  export type Outbound = CreateTicketingProjectConfigurationRequest$Outbound;
}

export function createTicketingProjectConfigurationRequestToJSON(
  createTicketingProjectConfigurationRequest:
    CreateTicketingProjectConfigurationRequest,
): string {
  return JSON.stringify(
    CreateTicketingProjectConfigurationRequest$outboundSchema.parse(
      createTicketingProjectConfigurationRequest,
    ),
  );
}

export function createTicketingProjectConfigurationRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateTicketingProjectConfigurationRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateTicketingProjectConfigurationRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateTicketingProjectConfigurationRequest' from JSON`,
  );
}
