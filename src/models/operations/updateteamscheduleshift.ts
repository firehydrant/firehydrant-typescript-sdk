/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateTeamScheduleShiftRequest = {
  id: string;
  teamId: string;
  scheduleId: string;
  patchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId:
    components.PatchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId;
};

/** @internal */
export const UpdateTeamScheduleShiftRequest$inboundSchema: z.ZodType<
  UpdateTeamScheduleShiftRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  team_id: z.string(),
  schedule_id: z.string(),
  patchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId:
    components
      .PatchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "team_id": "teamId",
    "schedule_id": "scheduleId",
  });
});

/** @internal */
export type UpdateTeamScheduleShiftRequest$Outbound = {
  id: string;
  team_id: string;
  schedule_id: string;
  patchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId:
    components.PatchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId$Outbound;
};

/** @internal */
export const UpdateTeamScheduleShiftRequest$outboundSchema: z.ZodType<
  UpdateTeamScheduleShiftRequest$Outbound,
  z.ZodTypeDef,
  UpdateTeamScheduleShiftRequest
> = z.object({
  id: z.string(),
  teamId: z.string(),
  scheduleId: z.string(),
  patchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId:
    components
      .PatchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    teamId: "team_id",
    scheduleId: "schedule_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTeamScheduleShiftRequest$ {
  /** @deprecated use `UpdateTeamScheduleShiftRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateTeamScheduleShiftRequest$inboundSchema;
  /** @deprecated use `UpdateTeamScheduleShiftRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateTeamScheduleShiftRequest$outboundSchema;
  /** @deprecated use `UpdateTeamScheduleShiftRequest$Outbound` instead. */
  export type Outbound = UpdateTeamScheduleShiftRequest$Outbound;
}

export function updateTeamScheduleShiftRequestToJSON(
  updateTeamScheduleShiftRequest: UpdateTeamScheduleShiftRequest,
): string {
  return JSON.stringify(
    UpdateTeamScheduleShiftRequest$outboundSchema.parse(
      updateTeamScheduleShiftRequest,
    ),
  );
}

export function updateTeamScheduleShiftRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTeamScheduleShiftRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTeamScheduleShiftRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTeamScheduleShiftRequest' from JSON`,
  );
}
