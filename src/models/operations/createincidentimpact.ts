/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const CreateIncidentImpactPathParamType = {
  Environments: "environments",
  Functionalities: "functionalities",
  Services: "services",
  Customers: "customers",
} as const;
export type CreateIncidentImpactPathParamType = ClosedEnum<
  typeof CreateIncidentImpactPathParamType
>;

export type CreateIncidentImpactRequest = {
  incidentId: string;
  type: CreateIncidentImpactPathParamType;
  postV1IncidentsIncidentIdImpactType:
    components.PostV1IncidentsIncidentIdImpactType;
};

/** @internal */
export const CreateIncidentImpactPathParamType$inboundSchema: z.ZodNativeEnum<
  typeof CreateIncidentImpactPathParamType
> = z.nativeEnum(CreateIncidentImpactPathParamType);

/** @internal */
export const CreateIncidentImpactPathParamType$outboundSchema: z.ZodNativeEnum<
  typeof CreateIncidentImpactPathParamType
> = CreateIncidentImpactPathParamType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateIncidentImpactPathParamType$ {
  /** @deprecated use `CreateIncidentImpactPathParamType$inboundSchema` instead. */
  export const inboundSchema = CreateIncidentImpactPathParamType$inboundSchema;
  /** @deprecated use `CreateIncidentImpactPathParamType$outboundSchema` instead. */
  export const outboundSchema =
    CreateIncidentImpactPathParamType$outboundSchema;
}

/** @internal */
export const CreateIncidentImpactRequest$inboundSchema: z.ZodType<
  CreateIncidentImpactRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  incident_id: z.string(),
  type: CreateIncidentImpactPathParamType$inboundSchema,
  postV1IncidentsIncidentIdImpactType:
    components.PostV1IncidentsIncidentIdImpactType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "incident_id": "incidentId",
  });
});

/** @internal */
export type CreateIncidentImpactRequest$Outbound = {
  incident_id: string;
  type: string;
  postV1IncidentsIncidentIdImpactType:
    components.PostV1IncidentsIncidentIdImpactType$Outbound;
};

/** @internal */
export const CreateIncidentImpactRequest$outboundSchema: z.ZodType<
  CreateIncidentImpactRequest$Outbound,
  z.ZodTypeDef,
  CreateIncidentImpactRequest
> = z.object({
  incidentId: z.string(),
  type: CreateIncidentImpactPathParamType$outboundSchema,
  postV1IncidentsIncidentIdImpactType:
    components.PostV1IncidentsIncidentIdImpactType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    incidentId: "incident_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateIncidentImpactRequest$ {
  /** @deprecated use `CreateIncidentImpactRequest$inboundSchema` instead. */
  export const inboundSchema = CreateIncidentImpactRequest$inboundSchema;
  /** @deprecated use `CreateIncidentImpactRequest$outboundSchema` instead. */
  export const outboundSchema = CreateIncidentImpactRequest$outboundSchema;
  /** @deprecated use `CreateIncidentImpactRequest$Outbound` instead. */
  export type Outbound = CreateIncidentImpactRequest$Outbound;
}

export function createIncidentImpactRequestToJSON(
  createIncidentImpactRequest: CreateIncidentImpactRequest,
): string {
  return JSON.stringify(
    CreateIncidentImpactRequest$outboundSchema.parse(
      createIncidentImpactRequest,
    ),
  );
}

export function createIncidentImpactRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateIncidentImpactRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateIncidentImpactRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateIncidentImpactRequest' from JSON`,
  );
}
