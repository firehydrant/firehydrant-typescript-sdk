/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateIncidentRelatedChangeEventRequest = {
  relatedChangeEventId: string;
  incidentId: string;
  patchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId:
    components.PatchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId;
};

/** @internal */
export const UpdateIncidentRelatedChangeEventRequest$inboundSchema: z.ZodType<
  UpdateIncidentRelatedChangeEventRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  related_change_event_id: z.string(),
  incident_id: z.string(),
  patchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId:
    components
      .PatchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "related_change_event_id": "relatedChangeEventId",
    "incident_id": "incidentId",
  });
});

/** @internal */
export type UpdateIncidentRelatedChangeEventRequest$Outbound = {
  related_change_event_id: string;
  incident_id: string;
  patchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId:
    components.PatchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId$Outbound;
};

/** @internal */
export const UpdateIncidentRelatedChangeEventRequest$outboundSchema: z.ZodType<
  UpdateIncidentRelatedChangeEventRequest$Outbound,
  z.ZodTypeDef,
  UpdateIncidentRelatedChangeEventRequest
> = z.object({
  relatedChangeEventId: z.string(),
  incidentId: z.string(),
  patchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId:
    components
      .PatchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    relatedChangeEventId: "related_change_event_id",
    incidentId: "incident_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentRelatedChangeEventRequest$ {
  /** @deprecated use `UpdateIncidentRelatedChangeEventRequest$inboundSchema` instead. */
  export const inboundSchema =
    UpdateIncidentRelatedChangeEventRequest$inboundSchema;
  /** @deprecated use `UpdateIncidentRelatedChangeEventRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateIncidentRelatedChangeEventRequest$outboundSchema;
  /** @deprecated use `UpdateIncidentRelatedChangeEventRequest$Outbound` instead. */
  export type Outbound = UpdateIncidentRelatedChangeEventRequest$Outbound;
}

export function updateIncidentRelatedChangeEventRequestToJSON(
  updateIncidentRelatedChangeEventRequest:
    UpdateIncidentRelatedChangeEventRequest,
): string {
  return JSON.stringify(
    UpdateIncidentRelatedChangeEventRequest$outboundSchema.parse(
      updateIncidentRelatedChangeEventRequest,
    ),
  );
}

export function updateIncidentRelatedChangeEventRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateIncidentRelatedChangeEventRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateIncidentRelatedChangeEventRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateIncidentRelatedChangeEventRequest' from JSON`,
  );
}
