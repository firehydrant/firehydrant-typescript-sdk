/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetCustomFieldSelectOptionsRequest = {
  fieldId: string;
  /**
   * Text string of a query for filtering values.
   */
  query?: string | undefined;
  /**
   * If true, return all versions of the custom field definition.
   */
  allVersions?: boolean | undefined;
};

/** @internal */
export const GetCustomFieldSelectOptionsRequest$inboundSchema: z.ZodType<
  GetCustomFieldSelectOptionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  field_id: z.string(),
  query: z.string().optional(),
  all_versions: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    "field_id": "fieldId",
    "all_versions": "allVersions",
  });
});

/** @internal */
export type GetCustomFieldSelectOptionsRequest$Outbound = {
  field_id: string;
  query?: string | undefined;
  all_versions?: boolean | undefined;
};

/** @internal */
export const GetCustomFieldSelectOptionsRequest$outboundSchema: z.ZodType<
  GetCustomFieldSelectOptionsRequest$Outbound,
  z.ZodTypeDef,
  GetCustomFieldSelectOptionsRequest
> = z.object({
  fieldId: z.string(),
  query: z.string().optional(),
  allVersions: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    fieldId: "field_id",
    allVersions: "all_versions",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCustomFieldSelectOptionsRequest$ {
  /** @deprecated use `GetCustomFieldSelectOptionsRequest$inboundSchema` instead. */
  export const inboundSchema = GetCustomFieldSelectOptionsRequest$inboundSchema;
  /** @deprecated use `GetCustomFieldSelectOptionsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetCustomFieldSelectOptionsRequest$outboundSchema;
  /** @deprecated use `GetCustomFieldSelectOptionsRequest$Outbound` instead. */
  export type Outbound = GetCustomFieldSelectOptionsRequest$Outbound;
}

export function getCustomFieldSelectOptionsRequestToJSON(
  getCustomFieldSelectOptionsRequest: GetCustomFieldSelectOptionsRequest,
): string {
  return JSON.stringify(
    GetCustomFieldSelectOptionsRequest$outboundSchema.parse(
      getCustomFieldSelectOptionsRequest,
    ),
  );
}

export function getCustomFieldSelectOptionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetCustomFieldSelectOptionsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetCustomFieldSelectOptionsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCustomFieldSelectOptionsRequest' from JSON`,
  );
}
