/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateTeamCallRouteRequest = {
  teamId: string;
  createTeamCallRoute: components.CreateTeamCallRoute;
};

/** @internal */
export const CreateTeamCallRouteRequest$inboundSchema: z.ZodType<
  CreateTeamCallRouteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  team_id: z.string(),
  create_team_call_route: z.lazy(() =>
    components.CreateTeamCallRoute$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "team_id": "teamId",
    "create_team_call_route": "createTeamCallRoute",
  });
});

/** @internal */
export type CreateTeamCallRouteRequest$Outbound = {
  team_id: string;
  create_team_call_route: components.CreateTeamCallRoute$Outbound;
};

/** @internal */
export const CreateTeamCallRouteRequest$outboundSchema: z.ZodType<
  CreateTeamCallRouteRequest$Outbound,
  z.ZodTypeDef,
  CreateTeamCallRouteRequest
> = z.object({
  teamId: z.string(),
  createTeamCallRoute: z.lazy(() =>
    components.CreateTeamCallRoute$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    teamId: "team_id",
    createTeamCallRoute: "create_team_call_route",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTeamCallRouteRequest$ {
  /** @deprecated use `CreateTeamCallRouteRequest$inboundSchema` instead. */
  export const inboundSchema = CreateTeamCallRouteRequest$inboundSchema;
  /** @deprecated use `CreateTeamCallRouteRequest$outboundSchema` instead. */
  export const outboundSchema = CreateTeamCallRouteRequest$outboundSchema;
  /** @deprecated use `CreateTeamCallRouteRequest$Outbound` instead. */
  export type Outbound = CreateTeamCallRouteRequest$Outbound;
}

export function createTeamCallRouteRequestToJSON(
  createTeamCallRouteRequest: CreateTeamCallRouteRequest,
): string {
  return JSON.stringify(
    CreateTeamCallRouteRequest$outboundSchema.parse(createTeamCallRouteRequest),
  );
}

export function createTeamCallRouteRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateTeamCallRouteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTeamCallRouteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTeamCallRouteRequest' from JSON`,
  );
}
