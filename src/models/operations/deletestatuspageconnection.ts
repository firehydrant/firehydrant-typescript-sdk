/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteStatuspageConnectionRequest = {
  /**
   * Connection UUID
   */
  connectionId: string;
};

/** @internal */
export const DeleteStatuspageConnectionRequest$inboundSchema: z.ZodType<
  DeleteStatuspageConnectionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  connection_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "connection_id": "connectionId",
  });
});

/** @internal */
export type DeleteStatuspageConnectionRequest$Outbound = {
  connection_id: string;
};

/** @internal */
export const DeleteStatuspageConnectionRequest$outboundSchema: z.ZodType<
  DeleteStatuspageConnectionRequest$Outbound,
  z.ZodTypeDef,
  DeleteStatuspageConnectionRequest
> = z.object({
  connectionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    connectionId: "connection_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteStatuspageConnectionRequest$ {
  /** @deprecated use `DeleteStatuspageConnectionRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteStatuspageConnectionRequest$inboundSchema;
  /** @deprecated use `DeleteStatuspageConnectionRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteStatuspageConnectionRequest$outboundSchema;
  /** @deprecated use `DeleteStatuspageConnectionRequest$Outbound` instead. */
  export type Outbound = DeleteStatuspageConnectionRequest$Outbound;
}

export function deleteStatuspageConnectionRequestToJSON(
  deleteStatuspageConnectionRequest: DeleteStatuspageConnectionRequest,
): string {
  return JSON.stringify(
    DeleteStatuspageConnectionRequest$outboundSchema.parse(
      deleteStatuspageConnectionRequest,
    ),
  );
}

export function deleteStatuspageConnectionRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteStatuspageConnectionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteStatuspageConnectionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteStatuspageConnectionRequest' from JSON`,
  );
}
