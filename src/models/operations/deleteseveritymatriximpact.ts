/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteSeverityMatrixImpactRequest = {
  impactId: string;
};

/** @internal */
export const DeleteSeverityMatrixImpactRequest$inboundSchema: z.ZodType<
  DeleteSeverityMatrixImpactRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  impact_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "impact_id": "impactId",
  });
});

/** @internal */
export type DeleteSeverityMatrixImpactRequest$Outbound = {
  impact_id: string;
};

/** @internal */
export const DeleteSeverityMatrixImpactRequest$outboundSchema: z.ZodType<
  DeleteSeverityMatrixImpactRequest$Outbound,
  z.ZodTypeDef,
  DeleteSeverityMatrixImpactRequest
> = z.object({
  impactId: z.string(),
}).transform((v) => {
  return remap$(v, {
    impactId: "impact_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSeverityMatrixImpactRequest$ {
  /** @deprecated use `DeleteSeverityMatrixImpactRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteSeverityMatrixImpactRequest$inboundSchema;
  /** @deprecated use `DeleteSeverityMatrixImpactRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteSeverityMatrixImpactRequest$outboundSchema;
  /** @deprecated use `DeleteSeverityMatrixImpactRequest$Outbound` instead. */
  export type Outbound = DeleteSeverityMatrixImpactRequest$Outbound;
}

export function deleteSeverityMatrixImpactRequestToJSON(
  deleteSeverityMatrixImpactRequest: DeleteSeverityMatrixImpactRequest,
): string {
  return JSON.stringify(
    DeleteSeverityMatrixImpactRequest$outboundSchema.parse(
      deleteSeverityMatrixImpactRequest,
    ),
  );
}

export function deleteSeverityMatrixImpactRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteSeverityMatrixImpactRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteSeverityMatrixImpactRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteSeverityMatrixImpactRequest' from JSON`,
  );
}
