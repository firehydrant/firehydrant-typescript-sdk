/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const UpdateSavedSearchPathParamResourceType = {
  ChangeEvents: "change_events",
  Incidents: "incidents",
  Services: "services",
  ScheduledMaintenances: "scheduled_maintenances",
  TicketTasks: "ticket_tasks",
  TicketFollowUps: "ticket_follow_ups",
  Analytics: "analytics",
  ImpactAnalytics: "impact_analytics",
  Alerts: "alerts",
  IncidentEvents: "incident_events",
} as const;
export type UpdateSavedSearchPathParamResourceType = ClosedEnum<
  typeof UpdateSavedSearchPathParamResourceType
>;

export type UpdateSavedSearchRequest = {
  resourceType: UpdateSavedSearchPathParamResourceType;
  savedSearchId: string;
  patchV1SavedSearchesResourceTypeSavedSearchId:
    components.PatchV1SavedSearchesResourceTypeSavedSearchId;
};

/** @internal */
export const UpdateSavedSearchPathParamResourceType$inboundSchema:
  z.ZodNativeEnum<typeof UpdateSavedSearchPathParamResourceType> = z.nativeEnum(
    UpdateSavedSearchPathParamResourceType,
  );

/** @internal */
export const UpdateSavedSearchPathParamResourceType$outboundSchema:
  z.ZodNativeEnum<typeof UpdateSavedSearchPathParamResourceType> =
    UpdateSavedSearchPathParamResourceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSavedSearchPathParamResourceType$ {
  /** @deprecated use `UpdateSavedSearchPathParamResourceType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateSavedSearchPathParamResourceType$inboundSchema;
  /** @deprecated use `UpdateSavedSearchPathParamResourceType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateSavedSearchPathParamResourceType$outboundSchema;
}

/** @internal */
export const UpdateSavedSearchRequest$inboundSchema: z.ZodType<
  UpdateSavedSearchRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource_type: UpdateSavedSearchPathParamResourceType$inboundSchema,
  saved_search_id: z.string(),
  patchV1SavedSearchesResourceTypeSavedSearchId:
    components.PatchV1SavedSearchesResourceTypeSavedSearchId$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "resource_type": "resourceType",
    "saved_search_id": "savedSearchId",
  });
});

/** @internal */
export type UpdateSavedSearchRequest$Outbound = {
  resource_type: string;
  saved_search_id: string;
  patchV1SavedSearchesResourceTypeSavedSearchId:
    components.PatchV1SavedSearchesResourceTypeSavedSearchId$Outbound;
};

/** @internal */
export const UpdateSavedSearchRequest$outboundSchema: z.ZodType<
  UpdateSavedSearchRequest$Outbound,
  z.ZodTypeDef,
  UpdateSavedSearchRequest
> = z.object({
  resourceType: UpdateSavedSearchPathParamResourceType$outboundSchema,
  savedSearchId: z.string(),
  patchV1SavedSearchesResourceTypeSavedSearchId:
    components.PatchV1SavedSearchesResourceTypeSavedSearchId$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    resourceType: "resource_type",
    savedSearchId: "saved_search_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSavedSearchRequest$ {
  /** @deprecated use `UpdateSavedSearchRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateSavedSearchRequest$inboundSchema;
  /** @deprecated use `UpdateSavedSearchRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateSavedSearchRequest$outboundSchema;
  /** @deprecated use `UpdateSavedSearchRequest$Outbound` instead. */
  export type Outbound = UpdateSavedSearchRequest$Outbound;
}

export function updateSavedSearchRequestToJSON(
  updateSavedSearchRequest: UpdateSavedSearchRequest,
): string {
  return JSON.stringify(
    UpdateSavedSearchRequest$outboundSchema.parse(updateSavedSearchRequest),
  );
}

export function updateSavedSearchRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSavedSearchRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSavedSearchRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSavedSearchRequest' from JSON`,
  );
}
