/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateTeamOnCallScheduleRequest = {
  teamId: string;
  scheduleId: string;
  updateTeamOnCallSchedule: components.UpdateTeamOnCallSchedule;
};

/** @internal */
export const UpdateTeamOnCallScheduleRequest$inboundSchema: z.ZodType<
  UpdateTeamOnCallScheduleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  team_id: z.string(),
  schedule_id: z.string(),
  update_team_on_call_schedule: z.lazy(() =>
    components.UpdateTeamOnCallSchedule$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "team_id": "teamId",
    "schedule_id": "scheduleId",
    "update_team_on_call_schedule": "updateTeamOnCallSchedule",
  });
});

/** @internal */
export type UpdateTeamOnCallScheduleRequest$Outbound = {
  team_id: string;
  schedule_id: string;
  update_team_on_call_schedule: components.UpdateTeamOnCallSchedule$Outbound;
};

/** @internal */
export const UpdateTeamOnCallScheduleRequest$outboundSchema: z.ZodType<
  UpdateTeamOnCallScheduleRequest$Outbound,
  z.ZodTypeDef,
  UpdateTeamOnCallScheduleRequest
> = z.object({
  teamId: z.string(),
  scheduleId: z.string(),
  updateTeamOnCallSchedule: z.lazy(() =>
    components.UpdateTeamOnCallSchedule$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    teamId: "team_id",
    scheduleId: "schedule_id",
    updateTeamOnCallSchedule: "update_team_on_call_schedule",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTeamOnCallScheduleRequest$ {
  /** @deprecated use `UpdateTeamOnCallScheduleRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateTeamOnCallScheduleRequest$inboundSchema;
  /** @deprecated use `UpdateTeamOnCallScheduleRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateTeamOnCallScheduleRequest$outboundSchema;
  /** @deprecated use `UpdateTeamOnCallScheduleRequest$Outbound` instead. */
  export type Outbound = UpdateTeamOnCallScheduleRequest$Outbound;
}

export function updateTeamOnCallScheduleRequestToJSON(
  updateTeamOnCallScheduleRequest: UpdateTeamOnCallScheduleRequest,
): string {
  return JSON.stringify(
    UpdateTeamOnCallScheduleRequest$outboundSchema.parse(
      updateTeamOnCallScheduleRequest,
    ),
  );
}

export function updateTeamOnCallScheduleRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTeamOnCallScheduleRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTeamOnCallScheduleRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTeamOnCallScheduleRequest' from JSON`,
  );
}
