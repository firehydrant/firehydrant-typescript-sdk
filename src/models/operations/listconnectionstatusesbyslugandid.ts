/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListConnectionStatusesBySlugAndIdRequest = {
  slug: string;
  byConnectionId: string;
};

/** @internal */
export const ListConnectionStatusesBySlugAndIdRequest$inboundSchema: z.ZodType<
  ListConnectionStatusesBySlugAndIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  slug: z.string(),
  by_connection_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "by_connection_id": "byConnectionId",
  });
});

/** @internal */
export type ListConnectionStatusesBySlugAndIdRequest$Outbound = {
  slug: string;
  by_connection_id: string;
};

/** @internal */
export const ListConnectionStatusesBySlugAndIdRequest$outboundSchema: z.ZodType<
  ListConnectionStatusesBySlugAndIdRequest$Outbound,
  z.ZodTypeDef,
  ListConnectionStatusesBySlugAndIdRequest
> = z.object({
  slug: z.string(),
  byConnectionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    byConnectionId: "by_connection_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListConnectionStatusesBySlugAndIdRequest$ {
  /** @deprecated use `ListConnectionStatusesBySlugAndIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListConnectionStatusesBySlugAndIdRequest$inboundSchema;
  /** @deprecated use `ListConnectionStatusesBySlugAndIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListConnectionStatusesBySlugAndIdRequest$outboundSchema;
  /** @deprecated use `ListConnectionStatusesBySlugAndIdRequest$Outbound` instead. */
  export type Outbound = ListConnectionStatusesBySlugAndIdRequest$Outbound;
}

export function listConnectionStatusesBySlugAndIdRequestToJSON(
  listConnectionStatusesBySlugAndIdRequest:
    ListConnectionStatusesBySlugAndIdRequest,
): string {
  return JSON.stringify(
    ListConnectionStatusesBySlugAndIdRequest$outboundSchema.parse(
      listConnectionStatusesBySlugAndIdRequest,
    ),
  );
}

export function listConnectionStatusesBySlugAndIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ListConnectionStatusesBySlugAndIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListConnectionStatusesBySlugAndIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ListConnectionStatusesBySlugAndIdRequest' from JSON`,
  );
}
