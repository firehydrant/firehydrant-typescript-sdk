/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteRetrospectiveTemplateRequest = {
  retrospectiveTemplateId: string;
};

/** @internal */
export const DeleteRetrospectiveTemplateRequest$inboundSchema: z.ZodType<
  DeleteRetrospectiveTemplateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  retrospective_template_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "retrospective_template_id": "retrospectiveTemplateId",
  });
});

/** @internal */
export type DeleteRetrospectiveTemplateRequest$Outbound = {
  retrospective_template_id: string;
};

/** @internal */
export const DeleteRetrospectiveTemplateRequest$outboundSchema: z.ZodType<
  DeleteRetrospectiveTemplateRequest$Outbound,
  z.ZodTypeDef,
  DeleteRetrospectiveTemplateRequest
> = z.object({
  retrospectiveTemplateId: z.string(),
}).transform((v) => {
  return remap$(v, {
    retrospectiveTemplateId: "retrospective_template_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteRetrospectiveTemplateRequest$ {
  /** @deprecated use `DeleteRetrospectiveTemplateRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteRetrospectiveTemplateRequest$inboundSchema;
  /** @deprecated use `DeleteRetrospectiveTemplateRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteRetrospectiveTemplateRequest$outboundSchema;
  /** @deprecated use `DeleteRetrospectiveTemplateRequest$Outbound` instead. */
  export type Outbound = DeleteRetrospectiveTemplateRequest$Outbound;
}

export function deleteRetrospectiveTemplateRequestToJSON(
  deleteRetrospectiveTemplateRequest: DeleteRetrospectiveTemplateRequest,
): string {
  return JSON.stringify(
    DeleteRetrospectiveTemplateRequest$outboundSchema.parse(
      deleteRetrospectiveTemplateRequest,
    ),
  );
}

export function deleteRetrospectiveTemplateRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteRetrospectiveTemplateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteRetrospectiveTemplateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteRetrospectiveTemplateRequest' from JSON`,
  );
}
