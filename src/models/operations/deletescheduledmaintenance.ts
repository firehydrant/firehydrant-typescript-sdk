/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteScheduledMaintenanceRequest = {
  scheduledMaintenanceId: string;
};

/** @internal */
export const DeleteScheduledMaintenanceRequest$inboundSchema: z.ZodType<
  DeleteScheduledMaintenanceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  scheduled_maintenance_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "scheduled_maintenance_id": "scheduledMaintenanceId",
  });
});

/** @internal */
export type DeleteScheduledMaintenanceRequest$Outbound = {
  scheduled_maintenance_id: string;
};

/** @internal */
export const DeleteScheduledMaintenanceRequest$outboundSchema: z.ZodType<
  DeleteScheduledMaintenanceRequest$Outbound,
  z.ZodTypeDef,
  DeleteScheduledMaintenanceRequest
> = z.object({
  scheduledMaintenanceId: z.string(),
}).transform((v) => {
  return remap$(v, {
    scheduledMaintenanceId: "scheduled_maintenance_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteScheduledMaintenanceRequest$ {
  /** @deprecated use `DeleteScheduledMaintenanceRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteScheduledMaintenanceRequest$inboundSchema;
  /** @deprecated use `DeleteScheduledMaintenanceRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteScheduledMaintenanceRequest$outboundSchema;
  /** @deprecated use `DeleteScheduledMaintenanceRequest$Outbound` instead. */
  export type Outbound = DeleteScheduledMaintenanceRequest$Outbound;
}

export function deleteScheduledMaintenanceRequestToJSON(
  deleteScheduledMaintenanceRequest: DeleteScheduledMaintenanceRequest,
): string {
  return JSON.stringify(
    DeleteScheduledMaintenanceRequest$outboundSchema.parse(
      deleteScheduledMaintenanceRequest,
    ),
  );
}

export function deleteScheduledMaintenanceRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteScheduledMaintenanceRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteScheduledMaintenanceRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteScheduledMaintenanceRequest' from JSON`,
  );
}
