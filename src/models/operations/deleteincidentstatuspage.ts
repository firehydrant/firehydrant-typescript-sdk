/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteIncidentStatusPageRequest = {
  statusPageId: string;
  incidentId: string;
};

/** @internal */
export const DeleteIncidentStatusPageRequest$inboundSchema: z.ZodType<
  DeleteIncidentStatusPageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_page_id: z.string(),
  incident_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "status_page_id": "statusPageId",
    "incident_id": "incidentId",
  });
});

/** @internal */
export type DeleteIncidentStatusPageRequest$Outbound = {
  status_page_id: string;
  incident_id: string;
};

/** @internal */
export const DeleteIncidentStatusPageRequest$outboundSchema: z.ZodType<
  DeleteIncidentStatusPageRequest$Outbound,
  z.ZodTypeDef,
  DeleteIncidentStatusPageRequest
> = z.object({
  statusPageId: z.string(),
  incidentId: z.string(),
}).transform((v) => {
  return remap$(v, {
    statusPageId: "status_page_id",
    incidentId: "incident_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteIncidentStatusPageRequest$ {
  /** @deprecated use `DeleteIncidentStatusPageRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteIncidentStatusPageRequest$inboundSchema;
  /** @deprecated use `DeleteIncidentStatusPageRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteIncidentStatusPageRequest$outboundSchema;
  /** @deprecated use `DeleteIncidentStatusPageRequest$Outbound` instead. */
  export type Outbound = DeleteIncidentStatusPageRequest$Outbound;
}

export function deleteIncidentStatusPageRequestToJSON(
  deleteIncidentStatusPageRequest: DeleteIncidentStatusPageRequest,
): string {
  return JSON.stringify(
    DeleteIncidentStatusPageRequest$outboundSchema.parse(
      deleteIncidentStatusPageRequest,
    ),
  );
}

export function deleteIncidentStatusPageRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteIncidentStatusPageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteIncidentStatusPageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteIncidentStatusPageRequest' from JSON`,
  );
}
