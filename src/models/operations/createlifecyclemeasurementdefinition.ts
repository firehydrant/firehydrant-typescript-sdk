/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateLifecycleMeasurementDefinitionRequest = {
  name: string;
  slug?: string | null | undefined;
  description?: string | null | undefined;
  startsAtMilestoneId: string;
  endsAtMilestoneId: string;
};

/** @internal */
export const CreateLifecycleMeasurementDefinitionRequest$inboundSchema:
  z.ZodType<
    CreateLifecycleMeasurementDefinitionRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    slug: z.nullable(z.string()).optional(),
    description: z.nullable(z.string()).optional(),
    starts_at_milestone_id: z.string(),
    ends_at_milestone_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "starts_at_milestone_id": "startsAtMilestoneId",
      "ends_at_milestone_id": "endsAtMilestoneId",
    });
  });

/** @internal */
export type CreateLifecycleMeasurementDefinitionRequest$Outbound = {
  name: string;
  slug?: string | null | undefined;
  description?: string | null | undefined;
  starts_at_milestone_id: string;
  ends_at_milestone_id: string;
};

/** @internal */
export const CreateLifecycleMeasurementDefinitionRequest$outboundSchema:
  z.ZodType<
    CreateLifecycleMeasurementDefinitionRequest$Outbound,
    z.ZodTypeDef,
    CreateLifecycleMeasurementDefinitionRequest
  > = z.object({
    name: z.string(),
    slug: z.nullable(z.string()).optional(),
    description: z.nullable(z.string()).optional(),
    startsAtMilestoneId: z.string(),
    endsAtMilestoneId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      startsAtMilestoneId: "starts_at_milestone_id",
      endsAtMilestoneId: "ends_at_milestone_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateLifecycleMeasurementDefinitionRequest$ {
  /** @deprecated use `CreateLifecycleMeasurementDefinitionRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateLifecycleMeasurementDefinitionRequest$inboundSchema;
  /** @deprecated use `CreateLifecycleMeasurementDefinitionRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateLifecycleMeasurementDefinitionRequest$outboundSchema;
  /** @deprecated use `CreateLifecycleMeasurementDefinitionRequest$Outbound` instead. */
  export type Outbound = CreateLifecycleMeasurementDefinitionRequest$Outbound;
}

export function createLifecycleMeasurementDefinitionRequestToJSON(
  createLifecycleMeasurementDefinitionRequest:
    CreateLifecycleMeasurementDefinitionRequest,
): string {
  return JSON.stringify(
    CreateLifecycleMeasurementDefinitionRequest$outboundSchema.parse(
      createLifecycleMeasurementDefinitionRequest,
    ),
  );
}

export function createLifecycleMeasurementDefinitionRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateLifecycleMeasurementDefinitionRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateLifecycleMeasurementDefinitionRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateLifecycleMeasurementDefinitionRequest' from JSON`,
  );
}
