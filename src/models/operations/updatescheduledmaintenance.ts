/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateScheduledMaintenanceRequest = {
  scheduledMaintenanceId: string;
  updateScheduledMaintenance: components.UpdateScheduledMaintenance;
};

/** @internal */
export const UpdateScheduledMaintenanceRequest$inboundSchema: z.ZodType<
  UpdateScheduledMaintenanceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  scheduled_maintenance_id: z.string(),
  update_scheduled_maintenance: z.lazy(() =>
    components.UpdateScheduledMaintenance$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "scheduled_maintenance_id": "scheduledMaintenanceId",
    "update_scheduled_maintenance": "updateScheduledMaintenance",
  });
});

/** @internal */
export type UpdateScheduledMaintenanceRequest$Outbound = {
  scheduled_maintenance_id: string;
  update_scheduled_maintenance: components.UpdateScheduledMaintenance$Outbound;
};

/** @internal */
export const UpdateScheduledMaintenanceRequest$outboundSchema: z.ZodType<
  UpdateScheduledMaintenanceRequest$Outbound,
  z.ZodTypeDef,
  UpdateScheduledMaintenanceRequest
> = z.object({
  scheduledMaintenanceId: z.string(),
  updateScheduledMaintenance: z.lazy(() =>
    components.UpdateScheduledMaintenance$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    scheduledMaintenanceId: "scheduled_maintenance_id",
    updateScheduledMaintenance: "update_scheduled_maintenance",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateScheduledMaintenanceRequest$ {
  /** @deprecated use `UpdateScheduledMaintenanceRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateScheduledMaintenanceRequest$inboundSchema;
  /** @deprecated use `UpdateScheduledMaintenanceRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateScheduledMaintenanceRequest$outboundSchema;
  /** @deprecated use `UpdateScheduledMaintenanceRequest$Outbound` instead. */
  export type Outbound = UpdateScheduledMaintenanceRequest$Outbound;
}

export function updateScheduledMaintenanceRequestToJSON(
  updateScheduledMaintenanceRequest: UpdateScheduledMaintenanceRequest,
): string {
  return JSON.stringify(
    UpdateScheduledMaintenanceRequest$outboundSchema.parse(
      updateScheduledMaintenanceRequest,
    ),
  );
}

export function updateScheduledMaintenanceRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateScheduledMaintenanceRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateScheduledMaintenanceRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateScheduledMaintenanceRequest' from JSON`,
  );
}
