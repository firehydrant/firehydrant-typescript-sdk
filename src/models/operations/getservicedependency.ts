/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetServiceDependencyRequest = {
  serviceDependencyId: string;
};

/** @internal */
export const GetServiceDependencyRequest$inboundSchema: z.ZodType<
  GetServiceDependencyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  service_dependency_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "service_dependency_id": "serviceDependencyId",
  });
});

/** @internal */
export type GetServiceDependencyRequest$Outbound = {
  service_dependency_id: string;
};

/** @internal */
export const GetServiceDependencyRequest$outboundSchema: z.ZodType<
  GetServiceDependencyRequest$Outbound,
  z.ZodTypeDef,
  GetServiceDependencyRequest
> = z.object({
  serviceDependencyId: z.string(),
}).transform((v) => {
  return remap$(v, {
    serviceDependencyId: "service_dependency_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetServiceDependencyRequest$ {
  /** @deprecated use `GetServiceDependencyRequest$inboundSchema` instead. */
  export const inboundSchema = GetServiceDependencyRequest$inboundSchema;
  /** @deprecated use `GetServiceDependencyRequest$outboundSchema` instead. */
  export const outboundSchema = GetServiceDependencyRequest$outboundSchema;
  /** @deprecated use `GetServiceDependencyRequest$Outbound` instead. */
  export type Outbound = GetServiceDependencyRequest$Outbound;
}

export function getServiceDependencyRequestToJSON(
  getServiceDependencyRequest: GetServiceDependencyRequest,
): string {
  return JSON.stringify(
    GetServiceDependencyRequest$outboundSchema.parse(
      getServiceDependencyRequest,
    ),
  );
}

export function getServiceDependencyRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetServiceDependencyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetServiceDependencyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetServiceDependencyRequest' from JSON`,
  );
}
