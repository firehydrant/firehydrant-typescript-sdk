/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListChecklistTemplatesRequest = {
  page?: number | null | undefined;
  perPage?: number | null | undefined;
  /**
   * A query to search checklist templates by their name
   */
  query?: string | null | undefined;
};

/** @internal */
export const ListChecklistTemplatesRequest$inboundSchema: z.ZodType<
  ListChecklistTemplatesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.nullable(z.number().int()).optional(),
  per_page: z.nullable(z.number().int()).optional(),
  query: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "per_page": "perPage",
  });
});

/** @internal */
export type ListChecklistTemplatesRequest$Outbound = {
  page?: number | null | undefined;
  per_page?: number | null | undefined;
  query?: string | null | undefined;
};

/** @internal */
export const ListChecklistTemplatesRequest$outboundSchema: z.ZodType<
  ListChecklistTemplatesRequest$Outbound,
  z.ZodTypeDef,
  ListChecklistTemplatesRequest
> = z.object({
  page: z.nullable(z.number().int()).optional(),
  perPage: z.nullable(z.number().int()).optional(),
  query: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    perPage: "per_page",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListChecklistTemplatesRequest$ {
  /** @deprecated use `ListChecklistTemplatesRequest$inboundSchema` instead. */
  export const inboundSchema = ListChecklistTemplatesRequest$inboundSchema;
  /** @deprecated use `ListChecklistTemplatesRequest$outboundSchema` instead. */
  export const outboundSchema = ListChecklistTemplatesRequest$outboundSchema;
  /** @deprecated use `ListChecklistTemplatesRequest$Outbound` instead. */
  export type Outbound = ListChecklistTemplatesRequest$Outbound;
}

export function listChecklistTemplatesRequestToJSON(
  listChecklistTemplatesRequest: ListChecklistTemplatesRequest,
): string {
  return JSON.stringify(
    ListChecklistTemplatesRequest$outboundSchema.parse(
      listChecklistTemplatesRequest,
    ),
  );
}

export function listChecklistTemplatesRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListChecklistTemplatesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListChecklistTemplatesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListChecklistTemplatesRequest' from JSON`,
  );
}
