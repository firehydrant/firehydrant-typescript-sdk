/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateRetrospectiveFieldRequest = {
  fieldId: string;
  reportId: string;
  patchV1PostMortemsReportsReportIdFieldsFieldId:
    components.PatchV1PostMortemsReportsReportIdFieldsFieldId;
};

/** @internal */
export const UpdateRetrospectiveFieldRequest$inboundSchema: z.ZodType<
  UpdateRetrospectiveFieldRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  field_id: z.string(),
  report_id: z.string(),
  patchV1PostMortemsReportsReportIdFieldsFieldId:
    components.PatchV1PostMortemsReportsReportIdFieldsFieldId$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "field_id": "fieldId",
    "report_id": "reportId",
  });
});

/** @internal */
export type UpdateRetrospectiveFieldRequest$Outbound = {
  field_id: string;
  report_id: string;
  patchV1PostMortemsReportsReportIdFieldsFieldId:
    components.PatchV1PostMortemsReportsReportIdFieldsFieldId$Outbound;
};

/** @internal */
export const UpdateRetrospectiveFieldRequest$outboundSchema: z.ZodType<
  UpdateRetrospectiveFieldRequest$Outbound,
  z.ZodTypeDef,
  UpdateRetrospectiveFieldRequest
> = z.object({
  fieldId: z.string(),
  reportId: z.string(),
  patchV1PostMortemsReportsReportIdFieldsFieldId:
    components.PatchV1PostMortemsReportsReportIdFieldsFieldId$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    fieldId: "field_id",
    reportId: "report_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateRetrospectiveFieldRequest$ {
  /** @deprecated use `UpdateRetrospectiveFieldRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateRetrospectiveFieldRequest$inboundSchema;
  /** @deprecated use `UpdateRetrospectiveFieldRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateRetrospectiveFieldRequest$outboundSchema;
  /** @deprecated use `UpdateRetrospectiveFieldRequest$Outbound` instead. */
  export type Outbound = UpdateRetrospectiveFieldRequest$Outbound;
}

export function updateRetrospectiveFieldRequestToJSON(
  updateRetrospectiveFieldRequest: UpdateRetrospectiveFieldRequest,
): string {
  return JSON.stringify(
    UpdateRetrospectiveFieldRequest$outboundSchema.parse(
      updateRetrospectiveFieldRequest,
    ),
  );
}

export function updateRetrospectiveFieldRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateRetrospectiveFieldRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateRetrospectiveFieldRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateRetrospectiveFieldRequest' from JSON`,
  );
}
