/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListOrganizationOnCallSchedulesRequest = {
  /**
   * An optional comma separated list of team IDs to filter currently on-call users by
   */
  teamId?: string | null | undefined;
};

/** @internal */
export const ListOrganizationOnCallSchedulesRequest$inboundSchema: z.ZodType<
  ListOrganizationOnCallSchedulesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  team_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "team_id": "teamId",
  });
});

/** @internal */
export type ListOrganizationOnCallSchedulesRequest$Outbound = {
  team_id?: string | null | undefined;
};

/** @internal */
export const ListOrganizationOnCallSchedulesRequest$outboundSchema: z.ZodType<
  ListOrganizationOnCallSchedulesRequest$Outbound,
  z.ZodTypeDef,
  ListOrganizationOnCallSchedulesRequest
> = z.object({
  teamId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    teamId: "team_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOrganizationOnCallSchedulesRequest$ {
  /** @deprecated use `ListOrganizationOnCallSchedulesRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListOrganizationOnCallSchedulesRequest$inboundSchema;
  /** @deprecated use `ListOrganizationOnCallSchedulesRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListOrganizationOnCallSchedulesRequest$outboundSchema;
  /** @deprecated use `ListOrganizationOnCallSchedulesRequest$Outbound` instead. */
  export type Outbound = ListOrganizationOnCallSchedulesRequest$Outbound;
}

export function listOrganizationOnCallSchedulesRequestToJSON(
  listOrganizationOnCallSchedulesRequest:
    ListOrganizationOnCallSchedulesRequest,
): string {
  return JSON.stringify(
    ListOrganizationOnCallSchedulesRequest$outboundSchema.parse(
      listOrganizationOnCallSchedulesRequest,
    ),
  );
}

export function listOrganizationOnCallSchedulesRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListOrganizationOnCallSchedulesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListOrganizationOnCallSchedulesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOrganizationOnCallSchedulesRequest' from JSON`,
  );
}
