/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteRunbookExecutionRequest = {
  executionId: string;
  /**
   * The reason for terminating the runbook execution
   */
  reason: string;
};

/** @internal */
export const DeleteRunbookExecutionRequest$inboundSchema: z.ZodType<
  DeleteRunbookExecutionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  execution_id: z.string(),
  reason: z.string(),
}).transform((v) => {
  return remap$(v, {
    "execution_id": "executionId",
  });
});

/** @internal */
export type DeleteRunbookExecutionRequest$Outbound = {
  execution_id: string;
  reason: string;
};

/** @internal */
export const DeleteRunbookExecutionRequest$outboundSchema: z.ZodType<
  DeleteRunbookExecutionRequest$Outbound,
  z.ZodTypeDef,
  DeleteRunbookExecutionRequest
> = z.object({
  executionId: z.string(),
  reason: z.string(),
}).transform((v) => {
  return remap$(v, {
    executionId: "execution_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteRunbookExecutionRequest$ {
  /** @deprecated use `DeleteRunbookExecutionRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteRunbookExecutionRequest$inboundSchema;
  /** @deprecated use `DeleteRunbookExecutionRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteRunbookExecutionRequest$outboundSchema;
  /** @deprecated use `DeleteRunbookExecutionRequest$Outbound` instead. */
  export type Outbound = DeleteRunbookExecutionRequest$Outbound;
}

export function deleteRunbookExecutionRequestToJSON(
  deleteRunbookExecutionRequest: DeleteRunbookExecutionRequest,
): string {
  return JSON.stringify(
    DeleteRunbookExecutionRequest$outboundSchema.parse(
      deleteRunbookExecutionRequest,
    ),
  );
}

export function deleteRunbookExecutionRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteRunbookExecutionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteRunbookExecutionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteRunbookExecutionRequest' from JSON`,
  );
}
