/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateConnectionRequest = {
  slug: string;
};

/** @internal */
export const CreateConnectionRequest$inboundSchema: z.ZodType<
  CreateConnectionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  slug: z.string(),
});

/** @internal */
export type CreateConnectionRequest$Outbound = {
  slug: string;
};

/** @internal */
export const CreateConnectionRequest$outboundSchema: z.ZodType<
  CreateConnectionRequest$Outbound,
  z.ZodTypeDef,
  CreateConnectionRequest
> = z.object({
  slug: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateConnectionRequest$ {
  /** @deprecated use `CreateConnectionRequest$inboundSchema` instead. */
  export const inboundSchema = CreateConnectionRequest$inboundSchema;
  /** @deprecated use `CreateConnectionRequest$outboundSchema` instead. */
  export const outboundSchema = CreateConnectionRequest$outboundSchema;
  /** @deprecated use `CreateConnectionRequest$Outbound` instead. */
  export type Outbound = CreateConnectionRequest$Outbound;
}

export function createConnectionRequestToJSON(
  createConnectionRequest: CreateConnectionRequest,
): string {
  return JSON.stringify(
    CreateConnectionRequest$outboundSchema.parse(createConnectionRequest),
  );
}

export function createConnectionRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateConnectionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateConnectionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateConnectionRequest' from JSON`,
  );
}
