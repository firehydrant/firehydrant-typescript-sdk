/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListStatusUpdateTemplatesRequest = {
  page?: number | null | undefined;
  perPage?: number | null | undefined;
};

/** @internal */
export const ListStatusUpdateTemplatesRequest$inboundSchema: z.ZodType<
  ListStatusUpdateTemplatesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.nullable(z.number().int()).optional(),
  per_page: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "per_page": "perPage",
  });
});

/** @internal */
export type ListStatusUpdateTemplatesRequest$Outbound = {
  page?: number | null | undefined;
  per_page?: number | null | undefined;
};

/** @internal */
export const ListStatusUpdateTemplatesRequest$outboundSchema: z.ZodType<
  ListStatusUpdateTemplatesRequest$Outbound,
  z.ZodTypeDef,
  ListStatusUpdateTemplatesRequest
> = z.object({
  page: z.nullable(z.number().int()).optional(),
  perPage: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    perPage: "per_page",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListStatusUpdateTemplatesRequest$ {
  /** @deprecated use `ListStatusUpdateTemplatesRequest$inboundSchema` instead. */
  export const inboundSchema = ListStatusUpdateTemplatesRequest$inboundSchema;
  /** @deprecated use `ListStatusUpdateTemplatesRequest$outboundSchema` instead. */
  export const outboundSchema = ListStatusUpdateTemplatesRequest$outboundSchema;
  /** @deprecated use `ListStatusUpdateTemplatesRequest$Outbound` instead. */
  export type Outbound = ListStatusUpdateTemplatesRequest$Outbound;
}

export function listStatusUpdateTemplatesRequestToJSON(
  listStatusUpdateTemplatesRequest: ListStatusUpdateTemplatesRequest,
): string {
  return JSON.stringify(
    ListStatusUpdateTemplatesRequest$outboundSchema.parse(
      listStatusUpdateTemplatesRequest,
    ),
  );
}

export function listStatusUpdateTemplatesRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListStatusUpdateTemplatesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListStatusUpdateTemplatesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListStatusUpdateTemplatesRequest' from JSON`,
  );
}
