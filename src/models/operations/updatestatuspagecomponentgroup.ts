/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateStatusPageComponentGroupRequestBody = {
  name?: string | undefined;
  componentGroupId?: string | undefined;
  position?: number | undefined;
};

export type UpdateStatusPageComponentGroupRequest = {
  nuncConnectionId: string;
  groupId: string;
  requestBody?: UpdateStatusPageComponentGroupRequestBody | undefined;
};

/** @internal */
export const UpdateStatusPageComponentGroupRequestBody$inboundSchema: z.ZodType<
  UpdateStatusPageComponentGroupRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  component_group_id: z.string().optional(),
  position: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "component_group_id": "componentGroupId",
  });
});

/** @internal */
export type UpdateStatusPageComponentGroupRequestBody$Outbound = {
  name?: string | undefined;
  component_group_id?: string | undefined;
  position?: number | undefined;
};

/** @internal */
export const UpdateStatusPageComponentGroupRequestBody$outboundSchema:
  z.ZodType<
    UpdateStatusPageComponentGroupRequestBody$Outbound,
    z.ZodTypeDef,
    UpdateStatusPageComponentGroupRequestBody
  > = z.object({
    name: z.string().optional(),
    componentGroupId: z.string().optional(),
    position: z.number().int().optional(),
  }).transform((v) => {
    return remap$(v, {
      componentGroupId: "component_group_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStatusPageComponentGroupRequestBody$ {
  /** @deprecated use `UpdateStatusPageComponentGroupRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    UpdateStatusPageComponentGroupRequestBody$inboundSchema;
  /** @deprecated use `UpdateStatusPageComponentGroupRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    UpdateStatusPageComponentGroupRequestBody$outboundSchema;
  /** @deprecated use `UpdateStatusPageComponentGroupRequestBody$Outbound` instead. */
  export type Outbound = UpdateStatusPageComponentGroupRequestBody$Outbound;
}

export function updateStatusPageComponentGroupRequestBodyToJSON(
  updateStatusPageComponentGroupRequestBody:
    UpdateStatusPageComponentGroupRequestBody,
): string {
  return JSON.stringify(
    UpdateStatusPageComponentGroupRequestBody$outboundSchema.parse(
      updateStatusPageComponentGroupRequestBody,
    ),
  );
}

export function updateStatusPageComponentGroupRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateStatusPageComponentGroupRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateStatusPageComponentGroupRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateStatusPageComponentGroupRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateStatusPageComponentGroupRequest$inboundSchema: z.ZodType<
  UpdateStatusPageComponentGroupRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  nunc_connection_id: z.string(),
  group_id: z.string(),
  RequestBody: z.lazy(() =>
    UpdateStatusPageComponentGroupRequestBody$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "nunc_connection_id": "nuncConnectionId",
    "group_id": "groupId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateStatusPageComponentGroupRequest$Outbound = {
  nunc_connection_id: string;
  group_id: string;
  RequestBody?: UpdateStatusPageComponentGroupRequestBody$Outbound | undefined;
};

/** @internal */
export const UpdateStatusPageComponentGroupRequest$outboundSchema: z.ZodType<
  UpdateStatusPageComponentGroupRequest$Outbound,
  z.ZodTypeDef,
  UpdateStatusPageComponentGroupRequest
> = z.object({
  nuncConnectionId: z.string(),
  groupId: z.string(),
  requestBody: z.lazy(() =>
    UpdateStatusPageComponentGroupRequestBody$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    nuncConnectionId: "nunc_connection_id",
    groupId: "group_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStatusPageComponentGroupRequest$ {
  /** @deprecated use `UpdateStatusPageComponentGroupRequest$inboundSchema` instead. */
  export const inboundSchema =
    UpdateStatusPageComponentGroupRequest$inboundSchema;
  /** @deprecated use `UpdateStatusPageComponentGroupRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateStatusPageComponentGroupRequest$outboundSchema;
  /** @deprecated use `UpdateStatusPageComponentGroupRequest$Outbound` instead. */
  export type Outbound = UpdateStatusPageComponentGroupRequest$Outbound;
}

export function updateStatusPageComponentGroupRequestToJSON(
  updateStatusPageComponentGroupRequest: UpdateStatusPageComponentGroupRequest,
): string {
  return JSON.stringify(
    UpdateStatusPageComponentGroupRequest$outboundSchema.parse(
      updateStatusPageComponentGroupRequest,
    ),
  );
}

export function updateStatusPageComponentGroupRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStatusPageComponentGroupRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateStatusPageComponentGroupRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStatusPageComponentGroupRequest' from JSON`,
  );
}
