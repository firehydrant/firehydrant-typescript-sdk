/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListCustomFieldSelectOptionsRequest = {
  fieldId: string;
  /**
   * Text string of a query for filtering values.
   */
  query?: string | null | undefined;
  /**
   * If true, return all versions of the custom field definition.
   */
  allVersions?: boolean | null | undefined;
};

/** @internal */
export const ListCustomFieldSelectOptionsRequest$inboundSchema: z.ZodType<
  ListCustomFieldSelectOptionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  field_id: z.string(),
  query: z.nullable(z.string()).optional(),
  all_versions: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    "field_id": "fieldId",
    "all_versions": "allVersions",
  });
});

/** @internal */
export type ListCustomFieldSelectOptionsRequest$Outbound = {
  field_id: string;
  query?: string | null | undefined;
  all_versions?: boolean | null | undefined;
};

/** @internal */
export const ListCustomFieldSelectOptionsRequest$outboundSchema: z.ZodType<
  ListCustomFieldSelectOptionsRequest$Outbound,
  z.ZodTypeDef,
  ListCustomFieldSelectOptionsRequest
> = z.object({
  fieldId: z.string(),
  query: z.nullable(z.string()).optional(),
  allVersions: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    fieldId: "field_id",
    allVersions: "all_versions",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCustomFieldSelectOptionsRequest$ {
  /** @deprecated use `ListCustomFieldSelectOptionsRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListCustomFieldSelectOptionsRequest$inboundSchema;
  /** @deprecated use `ListCustomFieldSelectOptionsRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListCustomFieldSelectOptionsRequest$outboundSchema;
  /** @deprecated use `ListCustomFieldSelectOptionsRequest$Outbound` instead. */
  export type Outbound = ListCustomFieldSelectOptionsRequest$Outbound;
}

export function listCustomFieldSelectOptionsRequestToJSON(
  listCustomFieldSelectOptionsRequest: ListCustomFieldSelectOptionsRequest,
): string {
  return JSON.stringify(
    ListCustomFieldSelectOptionsRequest$outboundSchema.parse(
      listCustomFieldSelectOptionsRequest,
    ),
  );
}

export function listCustomFieldSelectOptionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListCustomFieldSelectOptionsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListCustomFieldSelectOptionsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListCustomFieldSelectOptionsRequest' from JSON`,
  );
}
