/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PreviewTeamOnCallScheduleRequest = {
  teamId: string;
  previewTeamOnCallSchedule: components.PreviewTeamOnCallSchedule;
};

/** @internal */
export const PreviewTeamOnCallScheduleRequest$inboundSchema: z.ZodType<
  PreviewTeamOnCallScheduleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  team_id: z.string(),
  preview_team_on_call_schedule: z.lazy(() =>
    components.PreviewTeamOnCallSchedule$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "team_id": "teamId",
    "preview_team_on_call_schedule": "previewTeamOnCallSchedule",
  });
});

/** @internal */
export type PreviewTeamOnCallScheduleRequest$Outbound = {
  team_id: string;
  preview_team_on_call_schedule: components.PreviewTeamOnCallSchedule$Outbound;
};

/** @internal */
export const PreviewTeamOnCallScheduleRequest$outboundSchema: z.ZodType<
  PreviewTeamOnCallScheduleRequest$Outbound,
  z.ZodTypeDef,
  PreviewTeamOnCallScheduleRequest
> = z.object({
  teamId: z.string(),
  previewTeamOnCallSchedule: z.lazy(() =>
    components.PreviewTeamOnCallSchedule$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    teamId: "team_id",
    previewTeamOnCallSchedule: "preview_team_on_call_schedule",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PreviewTeamOnCallScheduleRequest$ {
  /** @deprecated use `PreviewTeamOnCallScheduleRequest$inboundSchema` instead. */
  export const inboundSchema = PreviewTeamOnCallScheduleRequest$inboundSchema;
  /** @deprecated use `PreviewTeamOnCallScheduleRequest$outboundSchema` instead. */
  export const outboundSchema = PreviewTeamOnCallScheduleRequest$outboundSchema;
  /** @deprecated use `PreviewTeamOnCallScheduleRequest$Outbound` instead. */
  export type Outbound = PreviewTeamOnCallScheduleRequest$Outbound;
}

export function previewTeamOnCallScheduleRequestToJSON(
  previewTeamOnCallScheduleRequest: PreviewTeamOnCallScheduleRequest,
): string {
  return JSON.stringify(
    PreviewTeamOnCallScheduleRequest$outboundSchema.parse(
      previewTeamOnCallScheduleRequest,
    ),
  );
}

export function previewTeamOnCallScheduleRequestFromJSON(
  jsonString: string,
): SafeParseResult<PreviewTeamOnCallScheduleRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PreviewTeamOnCallScheduleRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PreviewTeamOnCallScheduleRequest' from JSON`,
  );
}
