/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateIncidentChatMessageRequest = {
  messageId: string;
  incidentId: string;
  patchV1IncidentsIncidentIdGenericChatMessagesMessageId:
    components.PatchV1IncidentsIncidentIdGenericChatMessagesMessageId;
};

/** @internal */
export const UpdateIncidentChatMessageRequest$inboundSchema: z.ZodType<
  UpdateIncidentChatMessageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  message_id: z.string(),
  incident_id: z.string(),
  patchV1IncidentsIncidentIdGenericChatMessagesMessageId:
    components
      .PatchV1IncidentsIncidentIdGenericChatMessagesMessageId$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "message_id": "messageId",
    "incident_id": "incidentId",
  });
});

/** @internal */
export type UpdateIncidentChatMessageRequest$Outbound = {
  message_id: string;
  incident_id: string;
  patchV1IncidentsIncidentIdGenericChatMessagesMessageId:
    components.PatchV1IncidentsIncidentIdGenericChatMessagesMessageId$Outbound;
};

/** @internal */
export const UpdateIncidentChatMessageRequest$outboundSchema: z.ZodType<
  UpdateIncidentChatMessageRequest$Outbound,
  z.ZodTypeDef,
  UpdateIncidentChatMessageRequest
> = z.object({
  messageId: z.string(),
  incidentId: z.string(),
  patchV1IncidentsIncidentIdGenericChatMessagesMessageId:
    components
      .PatchV1IncidentsIncidentIdGenericChatMessagesMessageId$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    messageId: "message_id",
    incidentId: "incident_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentChatMessageRequest$ {
  /** @deprecated use `UpdateIncidentChatMessageRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentChatMessageRequest$inboundSchema;
  /** @deprecated use `UpdateIncidentChatMessageRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentChatMessageRequest$outboundSchema;
  /** @deprecated use `UpdateIncidentChatMessageRequest$Outbound` instead. */
  export type Outbound = UpdateIncidentChatMessageRequest$Outbound;
}

export function updateIncidentChatMessageRequestToJSON(
  updateIncidentChatMessageRequest: UpdateIncidentChatMessageRequest,
): string {
  return JSON.stringify(
    UpdateIncidentChatMessageRequest$outboundSchema.parse(
      updateIncidentChatMessageRequest,
    ),
  );
}

export function updateIncidentChatMessageRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentChatMessageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentChatMessageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentChatMessageRequest' from JSON`,
  );
}
