/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetTicketingProjectConfigRequest = {
  ticketingProjectId: string;
  configId: string;
};

/** @internal */
export const GetTicketingProjectConfigRequest$inboundSchema: z.ZodType<
  GetTicketingProjectConfigRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ticketing_project_id: z.string(),
  config_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "ticketing_project_id": "ticketingProjectId",
    "config_id": "configId",
  });
});

/** @internal */
export type GetTicketingProjectConfigRequest$Outbound = {
  ticketing_project_id: string;
  config_id: string;
};

/** @internal */
export const GetTicketingProjectConfigRequest$outboundSchema: z.ZodType<
  GetTicketingProjectConfigRequest$Outbound,
  z.ZodTypeDef,
  GetTicketingProjectConfigRequest
> = z.object({
  ticketingProjectId: z.string(),
  configId: z.string(),
}).transform((v) => {
  return remap$(v, {
    ticketingProjectId: "ticketing_project_id",
    configId: "config_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTicketingProjectConfigRequest$ {
  /** @deprecated use `GetTicketingProjectConfigRequest$inboundSchema` instead. */
  export const inboundSchema = GetTicketingProjectConfigRequest$inboundSchema;
  /** @deprecated use `GetTicketingProjectConfigRequest$outboundSchema` instead. */
  export const outboundSchema = GetTicketingProjectConfigRequest$outboundSchema;
  /** @deprecated use `GetTicketingProjectConfigRequest$Outbound` instead. */
  export type Outbound = GetTicketingProjectConfigRequest$Outbound;
}

export function getTicketingProjectConfigRequestToJSON(
  getTicketingProjectConfigRequest: GetTicketingProjectConfigRequest,
): string {
  return JSON.stringify(
    GetTicketingProjectConfigRequest$outboundSchema.parse(
      getTicketingProjectConfigRequest,
    ),
  );
}

export function getTicketingProjectConfigRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetTicketingProjectConfigRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetTicketingProjectConfigRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetTicketingProjectConfigRequest' from JSON`,
  );
}
