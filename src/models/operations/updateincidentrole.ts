/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateIncidentRoleRequest = {
  incidentRoleId: string;
  updateIncidentRole: components.UpdateIncidentRole;
};

/** @internal */
export const UpdateIncidentRoleRequest$inboundSchema: z.ZodType<
  UpdateIncidentRoleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  incident_role_id: z.string(),
  update_incident_role: z.lazy(() =>
    components.UpdateIncidentRole$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "incident_role_id": "incidentRoleId",
    "update_incident_role": "updateIncidentRole",
  });
});

/** @internal */
export type UpdateIncidentRoleRequest$Outbound = {
  incident_role_id: string;
  update_incident_role: components.UpdateIncidentRole$Outbound;
};

/** @internal */
export const UpdateIncidentRoleRequest$outboundSchema: z.ZodType<
  UpdateIncidentRoleRequest$Outbound,
  z.ZodTypeDef,
  UpdateIncidentRoleRequest
> = z.object({
  incidentRoleId: z.string(),
  updateIncidentRole: z.lazy(() =>
    components.UpdateIncidentRole$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    incidentRoleId: "incident_role_id",
    updateIncidentRole: "update_incident_role",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentRoleRequest$ {
  /** @deprecated use `UpdateIncidentRoleRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentRoleRequest$inboundSchema;
  /** @deprecated use `UpdateIncidentRoleRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateIncidentRoleRequest$outboundSchema;
  /** @deprecated use `UpdateIncidentRoleRequest$Outbound` instead. */
  export type Outbound = UpdateIncidentRoleRequest$Outbound;
}

export function updateIncidentRoleRequestToJSON(
  updateIncidentRoleRequest: UpdateIncidentRoleRequest,
): string {
  return JSON.stringify(
    UpdateIncidentRoleRequest$outboundSchema.parse(updateIncidentRoleRequest),
  );
}

export function updateIncidentRoleRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentRoleRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentRoleRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentRoleRequest' from JSON`,
  );
}
