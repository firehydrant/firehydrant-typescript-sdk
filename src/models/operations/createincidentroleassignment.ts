/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateIncidentRoleAssignmentRequest = {
  incidentId: string;
  postV1IncidentsIncidentIdRoleAssignments:
    components.PostV1IncidentsIncidentIdRoleAssignments;
};

/** @internal */
export const CreateIncidentRoleAssignmentRequest$inboundSchema: z.ZodType<
  CreateIncidentRoleAssignmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  incident_id: z.string(),
  postV1IncidentsIncidentIdRoleAssignments:
    components.PostV1IncidentsIncidentIdRoleAssignments$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "incident_id": "incidentId",
  });
});

/** @internal */
export type CreateIncidentRoleAssignmentRequest$Outbound = {
  incident_id: string;
  postV1IncidentsIncidentIdRoleAssignments:
    components.PostV1IncidentsIncidentIdRoleAssignments$Outbound;
};

/** @internal */
export const CreateIncidentRoleAssignmentRequest$outboundSchema: z.ZodType<
  CreateIncidentRoleAssignmentRequest$Outbound,
  z.ZodTypeDef,
  CreateIncidentRoleAssignmentRequest
> = z.object({
  incidentId: z.string(),
  postV1IncidentsIncidentIdRoleAssignments:
    components.PostV1IncidentsIncidentIdRoleAssignments$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    incidentId: "incident_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateIncidentRoleAssignmentRequest$ {
  /** @deprecated use `CreateIncidentRoleAssignmentRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateIncidentRoleAssignmentRequest$inboundSchema;
  /** @deprecated use `CreateIncidentRoleAssignmentRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateIncidentRoleAssignmentRequest$outboundSchema;
  /** @deprecated use `CreateIncidentRoleAssignmentRequest$Outbound` instead. */
  export type Outbound = CreateIncidentRoleAssignmentRequest$Outbound;
}

export function createIncidentRoleAssignmentRequestToJSON(
  createIncidentRoleAssignmentRequest: CreateIncidentRoleAssignmentRequest,
): string {
  return JSON.stringify(
    CreateIncidentRoleAssignmentRequest$outboundSchema.parse(
      createIncidentRoleAssignmentRequest,
    ),
  );
}

export function createIncidentRoleAssignmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateIncidentRoleAssignmentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateIncidentRoleAssignmentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateIncidentRoleAssignmentRequest' from JSON`,
  );
}
