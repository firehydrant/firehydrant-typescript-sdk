/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateMeasurementDefinitionRequestBody = {
  name: string;
  slug?: string | undefined;
  description?: string | undefined;
  startsAtMilestoneId: string;
  endsAtMilestoneId: string;
};

/** @internal */
export const CreateMeasurementDefinitionRequestBody$inboundSchema: z.ZodType<
  CreateMeasurementDefinitionRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  slug: z.string().optional(),
  description: z.string().optional(),
  starts_at_milestone_id: z.string(),
  ends_at_milestone_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "starts_at_milestone_id": "startsAtMilestoneId",
    "ends_at_milestone_id": "endsAtMilestoneId",
  });
});

/** @internal */
export type CreateMeasurementDefinitionRequestBody$Outbound = {
  name: string;
  slug?: string | undefined;
  description?: string | undefined;
  starts_at_milestone_id: string;
  ends_at_milestone_id: string;
};

/** @internal */
export const CreateMeasurementDefinitionRequestBody$outboundSchema: z.ZodType<
  CreateMeasurementDefinitionRequestBody$Outbound,
  z.ZodTypeDef,
  CreateMeasurementDefinitionRequestBody
> = z.object({
  name: z.string(),
  slug: z.string().optional(),
  description: z.string().optional(),
  startsAtMilestoneId: z.string(),
  endsAtMilestoneId: z.string(),
}).transform((v) => {
  return remap$(v, {
    startsAtMilestoneId: "starts_at_milestone_id",
    endsAtMilestoneId: "ends_at_milestone_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateMeasurementDefinitionRequestBody$ {
  /** @deprecated use `CreateMeasurementDefinitionRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    CreateMeasurementDefinitionRequestBody$inboundSchema;
  /** @deprecated use `CreateMeasurementDefinitionRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateMeasurementDefinitionRequestBody$outboundSchema;
  /** @deprecated use `CreateMeasurementDefinitionRequestBody$Outbound` instead. */
  export type Outbound = CreateMeasurementDefinitionRequestBody$Outbound;
}

export function createMeasurementDefinitionRequestBodyToJSON(
  createMeasurementDefinitionRequestBody:
    CreateMeasurementDefinitionRequestBody,
): string {
  return JSON.stringify(
    CreateMeasurementDefinitionRequestBody$outboundSchema.parse(
      createMeasurementDefinitionRequestBody,
    ),
  );
}

export function createMeasurementDefinitionRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateMeasurementDefinitionRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateMeasurementDefinitionRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateMeasurementDefinitionRequestBody' from JSON`,
  );
}
