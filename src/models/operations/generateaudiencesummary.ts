/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GenerateAudienceSummaryRequestBody = {
  /**
   * Whether to force regeneration of the summary
   */
  forceRegenerate?: boolean | null | undefined;
};

export type GenerateAudienceSummaryRequest = {
  /**
   * Unique identifier of the audience
   */
  audienceId: string;
  /**
   * Unique identifier of the incident to summarize
   */
  incidentId: string;
  requestBody?: GenerateAudienceSummaryRequestBody | undefined;
};

/** @internal */
export const GenerateAudienceSummaryRequestBody$inboundSchema: z.ZodType<
  GenerateAudienceSummaryRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  force_regenerate: z.nullable(z.boolean().default(true)),
}).transform((v) => {
  return remap$(v, {
    "force_regenerate": "forceRegenerate",
  });
});

/** @internal */
export type GenerateAudienceSummaryRequestBody$Outbound = {
  force_regenerate: boolean | null;
};

/** @internal */
export const GenerateAudienceSummaryRequestBody$outboundSchema: z.ZodType<
  GenerateAudienceSummaryRequestBody$Outbound,
  z.ZodTypeDef,
  GenerateAudienceSummaryRequestBody
> = z.object({
  forceRegenerate: z.nullable(z.boolean().default(true)),
}).transform((v) => {
  return remap$(v, {
    forceRegenerate: "force_regenerate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateAudienceSummaryRequestBody$ {
  /** @deprecated use `GenerateAudienceSummaryRequestBody$inboundSchema` instead. */
  export const inboundSchema = GenerateAudienceSummaryRequestBody$inboundSchema;
  /** @deprecated use `GenerateAudienceSummaryRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    GenerateAudienceSummaryRequestBody$outboundSchema;
  /** @deprecated use `GenerateAudienceSummaryRequestBody$Outbound` instead. */
  export type Outbound = GenerateAudienceSummaryRequestBody$Outbound;
}

export function generateAudienceSummaryRequestBodyToJSON(
  generateAudienceSummaryRequestBody: GenerateAudienceSummaryRequestBody,
): string {
  return JSON.stringify(
    GenerateAudienceSummaryRequestBody$outboundSchema.parse(
      generateAudienceSummaryRequestBody,
    ),
  );
}

export function generateAudienceSummaryRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<GenerateAudienceSummaryRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GenerateAudienceSummaryRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GenerateAudienceSummaryRequestBody' from JSON`,
  );
}

/** @internal */
export const GenerateAudienceSummaryRequest$inboundSchema: z.ZodType<
  GenerateAudienceSummaryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  audience_id: z.string(),
  incident_id: z.string(),
  RequestBody: z.lazy(() => GenerateAudienceSummaryRequestBody$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "audience_id": "audienceId",
    "incident_id": "incidentId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type GenerateAudienceSummaryRequest$Outbound = {
  audience_id: string;
  incident_id: string;
  RequestBody?: GenerateAudienceSummaryRequestBody$Outbound | undefined;
};

/** @internal */
export const GenerateAudienceSummaryRequest$outboundSchema: z.ZodType<
  GenerateAudienceSummaryRequest$Outbound,
  z.ZodTypeDef,
  GenerateAudienceSummaryRequest
> = z.object({
  audienceId: z.string(),
  incidentId: z.string(),
  requestBody: z.lazy(() => GenerateAudienceSummaryRequestBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    audienceId: "audience_id",
    incidentId: "incident_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateAudienceSummaryRequest$ {
  /** @deprecated use `GenerateAudienceSummaryRequest$inboundSchema` instead. */
  export const inboundSchema = GenerateAudienceSummaryRequest$inboundSchema;
  /** @deprecated use `GenerateAudienceSummaryRequest$outboundSchema` instead. */
  export const outboundSchema = GenerateAudienceSummaryRequest$outboundSchema;
  /** @deprecated use `GenerateAudienceSummaryRequest$Outbound` instead. */
  export type Outbound = GenerateAudienceSummaryRequest$Outbound;
}

export function generateAudienceSummaryRequestToJSON(
  generateAudienceSummaryRequest: GenerateAudienceSummaryRequest,
): string {
  return JSON.stringify(
    GenerateAudienceSummaryRequest$outboundSchema.parse(
      generateAudienceSummaryRequest,
    ),
  );
}

export function generateAudienceSummaryRequestFromJSON(
  jsonString: string,
): SafeParseResult<GenerateAudienceSummaryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GenerateAudienceSummaryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GenerateAudienceSummaryRequest' from JSON`,
  );
}
