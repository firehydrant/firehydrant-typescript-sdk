/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateChangeIdentityRequest = {
  changeId: string;
  postV1ChangesChangeIdIdentities: components.PostV1ChangesChangeIdIdentities;
};

/** @internal */
export const CreateChangeIdentityRequest$inboundSchema: z.ZodType<
  CreateChangeIdentityRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  change_id: z.string(),
  postV1ChangesChangeIdIdentities:
    components.PostV1ChangesChangeIdIdentities$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "change_id": "changeId",
  });
});

/** @internal */
export type CreateChangeIdentityRequest$Outbound = {
  change_id: string;
  postV1ChangesChangeIdIdentities:
    components.PostV1ChangesChangeIdIdentities$Outbound;
};

/** @internal */
export const CreateChangeIdentityRequest$outboundSchema: z.ZodType<
  CreateChangeIdentityRequest$Outbound,
  z.ZodTypeDef,
  CreateChangeIdentityRequest
> = z.object({
  changeId: z.string(),
  postV1ChangesChangeIdIdentities:
    components.PostV1ChangesChangeIdIdentities$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    changeId: "change_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateChangeIdentityRequest$ {
  /** @deprecated use `CreateChangeIdentityRequest$inboundSchema` instead. */
  export const inboundSchema = CreateChangeIdentityRequest$inboundSchema;
  /** @deprecated use `CreateChangeIdentityRequest$outboundSchema` instead. */
  export const outboundSchema = CreateChangeIdentityRequest$outboundSchema;
  /** @deprecated use `CreateChangeIdentityRequest$Outbound` instead. */
  export type Outbound = CreateChangeIdentityRequest$Outbound;
}

export function createChangeIdentityRequestToJSON(
  createChangeIdentityRequest: CreateChangeIdentityRequest,
): string {
  return JSON.stringify(
    CreateChangeIdentityRequest$outboundSchema.parse(
      createChangeIdentityRequest,
    ),
  );
}

export function createChangeIdentityRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateChangeIdentityRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateChangeIdentityRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateChangeIdentityRequest' from JSON`,
  );
}
