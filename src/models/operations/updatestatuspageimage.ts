/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { blobLikeSchema } from "../../types/blobs.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateStatusPageImageFile = {
  fileName: string;
  content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
};

export type UpdateStatusPageImageRequestBody = {
  file?: UpdateStatusPageImageFile | Blob | undefined;
};

export type UpdateStatusPageImageRequest = {
  nuncConnectionId: string;
  type: string;
  requestBody?: UpdateStatusPageImageRequestBody | undefined;
};

/** @internal */
export const UpdateStatusPageImageFile$inboundSchema: z.ZodType<
  UpdateStatusPageImageFile,
  z.ZodTypeDef,
  unknown
> = z.object({
  fileName: z.string(),
  content: z.union([
    z.instanceof(ReadableStream<Uint8Array>),
    z.instanceof(Blob),
    z.instanceof(ArrayBuffer),
    z.instanceof(Uint8Array),
  ]),
});

/** @internal */
export type UpdateStatusPageImageFile$Outbound = {
  fileName: string;
  content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
};

/** @internal */
export const UpdateStatusPageImageFile$outboundSchema: z.ZodType<
  UpdateStatusPageImageFile$Outbound,
  z.ZodTypeDef,
  UpdateStatusPageImageFile
> = z.object({
  fileName: z.string(),
  content: z.union([
    z.instanceof(ReadableStream<Uint8Array>),
    z.instanceof(Blob),
    z.instanceof(ArrayBuffer),
    z.instanceof(Uint8Array),
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStatusPageImageFile$ {
  /** @deprecated use `UpdateStatusPageImageFile$inboundSchema` instead. */
  export const inboundSchema = UpdateStatusPageImageFile$inboundSchema;
  /** @deprecated use `UpdateStatusPageImageFile$outboundSchema` instead. */
  export const outboundSchema = UpdateStatusPageImageFile$outboundSchema;
  /** @deprecated use `UpdateStatusPageImageFile$Outbound` instead. */
  export type Outbound = UpdateStatusPageImageFile$Outbound;
}

export function updateStatusPageImageFileToJSON(
  updateStatusPageImageFile: UpdateStatusPageImageFile,
): string {
  return JSON.stringify(
    UpdateStatusPageImageFile$outboundSchema.parse(updateStatusPageImageFile),
  );
}

export function updateStatusPageImageFileFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStatusPageImageFile, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateStatusPageImageFile$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStatusPageImageFile' from JSON`,
  );
}

/** @internal */
export const UpdateStatusPageImageRequestBody$inboundSchema: z.ZodType<
  UpdateStatusPageImageRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  file: z.lazy(() => UpdateStatusPageImageFile$inboundSchema).optional(),
});

/** @internal */
export type UpdateStatusPageImageRequestBody$Outbound = {
  file?: UpdateStatusPageImageFile$Outbound | Blob | undefined;
};

/** @internal */
export const UpdateStatusPageImageRequestBody$outboundSchema: z.ZodType<
  UpdateStatusPageImageRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateStatusPageImageRequestBody
> = z.object({
  file: z.lazy(() => UpdateStatusPageImageFile$outboundSchema).or(
    blobLikeSchema,
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStatusPageImageRequestBody$ {
  /** @deprecated use `UpdateStatusPageImageRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateStatusPageImageRequestBody$inboundSchema;
  /** @deprecated use `UpdateStatusPageImageRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateStatusPageImageRequestBody$outboundSchema;
  /** @deprecated use `UpdateStatusPageImageRequestBody$Outbound` instead. */
  export type Outbound = UpdateStatusPageImageRequestBody$Outbound;
}

export function updateStatusPageImageRequestBodyToJSON(
  updateStatusPageImageRequestBody: UpdateStatusPageImageRequestBody,
): string {
  return JSON.stringify(
    UpdateStatusPageImageRequestBody$outboundSchema.parse(
      updateStatusPageImageRequestBody,
    ),
  );
}

export function updateStatusPageImageRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStatusPageImageRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateStatusPageImageRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStatusPageImageRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateStatusPageImageRequest$inboundSchema: z.ZodType<
  UpdateStatusPageImageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  nunc_connection_id: z.string(),
  type: z.string(),
  RequestBody: z.lazy(() => UpdateStatusPageImageRequestBody$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "nunc_connection_id": "nuncConnectionId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateStatusPageImageRequest$Outbound = {
  nunc_connection_id: string;
  type: string;
  RequestBody?: UpdateStatusPageImageRequestBody$Outbound | undefined;
};

/** @internal */
export const UpdateStatusPageImageRequest$outboundSchema: z.ZodType<
  UpdateStatusPageImageRequest$Outbound,
  z.ZodTypeDef,
  UpdateStatusPageImageRequest
> = z.object({
  nuncConnectionId: z.string(),
  type: z.string(),
  requestBody: z.lazy(() => UpdateStatusPageImageRequestBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    nuncConnectionId: "nunc_connection_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStatusPageImageRequest$ {
  /** @deprecated use `UpdateStatusPageImageRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateStatusPageImageRequest$inboundSchema;
  /** @deprecated use `UpdateStatusPageImageRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateStatusPageImageRequest$outboundSchema;
  /** @deprecated use `UpdateStatusPageImageRequest$Outbound` instead. */
  export type Outbound = UpdateStatusPageImageRequest$Outbound;
}

export function updateStatusPageImageRequestToJSON(
  updateStatusPageImageRequest: UpdateStatusPageImageRequest,
): string {
  return JSON.stringify(
    UpdateStatusPageImageRequest$outboundSchema.parse(
      updateStatusPageImageRequest,
    ),
  );
}

export function updateStatusPageImageRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStatusPageImageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateStatusPageImageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStatusPageImageRequest' from JSON`,
  );
}
