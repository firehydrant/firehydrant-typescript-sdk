/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetRunbookStepVoteStatusRequest = {
  executionId: string;
  stepId: string;
};

/** @internal */
export const GetRunbookStepVoteStatusRequest$inboundSchema: z.ZodType<
  GetRunbookStepVoteStatusRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  execution_id: z.string(),
  step_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "execution_id": "executionId",
    "step_id": "stepId",
  });
});

/** @internal */
export type GetRunbookStepVoteStatusRequest$Outbound = {
  execution_id: string;
  step_id: string;
};

/** @internal */
export const GetRunbookStepVoteStatusRequest$outboundSchema: z.ZodType<
  GetRunbookStepVoteStatusRequest$Outbound,
  z.ZodTypeDef,
  GetRunbookStepVoteStatusRequest
> = z.object({
  executionId: z.string(),
  stepId: z.string(),
}).transform((v) => {
  return remap$(v, {
    executionId: "execution_id",
    stepId: "step_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRunbookStepVoteStatusRequest$ {
  /** @deprecated use `GetRunbookStepVoteStatusRequest$inboundSchema` instead. */
  export const inboundSchema = GetRunbookStepVoteStatusRequest$inboundSchema;
  /** @deprecated use `GetRunbookStepVoteStatusRequest$outboundSchema` instead. */
  export const outboundSchema = GetRunbookStepVoteStatusRequest$outboundSchema;
  /** @deprecated use `GetRunbookStepVoteStatusRequest$Outbound` instead. */
  export type Outbound = GetRunbookStepVoteStatusRequest$Outbound;
}

export function getRunbookStepVoteStatusRequestToJSON(
  getRunbookStepVoteStatusRequest: GetRunbookStepVoteStatusRequest,
): string {
  return JSON.stringify(
    GetRunbookStepVoteStatusRequest$outboundSchema.parse(
      getRunbookStepVoteStatusRequest,
    ),
  );
}

export function getRunbookStepVoteStatusRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetRunbookStepVoteStatusRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetRunbookStepVoteStatusRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetRunbookStepVoteStatusRequest' from JSON`,
  );
}
