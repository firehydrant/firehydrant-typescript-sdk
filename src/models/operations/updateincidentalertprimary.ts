/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateIncidentAlertPrimaryRequest = {
  incidentAlertId: string;
  incidentId: string;
  updateIncidentAlertPrimary: components.UpdateIncidentAlertPrimary;
};

/** @internal */
export const UpdateIncidentAlertPrimaryRequest$inboundSchema: z.ZodType<
  UpdateIncidentAlertPrimaryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  incident_alert_id: z.string(),
  incident_id: z.string(),
  update_incident_alert_primary: z.lazy(() =>
    components.UpdateIncidentAlertPrimary$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "incident_alert_id": "incidentAlertId",
    "incident_id": "incidentId",
    "update_incident_alert_primary": "updateIncidentAlertPrimary",
  });
});

/** @internal */
export type UpdateIncidentAlertPrimaryRequest$Outbound = {
  incident_alert_id: string;
  incident_id: string;
  update_incident_alert_primary: components.UpdateIncidentAlertPrimary$Outbound;
};

/** @internal */
export const UpdateIncidentAlertPrimaryRequest$outboundSchema: z.ZodType<
  UpdateIncidentAlertPrimaryRequest$Outbound,
  z.ZodTypeDef,
  UpdateIncidentAlertPrimaryRequest
> = z.object({
  incidentAlertId: z.string(),
  incidentId: z.string(),
  updateIncidentAlertPrimary: z.lazy(() =>
    components.UpdateIncidentAlertPrimary$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    incidentAlertId: "incident_alert_id",
    incidentId: "incident_id",
    updateIncidentAlertPrimary: "update_incident_alert_primary",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateIncidentAlertPrimaryRequest$ {
  /** @deprecated use `UpdateIncidentAlertPrimaryRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateIncidentAlertPrimaryRequest$inboundSchema;
  /** @deprecated use `UpdateIncidentAlertPrimaryRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateIncidentAlertPrimaryRequest$outboundSchema;
  /** @deprecated use `UpdateIncidentAlertPrimaryRequest$Outbound` instead. */
  export type Outbound = UpdateIncidentAlertPrimaryRequest$Outbound;
}

export function updateIncidentAlertPrimaryRequestToJSON(
  updateIncidentAlertPrimaryRequest: UpdateIncidentAlertPrimaryRequest,
): string {
  return JSON.stringify(
    UpdateIncidentAlertPrimaryRequest$outboundSchema.parse(
      updateIncidentAlertPrimaryRequest,
    ),
  );
}

export function updateIncidentAlertPrimaryRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateIncidentAlertPrimaryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateIncidentAlertPrimaryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateIncidentAlertPrimaryRequest' from JSON`,
  );
}
