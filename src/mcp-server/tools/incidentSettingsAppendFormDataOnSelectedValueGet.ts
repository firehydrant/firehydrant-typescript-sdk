/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { incidentSettingsAppendFormDataOnSelectedValueGet } from "../../funcs/incidentSettingsAppendFormDataOnSelectedValueGet.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.AppendFormDataOnSelectedValueGetRequest$inboundSchema,
};

export const tool$incidentSettingsAppendFormDataOnSelectedValueGet:
  ToolDefinition<typeof args> = {
    name: "incident-settings-append-form-data-on-selected-value-get",
    description: `Get data for a form field on select

Get data for a form field on select that should be appended to a form by using a template`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await incidentSettingsAppendFormDataOnSelectedValueGet(
          client,
          args.request,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
