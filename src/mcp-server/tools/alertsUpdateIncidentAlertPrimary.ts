/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { alertsUpdateIncidentAlertPrimary } from "../../funcs/alertsUpdateIncidentAlertPrimary.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.UpdateIncidentAlertPrimaryRequest$inboundSchema,
};

export const tool$alertsUpdateIncidentAlertPrimary: ToolDefinition<
  typeof args
> = {
  name: "alerts-update-incident-alert-primary",
  description: `Set an alert as primary for an incident

Setting an alert as primary will overwrite milestone times in the FireHydrant incident with times included in the primary alert. Services attached to the primary alert will also be automatically added to the incident.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await alertsUpdateIncidentAlertPrimary(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
